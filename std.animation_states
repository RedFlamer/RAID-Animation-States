<xml>

	<state name="death_exit" type="emptyloop" segment="base">
		<from_group name="std" blend="3" />
		<keys>
			<!-- The "full_blend" flag does not work for emptyloop states. "at" should be equal to/longer than the longest blend -->
			<key at="6" callback="anim_clbk_base_empty" class_name="anim_data"/>
			<key at="6" callback="anim_clbk_death_exit" class_name="anim_data"/>
			<key at="enter" set_extension="anim_data" extension_key="base_empty" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_empty" extension_value="false"/>
		</keys>
	</state>

	<state name="dummy_death_exit" type="emptyloop" segment="base">
		<default blend="0" />
	</state>

	<state name="std" type="template_state" segment="base">
		<default blend="12"/>
		<to name="reload" redirect="upper_body/stand_reload"/>
		<to name="recoil_turret_m2" redirect="upper_body/std/recoil/turret_m2"/>
		<to name="recoil_auto" redirect="upper_body/std/recoil/auto"/>
		<to name="recoil_single" redirect="upper_body/std/recoil/single"/>
		<to name="recoil_shotgun" redirect="upper_body/std/recoil/shotgun"/>
		<to name="equip" redirect="upper_body/equip"/>
		<to name="light_hurt" redirect="upper_body/hurt/stand/light"/>
		<to name="hurt" redirect="std/hurt/bullet"/>
		<to name="heavy_hurt" redirect="std/hurt/bullet"/>
		<to name="expl_hurt" redirect="std/hurt/explosion"/>
		<to name="fire_hurt" redirect="std/hurt/fire"/>
		<to name="shield_knock" redirect="std/hurt/shield_knock"/>
		<to name="hurt_sick" redirect="std/hurt/sick/enter"/>
		<to name="hurt_poison" redirect="std/hurt/poison/enter"/>
		<to name="counter_tased" redirect="std/hurt/counter_tased"/>
		<to name="taser" redirect="std/hurt/taser"/>
		<to name="death" redirect="std/death/bullet/still"/>
		<to name="death_run" redirect="std/death/bullet/run"/>
		<to name="death_fire" redirect="std/death/fire"/>
		<to name="dodge" redirect="std/dodge"/>
		<to name="suppressed_reaction" redirect="std/crouch/still/suppressed_reaction"/>
		<to name="heavy_run" redirect="std/hurt/bullet_run"/>

		<to name="cmd_stop" redirect="upper_body/cmd/stop"/>
		<to name="cmd_come" redirect="upper_body/cmd/come"/>
		<to name="cmd_get_up" redirect="upper_body/cmd/come"/>
		<to name="cmd_down" redirect="upper_body/cmd/down"/>
		<to name="cmd_point" redirect="upper_body/cmd/point"/>
		<to name="cmd_gogo" redirect="upper_body/cmd/point"/>
		<to name="melee" redirect="upper_body/melee"/>
		<to name="melee_husk" redirect="upper_body/melee_husk"/>
		<to name="melee_bayonet" redirect="upper_body/melee_bayonet"/>
		<to name="melee_item" redirect="upper_body/cmd/melee_item"/>
		<to name="throw_grenade" redirect="upper_body/throw_grenade"/>
		<to name="throw_grenade_charge" redirect="upper_body/throw_grenade_charge"/>


		<to name="hands_up" redirect="std/surrender/hands_up/enter"/>
		<to name="hands_back" redirect="std/surrender/hands_back/enter"/>
		<to name="tied" redirect="std/surrender/hands_tied/enter/from_hands_back"/>
		<to name="tied_all_in_one" redirect="std/surrender/hands_tied/enter/all_in_one/from_stand"/>

		<to name="attached_collar_enter" redirect="std/stand/still/attached_collar/enter"/>


		<to name="surprised" redirect="std/stand/still/surprised/enter"/>
		<to name="bleedout" redirect="std/bleedout/look/enter"/>
		<to name="fatal" redirect="std/fatal/loop"/>
		<to name="tased" redirect="std/tased/loop"/>
		<to name="arrest" redirect="upper_body/arrest"/>
		<to name="arrest_call" redirect="upper_body/arrest_call"/>
		<to name="gesture_stop" redirect="upper_body/stop"/>

		<to name="revive" redirect="std/interact/revive/enter"/>
		<to name="untie" redirect="std/interact/untie/enter"/>

		<to name="crouch" redirect="std/crouch/still/idle"/>
		<!-- <to name="prone" redirect="std/prone/still/idle"/> -->
		<to name="zipline" redirect="std/zipline/still/idle"/>

		<!-- Raid Vehicles -->

		<!-- Tiger Tank -->

		<to name="tiger_tank_commander" redirect="std/drive/tiger_tank_commander"/>
		<to name="tiger_tank_mg" redirect="std/drive/tiger_tank_mg"/>
		<to name="tiger_tank_driver" redirect="std/drive/tiger_tank_driver"/>
		<to name="tiger_tank_gunner" redirect="std/drive/tiger_tank_gunner"/>

		<to name="drive_kubelwagen_driver" redirect="std/drive/kubelwagen_driver"/>
		<to name="drive_kubelwagen_passanger" redirect="std/drive/kubelwagen_passenger"/>
		<to name="drive_kubelwagen_back_left" redirect="std/drive/kubelwagen_back_left"/>
		<to name="drive_kubelwagen_back_right" redirect="std/drive/kubelwagen_back_right"/>
		<to name="drive_kubelwagen_back_left_shooting" redirect="std/drive/kubelwagen_back_left_shooting"/>
		<to name="drive_kubelwagen_back_right_shooting" redirect="std/drive/kubelwagen_back_right_shooting"/>

		<to name="drive_truck_driver" redirect="std/drive/truck_driver"/>
		<to name="drive_truck_passanger" redirect="std/drive/truck_passenger"/>
		<to name="drive_truck_back_left" redirect="std/drive/truck_back_left"/>
		<to name="drive_truck_back_right" redirect="std/drive/truck_back_right"/>
		<!-- Raid Vehicles End -->
		
		<to name="freefall_fwd" redirect="std/freefall/fwd"/>
		<to name="freefall_l" redirect="std/freefall/l"/>
		<to name="freefall_r" redirect="std/freefall/r"/>
		<to name="freefall_to_parachute" redirect="std/freefall_to_parachute"/>
		<to name="parachute_fwd" redirect="std/parachute/fwd"/>
		<to name="parachute_l" redirect="std/parachute/l"/>
		<to name="parachute_r" redirect="std/parachute/r"/>	

		
		<to name="idle" redirect="std/stand/still/idle/look"/>
		<to name="exit" redirect="idle"/>

		<to name="turn_l" redirect="std/stand/still/turn/l"/>
		<to name="turn_r" redirect="std/stand/still/turn/r"/>

		<to name="walk_fwd" redirect="std/stand/move/walk/fwd"/>
		<to name="walk_bwd" redirect="std/stand/move/walk/bwd"/>
		<to name="walk_l" redirect="std/stand/move/walk/l"/>
		<to name="walk_r" redirect="std/stand/move/walk/r"/>

		<to name="walk_turn_l_lf" redirect="std/stand/move/walk/turn/l/lf"/>
		<to name="walk_turn_l_rf" redirect="std/stand/move/walk/turn/l/rf"/>
		<to name="walk_turn_r_lf" redirect="std/stand/move/walk/turn/r/lf"/>
		<to name="walk_turn_r_rf" redirect="std/stand/move/walk/turn/r/rf"/>

		<to name="sprint_fwd" redirect="std/stand/move/run/sprint/fwd"/>
		<to name="sprint_bwd" redirect="std/stand/move/run/sprint/bwd"/>
		<to name="sprint_l" redirect="std/stand/move/run/sprint/l"/>
		<to name="sprint_r" redirect="std/stand/move/run/sprint/r"/>

		<to name="run_fwd" redirect="std/stand/move/run/fwd"/>
		<to name="run_bwd" redirect="std/stand/move/run/bwd"/>
		<to name="run_l" redirect="std/stand/move/run/l"/>
		<to name="run_r" redirect="std/stand/move/run/r"/>

		<to name="run_start_fwd" redirect="std/stand/move/run/start/fwd"/>
		<to name="run_start_bwd" redirect="std/stand/move/run/start/bwd"/>
		<to name="run_start_l" redirect="std/stand/move/run/start/l"/>
		<to name="run_start_r" redirect="std/stand/move/run/start/r"/>

		<to name="run_start_turn_bwd" redirect="std/stand/move/run/start/turn/bwd"/>
		<to name="run_start_turn_l" redirect="std/stand/move/run/start/turn/l"/>
		<to name="run_start_turn_r" redirect="std/stand/move/run/start/turn/r"/>

		<to name="run_stop_fwd" redirect="std/stand/move/run/stop/fwd"/>
		<to name="run_stop_bwd" redirect="std/stand/move/run/stop/bwd"/>
		<to name="run_stop_l" redirect="std/stand/move/run/stop/l"/>
		<to name="run_stop_r" redirect="std/stand/move/run/stop/r"/>

		<to name="spooc_strike" redirect="std/stand/still/spooc/spooc_strike/enter"/>
		<to name="spooc_flying_strike" redirect="std/stand/still/spooc/spooc_flying_strike"/>

		<to name="sabotage_device_low" redirect="std/stand/still/sabotage/low"/>
		<to name="sabotage_device_mid" redirect="std/stand/still/sabotage/mid"/>
		<to name="sabotage_device_high" redirect="std/stand/still/sabotage/high"/>

		<!-- Spawn -->

		<!-- Raid Spawn Start -->

		<to name="e_sp_para_jump_100m" redirect="std/stand/spawn/cbt/e_sp_para_jump_100m"/>
		<to name="e_sp_freefall_150m_para_jump_50m" redirect="std/stand/spawn/cbt/e_sp_freefall_150m_para_jump_50m"/>
		<to name="e_sp_down_6m_drop" redirect="std/stand/spawn/cbt/e_sp_down_6m_drop"/>
		<to name="e_sp_climb_down_tiger_tank" redirect="std/stand/spawn/cbt/e_sp_climb_down_tiger_tank"/>
		<to name="e_sp_climb_up_tiger_tank" redirect="std/stand/spawn/cbt/e_sp_climb_up_tiger_tank"/>
		<to name="e_sp_up_1m_dwn_4_5m_var2" redirect="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_var2"/>
		<to name="e_sp_up_1m_dwn_4_5m_var3" redirect="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_var3"/>
		<to name="e_sp_dwn_6m" redirect="std/stand/spawn/cbt/e_sp_dwn_6m"/>
		<to name="e_sp_dwn_6m_var1" redirect="std/stand/spawn/cbt/e_sp_dwn_6m_var1"/>

		<to name="e_sp_hurt_stairs" redirect="std/stand/spawn/cbt/e_sp_hurt_stairs"/>
		<to name="e_sp_death_stairs" redirect="std/stand/spawn/cbt/e_sp_death_stairs"/>
		<to name="e_sp_door_tackle" redirect="std/stand/spawn/cbt/e_sp_door_tackle"/>
		<to name="e_sp_wall_down_3_7m_var4" redirect="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var4"/>
		<to name="e_sp_wall_down_3_7m_var3" redirect="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var3"/>
		<to name="e_sp_wall_down_3_7m_var2" redirect="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var2"/>
		<to name="e_sp_wall_down_3_7m_var1" redirect="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var1"/>
		<to name="e_sp_exit_crawl_sommelier" redirect="std/stand/spawn/cbt/e_sp_exit_crawl_sommelier"/>
		<to name="e_sp_wall_down_1m_fwd_2m_down_3_3m" redirect="std/stand/spawn/cbt/e_sp_wall_down_1m_fwd_2m_down_3_3m"/>
		<to name="e_sp_out_truck_l" redirect="std/stand/spawn/cbt/e_sp_out_truck_l"/>
		
		<to name="e_sp_fall_back" redirect="std/stand/spawn/cbt/e_sp_fall_back"/>
		<to name="e_sp_up_1_down_4m" redirect="std/stand/spawn/cbt/e_sp_up_1_down_4m"/>
		<to name="e_sp_down_1_30m" redirect="std/stand/spawn/cbt/e_sp_down_1_30m"/>
		<to name="e_sp_down_1_30m_var1" redirect="std/stand/spawn/cbt/e_sp_down_1_30m_var1"/>
		<to name="e_sp_2_50m_fwd_1_30m_down" redirect="std/stand/spawn/cbt/e_sp_2_50m_fwd_1_30m_down"/>
		<to name="e_sp_2_50m_fwd_1_30m_down_var1" redirect="std/stand/spawn/cbt/e_sp_2_50m_fwd_1_30m_down_var1"/>
		<to name="e_sp_10m_turn_r_2m" redirect="std/stand/spawn/cbt/e_sp_10m_turn_r_2m"/>
		<to name="e_sp_10m_turn_r_2m_var1" redirect="std/stand/spawn/cbt/e_sp_10m_turn_r_2m_var1"/>
		<to name="e_sp_fwd_9m" redirect="std/stand/spawn/cbt/e_sp_fwd_9m"/>
		<to name="e_sp_fwd_9m_var1" redirect="std/stand/spawn/cbt/e_sp_fwd_9m_var1"/>
		<to name="e_sp_fwd_9m_var2" redirect="std/stand/spawn/cbt/e_sp_fwd_9m_var2"/>
		<to name="e_sp_fwd_9m_var3" redirect="std/stand/spawn/cbt/e_sp_fwd_9m_var3"/>
		<to name="e_sp_fwd_9m_var4" redirect="std/stand/spawn/cbt/e_sp_fwd_9m_var4"/>
		<to name="e_sp_fwd_9m_var5" redirect="std/stand/spawn/cbt/e_sp_fwd_9m_var5"/>
		<to name="e_sp_up_3m_down_1m" redirect="std/stand/spawn/cbt/e_sp_up_3m_down_1m"/>
		<to name="e_sp_up_3m_down_1m_var1" redirect="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var1"/>
		<to name="e_sp_up_3m_down_1m_var2" redirect="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var2"/>
		<to name="e_sp_up_3m_down_1m_var3" redirect="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var3"/>
		<to name="e_sp_up_3_down_1_2m" redirect="std/stand/spawn/cbt/e_sp_up_3_down_1_2m"/>
		<to name="e_sp_up_3_down_1_7m" redirect="std/stand/spawn/cbt/e_sp_up_3_down_1_7m"/>
		<to name="e_sp_climb_over_1_75m" redirect="std/stand/spawn/cbt/e_sp_climb_over_1_75m"/>
		<to name="e_sp_climb_over_1_75m_var1" redirect="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var1"/>
		<to name="e_sp_climb_over_1_75m_var2" redirect="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var2"/>
		<to name="e_sp_climb_over_1_75m_var3" redirect="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var3"/>
		<to name="e_sp_climb_over_1_75m_var4" redirect="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var4"/>

		<to name="e_sp_run_fwd_on_fire_die_var1" redirect="std/stand/spawn/cbt/e_sp_run_fwd_on_fire_die_var1"/>
		<to name="e_sp_run_fwd_on_fire_die_var2" redirect="std/stand/spawn/cbt/e_sp_run_fwd_on_fire_die_var2"/>
		<to name="e_sp_fall_out_of_bunker_fire_dth_var1" redirect="std/stand/spawn/cbt/e_sp_fall_out_of_bunker_fire_dth_var1"/>
		<to name="e_sp_fall_out_of_bunker_fire_dth_var2" redirect="std/stand/spawn/cbt/e_sp_fall_out_of_bunker_fire_dth_var2"/>
		<to name="e_sp_climb_over_2m_var1" redirect="std/stand/spawn/cbt/e_sp_climb_over_2m_var1"/>
		<to name="e_sp_climb_over_2m_var2" redirect="std/stand/spawn/cbt/e_sp_climb_over_2m_var2"/>
		<to name="e_sp_climb_over_2m_var3" redirect="std/stand/spawn/cbt/e_sp_climb_over_2m_var3"/>
		<to name="e_sp_climb_over_3m_var2" redirect="std/stand/spawn/cbt/e_sp_climb_over_3m_var2"/>
		<to name="e_sp_climb_over_3m_var3" redirect="std/stand/spawn/cbt/e_sp_climb_over_3m_var3"/>
		<to name="e_sp_climb_over_3m_var4" redirect="std/stand/spawn/cbt/e_sp_climb_over_3m_var4"/>
		<to name="e_sp_climb_over_2_30m" redirect="std/stand/spawn/cbt/e_sp_climb_over_2_30m"/>
		<to name="e_sp_climb_over_2_30m_var1" redirect="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var1"/>
		<to name="e_sp_climb_over_2_30m_var2" redirect="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var2"/>
		<to name="e_sp_climb_over_2_30m_var3" redirect="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var3"/>

		<to name="e_sp_turn_up_1m_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m"/>
		<to name="e_sp_turn_up_1m_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var1"/>
		<to name="e_sp_turn_up_1m_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var2"/>
		<to name="e_sp_turn_up_1m_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var3"/>
		<to name="e_sp_turn_r_2m_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m"/>
		<to name="e_sp_turn_r_2m_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var1"/>
		<to name="e_sp_turn_r_2m_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var2"/>
		<to name="e_sp_turn_r_2m_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var3"/>
		<to name="e_sp_turn_l_3m_fwd_up_1m_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m"/>
		<to name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var1"/>
		<to name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var2"/>
		<to name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var3"/>
		<to name="e_sp_turn_l_8m_fwd_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m"/>
		<to name="e_sp_turn_l_8m_fwd_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var1"/>
		<to name="e_sp_turn_l_8m_fwd_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var2"/>
		<to name="e_sp_turn_l_8m_fwd_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var3"/>
		<to name="e_sp_turn_r_up_1m_down_5m" redirect="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m"/>
		<to name="e_sp_turn_r_up_1m_down_5m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var1"/>
		<to name="e_sp_turn_r_up_1m_down_5m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var2"/>
		<to name="e_sp_turn_r_up_1m_down_5m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var3"/>
		<to name="e_sp_turn_l_fwd_2m_up_1m_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m"/>
		<to name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var1"/>
		<to name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var2"/>
		<to name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var3"/>
		<to name="e_sp_turn_l_fwd_up_1m_down_4m" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m"/>
		<to name="e_sp_turn_l_fwd_up_1m_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var1"/>
		<to name="e_sp_turn_l_fwd_up_1m_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var2"/>
		<to name="e_sp_turn_l_fwd_up_1m_down_4m_var3" redirect="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var3"/>
		<to name="e_sp_fwd_turn_l_over_1m" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m"/>
		<to name="e_sp_fwd_turn_l_over_1m_var1" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var1"/>
		<to name="e_sp_fwd_turn_l_over_1m_var2" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var2"/>
		<to name="e_sp_fwd_turn_l_over_1m_var3" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var3"/>
		<to name="e_sp_fwd_turn_l_over_1m_var4" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var4"/>
		<to name="e_sp_fwd_turn_l_over_1m_var5" redirect="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var5"/>


		<!-- Raid Spawn Exit -->



		<to name="e_sp_car_exit_to_cbt_front_l" redirect="std/stand/spawn/cbt/exit_car_front_l"/>
		<to name="e_sp_car_exit_to_cbt_front_r" redirect="std/stand/spawn/cbt/exit_car_front_r"/>
		<to name="e_sp_car_exit_to_cbt_front_l_var2" redirect="std/stand/spawn/cbt/exit_car_front_l_var2"/>
		<to name="e_sp_car_exit_to_cbt_front_r_var2" redirect="std/stand/spawn/cbt/exit_car_front_r_var2"/>
		<to name="e_sp_car_exit_to_cbt_front_l_var3" redirect="std/stand/spawn/cbt/exit_car_front_l_var3"/>
		<to name="e_sp_car_exit_to_cbt_front_r_var3" redirect="std/stand/spawn/cbt/exit_car_front_r_var3"/>

		<to name="e_sp_jump_down_heli_cbt_right" redirect="std/stand/spawn/cbt/e_sp_jump_down_heli_right"/>
		<to name="e_sp_jump_down_heli_cbt_left" redirect="std/stand/spawn/cbt/e_sp_jump_down_heli_left"/>
		<to name="e_sp_aim_rifle_crh" redirect="std/stand/spawn/cbt/e_sp_aim_rifle_crh"/>
		<to name="e_sp_aim_rifle_std" redirect="std/stand/spawn/cbt/e_sp_aim_rifle_std"/>
		<to name="e_sp_hurt_from_truck" redirect="std/stand/spawn/cbt/e_sp_hurt_from_truck"/>
		<to name="e_sp_crh_to_std_rifle" redirect="std/stand/spawn/cbt/e_sp_crh_to_std_rifle"/>

		<to name="e_sp_down_12m" redirect="std/stand/spawn/cbt/down_12m"/>
		<to name="e_sp_down_16m" redirect="std/stand/spawn/cbt/down_16m"/>
		<to name="e_sp_down_17m" redirect="std/stand/spawn/cbt/down_17m"/>
		<to name="e_sp_down_17m_var2" redirect="std/stand/spawn/cbt/down_17m_var2"/>
		<to name="e_sp_up_1_down_9_25m" redirect="std/stand/spawn/cbt/up_1_down_9_25m"/>
		<to name="e_sp_up_2_75_down_1_25m" redirect="std/stand/spawn/cbt/up_2_75_down_1_25m"/>
		<to name="e_sp_dwn_10_25m" redirect="std/stand/spawn/cbt/e_sp_dwn_10_25m"/>
		<to name="e_sp_dwn_11m" redirect="std/stand/spawn/cbt/e_sp_dwn_11m"/>
		<to name="e_sp_car_exit_ntrl_front_r" redirect="std/stand/spawn/cbt/e_sp_car_exit_ntrl_front_r"/>
		<to name="e_sp_car_exit_ntrl_front_l" redirect="std/stand/spawn/cbt/e_sp_car_exit_ntrl_front_l"/>
		<to name="e_sp_down_5_5m" redirect="std/stand/spawn/cbt/e_sp_down_5_5m"/>
		<to name="e_sp_down_6m" redirect="std/stand/spawn/cbt/e_sp_down_6m"/>
		<to name="e_sp_up_ledge" redirect="std/stand/spawn/cbt/e_sp_up_ledge"/>
		<to name="e_sp_stumble_var2" redirect="std/stand/spawn/cbt/e_sp_stumble_var2"/>
		<to name="e_sp_stumble_var1" redirect="std/stand/spawn/cbt/e_sp_stumble_var1"/>
		<to name="e_sp_up_1_down_9m" redirect="std/stand/spawn/cbt/e_sp_up_1_down_9m"/>
		<to name="e_sp_up_1_5_down_9m" redirect="std/stand/spawn/cbt/e_sp_up_1_5_down_9m"/>
		<to name="e_sp_over_3_35m" redirect="std/stand/spawn/cbt/e_sp_over_3_35m"/>
		<to name="e_sp_run_2m_turn_r_10m" redirect="std/stand/spawn/cbt/e_sp_run_2m_turn_r_10m"/>
		<to name="e_sp_run_2m_turn_l_10m" redirect="std/stand/spawn/cbt/e_sp_run_2m_turn_l_10m"/>
		<to name="e_sp_run_2m_turn_r_14m" redirect="std/stand/spawn/cbt/e_sp_run_2m_turn_r_14m"/>
		<to name="e_sp_run_2m_turn_l_14m" redirect="std/stand/spawn/cbt/e_sp_run_2m_turn_l_14m"/>
		
		<to name="e_sp_over_3m" redirect="std/stand/spawn/cbt/e_sp_over_3m"/>
		<to name="e_sp_over_3m_fwd_4m" redirect="std/stand/spawn/cbt/e_sp_over_3m_fwd_4m"/>
		<to name="e_sp_over_3m_fwd_2m_roll" redirect="std/stand/spawn/cbt/e_sp_over_3m_fwd_2m_roll"/>
		<to name="e_sp_climb_over_2m" redirect="std/stand/spawn/cbt/e_sp_climb_over_2m"/>
		<to name="e_sp_up_1_down_13m" redirect="std/stand/spawn/cbt/e_sp_up_1_down_13m"/>
		<to name="e_sp_down_8m" redirect="std/stand/spawn/cbt/e_sp_down_8m"/>
		<to name="e_sp_down_12m_var2" redirect="std/stand/spawn/cbt/e_sp_down_12m_var2"/>
		<to name="e_sp_down_4m_var2" redirect="std/stand/spawn/cbt/e_sp_down_4m_var2"/>
		<to name="e_sp_down_4m_var1" redirect="std/stand/spawn/cbt/e_sp_down_4m_var1"/>
		<to name="e_sp_dwn_5m" redirect="std/stand/spawn/cbt/e_sp_dwn_5m"/>
		<to name="e_sp_dwn_11m_var2" redirect="std/stand/spawn/cbt/e_sp_dwn_11m_var2"/>
		<to name="e_sp_dwn_10m" redirect="std/stand/spawn/cbt/e_sp_dwn_10m"/>
		<to name="e_sp_run_jump_far" redirect="std/stand/spawn/cbt/e_sp_run_jump_far"/>
		<to name="e_sp_down_9_6m" redirect="std/stand/spawn/cbt/e_sp_down_9_6m"/>
		<to name="e_sp_down_8m_var2" redirect="std/stand/spawn/cbt/e_sp_down_8m_var2"/>
		<to name="e_sp_repel_into_window" redirect="std/stand/spawn/cbt/e_sp_repel_into_window"/>
		<to name="e_sp_down_16m_right" redirect="std/stand/spawn/cbt/e_sp_down_16m_right"/>
		<to name="e_sp_down_16m_left" redirect="std/stand/spawn/cbt/e_sp_down_16m_left"/>
		<to name="e_sp_up_1_down_9m_var2" redirect="std/stand/spawn/cbt/e_sp_up_1_down_9m_var2"/>
		<to name="e_sp_up_1_down_9m_var3" redirect="std/stand/spawn/cbt/e_sp_up_1_down_9m_var3"/>
		<to name="e_sp_down_8m_var3" redirect="std/stand/spawn/cbt/e_sp_down_8m_var3"/>
		<to name="e_sp_armored_truck_1st" redirect="std/stand/spawn/cbt/e_sp_armored_truck_1st"/>
		<to name="e_sp_armored_truck_2nd" redirect="std/stand/spawn/cbt/e_sp_armored_truck_2nd"/>
		<to name="e_sp_armored_truck_3rd" redirect="std/stand/spawn/cbt/e_sp_armored_truck_3rd"/>
		<to name="e_sp_dizzy_stand" redirect="std/stand/spawn/cbt/e_sp_dizzy_stand"/>
		<to name="e_sp_dizzy_get_up" redirect="std/stand/spawn/cbt/e_sp_dizzy_get_up"/>
		<to name="e_sp_dizzy_walk_left" redirect="std/stand/spawn/cbt/e_sp_dizzy_walk_left"/>
		<to name="e_sp_dizzy_walk_right" redirect="std/stand/spawn/cbt/e_sp_dizzy_walk_right"/>
		<to name="e_sp_dizzy_fall_get_up" redirect="std/stand/spawn/cbt/e_sp_dizzy_fall_get_up"/>
		<to name="e_sp_dizzy_stand_v2" redirect="std/stand/spawn/cbt/e_sp_dizzy_stand_v2"/>
		<to name="e_sp_dizzy_walk_inplace" redirect="std/stand/spawn/cbt/e_sp_dizzy_walk_inplace"/>
		<to name="e_sp_dizzy_look_around" redirect="std/stand/spawn/cbt/e_sp_dizzy_look_around"/>
		<to name="e_sp_clk_3m_dwn_vent" redirect="std/stand/spawn/cbt/e_sp_clk_3m_dwn_vent"/>
		<to name="e_sp_clk_3_5m_dwn_vent" redirect="std/stand/spawn/cbt/e_sp_clk_3_5m_dwn_vent"/>
		<to name="e_sp_clk_3_5m_dwn_vent_var2" redirect="std/stand/spawn/cbt/e_sp_clk_3_5m_dwn_vent_var2"/>
		<to name="e_sp_clk_up_manhole" redirect="std/stand/spawn/cbt/e_sp_clk_up_manhole"/>
		<to name="e_sp_clk_up_water" redirect="std/stand/spawn/cbt/e_sp_clk_up_water"/>
		<to name="e_sp_clk_over_2_5m" redirect="std/stand/spawn/cbt/e_sp_clk_over_2_5m"/>
		<to name="e_sp_clk_jump_dwn_5m_heli_l" redirect="std/stand/spawn/cbt/e_sp_clk_jump_dwn_5m_heli_l"/>
		<to name="e_sp_clk_4_5m_dwn_vent" redirect="std/stand/spawn/cbt/e_sp_clk_4_5m_dwn_vent"/>
		<to name="e_sp_unarmed_helicopter_step_out1" redirect="std/stand/spawn/e_sp_unarmed_helicopter_step_out1"/>
		<to name="e_sp_unarmed_helicopter_step_out2" redirect="std/stand/spawn/e_sp_unarmed_helicopter_step_out2"/>
		<to name="e_sp_elevator_escape" redirect="std/stand/spawn/e_sp_elevator_escape"/>
		<to name="e_sp_bulldozer_turn_chair" redirect="std/stand/spawn/cbt/e_sp_bulldozer_turn_chair"/>
		<to name="e_sp_clk_exit_vent_1_5m" redirect="std/stand/spawn/cbt/e_sp_clk_exit_vent_1_5m"/>
		<to name="e_sp_ss_dropbag" redirect="std/stand/spawn/ntl/e_sp_ss_dropbag"/>
		<to name="e_sp_ss_exitcar_right" redirect="std/stand/spawn/ntl/e_sp_ss_exitcar_right"/>
		<to name="e_sp_over_1m_dwn_7m" redirect="std/stand/spawn/cbt/e_sp_over_1m_dwn_7m"/>
		<to name="e_sp_over_1m_swing_dwn_7m_window" redirect="std/stand/spawn/cbt/e_sp_over_1m_swing_dwn_7m_window"/>
		<to name="e_sp_swing_dwn_7m_window" redirect="std/stand/spawn/cbt/e_sp_swing_dwn_7m_window"/>
		<to name="e_sp_kick_enter" redirect="std/stand/spawn/cbt/kick_enter"/>
		<to name="e_sp_fwd_5m_dwn_11m" redirect="std/stand/spawn/cbt/e_sp_fwd_5m_dwn_11m"/>
		<to name="e_sp_up_1m_dwn_4_5m_roll" redirect="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_roll"/>
		<to name="e_sp_up_1m_dwn_4_5m" redirect="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m"/>
		<to name="e_sp_fwd_4m_jump_dwn_4_5m" redirect="std/stand/spawn/cbt/e_sp_fwd_4m_jump_dwn_4_5m"/>
		<to name="e_sp_kick_enter_bulldozer" redirect="std/stand/spawn/cbt/e_sp_kick_enter_bulldozer"/>
		<to name="e_sp_over_1m_dwn_12m" redirect="std/stand/spawn/cbt/e_sp_over_1m_dwn_12m"/>
		<to name="e_sp_up_ 2_75_fwd_2_7_dwn_2_75m" redirect="std/stand/spawn/cbt/e_sp_up_ 2_75_fwd_2_7_dwn_2_75m"/>
		<to name="e_sp_dwn_22m" redirect="std/stand/spawn/cbt/e_sp_dwn_22m"/>
		<to name="e_sp_dwn_21m" redirect="std/stand/spawn/cbt/e_sp_dwn_21m"/>
		<to name="e_sp_climb_over_4m" redirect="std/stand/spawn/cbt/e_sp_climb_over_4m"/>
		<to name="e_sp_barn_door_open_r" redirect="std/stand/spawn/cbt/e_sp_barn_door_open_r"/>
		<to name="e_sp_barn_door_open_l" redirect="std/stand/spawn/cbt/e_sp_barn_door_open_l"/>
		

		<!-- Nav-Links -->

		<to name="e_nl_ss_run_dunk_hood" redirect="std/stand/nav_link/e_nl_ss_run_dunk_hood"/>
		<to name="animation_test" redirect="test/animation_test"/>

		

		<to name="e_nl_climb_over_3m" redirect="std/stand/nav_link/e_nl_climb_over_3m"/>
		<to name="e_nl_up_1m_dwn_9m" redirect="std/stand/nav_link/e_nl_up_1m_dwn_9m"/>
		<to name="e_nl_over_3m_fwd_4m" redirect="std/stand/nav_link/e_nl_over_3m_fwd_4m"/>
		<to name="e_nl_over_3m_fwd_2m_roll" redirect="std/stand/nav_link/e_nl_over_3m_fwd_2m_roll"/>
		<to name="e_nl_up_2_down_8_2m" redirect="std/stand/nav_link/e_nl_up_2_down_8_2m"/>
		<to name="e_nl_up_8m_right_2m_over_1m" redirect="std/stand/nav_link/e_nl_up_8m_right_2m_over_1m"/>
		<to name="e_nl_up_8m_left_2m_over_1m" redirect="std/stand/nav_link/e_nl_up_8m_left_2m_over_1m"/>
		<to name="e_nl_under_0_7m" redirect="std/stand/nav_link/e_nl_under_0_7m"/>
		<to name="e_nl_climb_over_2m" redirect="std/stand/nav_link/climb_over_2m"/>
		<to name="e_nl_jump_over_1m_var1" redirect="std/stand/nav_link/jump_over_1m_var1"/>
		<to name="e_nl_jump_over_1m_var2" redirect="std/stand/nav_link/jump_over_1m_var2"/>
		<to name="e_nl_over_and_fwd_1m_var2" redirect="std/stand/nav_link/e_nl_over_and_fwd_1m_var2"/>
		<to name="e_nl_over_and_fwd_1m" redirect="std/stand/nav_link/e_nl_over_and_fwd_1m"/>
		<to name="e_nl_jump_down_2_5m" redirect="std/stand/nav_link/jump_down_2_5m"/>
		<to name="e_nl_down_5_5m" redirect="std/stand/nav_link/down_5_5m"/>
		<to name="e_nl_down_5_5m_var2" redirect="std/stand/nav_link/down_5_5m_var2"/>
		<to name="e_nl_down_4m" redirect="std/stand/nav_link/down_4m"/>
		<to name="e_nl_up_0_8_down_1_25m" redirect="std/stand/nav_link/up_0_8_down_1_25m"/>
		<to name="e_nl_up_1_25_down_0_8m" redirect="std/stand/nav_link/up_1_25_down_0_8m"/>
		<to name="e_nl_up_5_down_1m" redirect="std/stand/nav_link/up_5_down_1m"/>
		<to name="e_nl_down_1_75m" redirect="std/stand/nav_link/down_1_75m"/>
		<to name="e_nl_up_1_75m" redirect="std/stand/nav_link/up_1_75m"/>
		<to name="e_nl_up_1_75m_var1" redirect="std/stand/nav_link/up_1_75m_var1"/>
		<to name="e_nl_up_1_5m_dwn_1m" redirect="std/stand/nav_link/e_nl_up_1_5m_dwn_1m"/>
		<to name="e_nl_kick_enter" redirect="std/stand/nav_link/kick_enter"/>
		<to name="e_nl_kick_enter_special" redirect="std/stand/nav_link/kick_enter_special"/>
		<to name="e_nl_open_door" redirect="std/stand/nav_link/open_door"/>
		<to name="e_nl_down_4_25m" redirect="std/stand/nav_link/down_4_25m"/>
		<to name="e_nl_down_2_75m" redirect="std/stand/nav_link/down_2_75m"/>
		<to name="e_nl_up_2_75m" redirect="std/stand/nav_link/up_2_75m"/>
		<to name="e_nl_down_5m" redirect="std/stand/nav_link/down_5m"/>
		<to name="e_nl_down_7m" redirect="std/stand/nav_link/down_7m"/>
		<to name="e_nl_down_4_fwd_4m" redirect="std/stand/nav_link/down_4_fwd_4m"/>
		<to name="e_nl_fwd_4m" redirect="std/stand/nav_link/fwd_4m"/>
		<to name="e_nl_fwd_2m" redirect="std/stand/nav_link/fwd_2m"/>
		<to name="e_nl_down_stairs_4m" redirect="std/stand/nav_link/e_nl_down_stairs_4m"/>
		<to name="e_nl_jump_over_1m_shoot" redirect="std/stand/nav_link/e_nl_jump_over_1m_shoot"/>
		<to name="e_nl_press_button_enter" redirect="std/stand/nav_link/e_nl_press_button_enter"/>
		<to name="e_nl_up_1_down_5m" redirect="std/stand/nav_link/up_1_down_5m"/>
		<to name="e_nl_up_1_down_3m" redirect="std/stand/nav_link/up_1_down_3m"/>
		<to name="e_nl_up_1_down_13m" redirect="std/stand/nav_link/up_1_down_13m"/>
		<to name="e_nl_up_1_down_15_50m" redirect="std/stand/nav_link/e_nl_up_1_down_15_50m"/>
		<to name="e_nl_up_1_down_8m" redirect="std/stand/nav_link/e_nl_up_1_down_8m"/>
		<to name="e_nl_up_1_down_9m" redirect="std/stand/nav_link/up_1_down_9m"/>
		<to name="e_nl_up_4_6_down_0_6m" redirect="std/stand/nav_link/up_4_6_down_0_6m"/>
		<to name="e_nl_up_4m_down_1m" redirect="std/stand/nav_link/e_nl_up_4m_down_1m"/>
		<to name="e_nl_up_6m" redirect="std/stand/nav_link/up_6m"/>
		<to name="e_nl_up_6m_var2" redirect="std/stand/nav_link/up_6m_var2"/>
		<to name="e_nl_up_6m_var3" redirect="std/stand/nav_link/up_6m_var3"/>
		<to name="e_nl_up_12m" redirect="std/stand/nav_link/up_12m"/>
		<to name="e_nl_up_rats_roof" redirect="std/stand/nav_link/up_rats_roof"/>
		<to name="e_nl_over_3_35m" redirect="std/stand/nav_link/over_3_35m"/>
		<to name="e_nl_10m_turn_r_2m" redirect="std/stand/nav_link/e_nl_10m_turn_r_2m"/>
		<to name="e_nl_10m_turn_l_2m" redirect="std/stand/nav_link/e_nl_10m_turn_l_2m"/>
		<to name="e_nl_down_2_7_fwd_2m" redirect="std/stand/nav_link/down_2_7_fwd_2m"/>
		<to name="e_nl_up_3_down_1m" redirect="std/stand/nav_link/up_3_down_1m"/>
		<to name="e_nl_plant_run_through" redirect="std/stand/nav_link/plant_run_through"/>
		<to name="e_nl_down_8m" redirect="std/stand/nav_link/e_nl_down_8m"/>
		<to name="e_nl_down_8m_var3" redirect="std/stand/nav_link/e_nl_down_8m_var3"/>
		<to name="e_nl_ladder_up_16m" redirect="std/stand/nav_link/e_nl_ladder_up_16m"/>
		<to name="e_nl_ladder_dwn_16m" redirect="std/stand/nav_link/e_nl_ladder_dwn_16m"/>
		<to name="e_nl_down_12m" redirect="std/stand/nav_link/e_nl_down_12m"/>
		<to name="e_nl_down_19m" redirect="std/stand/nav_link/e_nl_down_19m"/>
		<to name="e_nl_down_2m" redirect="std/stand/nav_link/e_nl_down_2m"/>
		<to name="e_nl_down_1_25m" redirect="std/stand/nav_link/e_nl_down_1_25m"/>
		<to name="e_nl_up_1_5m" redirect="std/stand/nav_link/e_nl_up_1_5m"/>
		<to name="e_nl_up_1_5m_var1" redirect="std/stand/nav_link/e_nl_up_1_5m_var1"/>
		<to name="e_nl_jump_fwd_4m_down_6_25m" redirect="std/stand/nav_link/e_nl_jump_fwd_4m_down_6_25m"/>
		<to name="e_nl_down_1_5m" redirect="std/stand/nav_link/e_nl_down_1_5m"/>
		<to name="e_nl_up_1_fwd_1_5m" redirect="std/stand/nav_link/e_nl_up_1_fwd_1_5m"/>
		<to name="e_nl_up_1_fwd_1_5m_var2" redirect="std/stand/nav_link/e_nl_up_1_fwd_1_5m_var2"/>
		<to name="e_nl_slide_fwd_4m" redirect="std/stand/nav_link/e_nl_slide_fwd_4m"/>
		<to name="e_nl_up_2_2_down_1m" redirect="std/stand/nav_link/e_nl_up_2_2_down_1m"/>
		<to name="e_nl_up_6_2_down_1m_var2" redirect="std/stand/nav_link/e_nl_up_6_2_down_1m_var2"/>
		<to name="e_nl_up_6_2_down_1m" redirect="std/stand/nav_link/e_nl_up_6_2_down_1m"/>
		<to name="e_nl_up_7_down_1m" redirect="std/stand/nav_link/e_nl_up_7_down_1m"/>
		<to name="e_nl_up_5_down_1m_var2" redirect="std/stand/nav_link/e_nl_up_5_down_1m_var2"/>
		<to name="e_nl_up_5_down_1m_right" redirect="std/stand/nav_link/e_nl_up_5_down_1m_right"/>
		<to name="e_nl_up_9_down_1m" redirect="std/stand/nav_link/e_nl_up_9_down_1m"/>
		<to name="e_nl_up_7_down_1m_var2" redirect="std/stand/nav_link/e_nl_up_7_down_1m_var2"/>
		<to name="e_nl_up_4m" redirect="std/stand/nav_link/e_nl_up_4m"/>
		<to name="e_nl_down_3_35m" redirect="std/stand/nav_link/e_nl_down_3_35m"/>
		<to name="e_nl_down_3m" redirect="std/stand/nav_link/e_nl_down_3m"/>
		<to name="e_nl_jump_dwn_3m_fwd_7m_dwn_0_5m" redirect="std/stand/nav_link/e_nl_jump_dwn_3m_fwd_7m_dwn_0_5m"/>
		<to name="e_nl_pool_jump" redirect="std/stand/nav_link/e_nl_pool_jump"/>
		<to name="e_nl_down_8m_var2" redirect="std/stand/nav_link/e_nl_down_8m_var2"/>
		<to name="e_nl_jump_dwn_1_4m_fwd_2_35m" redirect="std/stand/nav_link/e_nl_jump_dwn_1_4m_fwd_2_35m"/>
		<to name="e_nl_up_5m" redirect="std/stand/nav_link/e_nl_up_5m"/>
		<to name="e_nl_up_ladder_4m" redirect="std/stand/nav_link/e_nl_up_ladder_4m"/>
		<to name="e_nl_down_5m_var2" redirect="std/stand/nav_link/e_nl_down_5m_var2"/>
		<to name="e_nl_down_4m_var2" redirect="std/stand/nav_link/e_nl_down_4m_var2"/>
		<to name="e_nl_down_5m_var3" redirect="std/stand/nav_link/e_nl_down_5m_var3"/>
		<to name="e_nl_up_1_down_7_1m" redirect="std/stand/nav_link/e_nl_up_1_down_7_1m"/>
		<to name="e_nl_up_0_5_down_5_5m" redirect="std/stand/nav_link/e_nl_up_0_5_down_5_5m"/>
		<to name="e_nl_up_2_75_down_1m" redirect="std/stand/nav_link/e_nl_up_2_75_down_1m"/>
		<to name="e_nl_clk_over_1_8m" redirect="std/stand/nav_link/e_nl_clk_over_1_8m"/>
		<to name="e_nl_up_1_down_6m" redirect="std/stand/nav_link/e_nl_up_1_down_6m"/>
		<to name="e_nl_up_1_down_6m_v2" redirect="std/stand/nav_link/e_nl_up_1_down_6m_v2"/>
		<to name="e_nl_jump_4m_long" redirect="std/stand/nav_link/e_nl_jump_4m_long"/>
		<to name="e_nl_jump_5m_long" redirect="std/stand/nav_link/e_nl_jump_5m_long"/>
		<to name="e_nl_cs_jump_desk" redirect="std/stand/nav_link/e_nl_cs_jump_desk"/>
		<to name="e_nl_cs_jump_window" redirect="std/stand/nav_link/e_nl_cs_jump_window"/>
		<to name="e_nl_jump_over_0_5m" redirect="std/stand/nav_link/e_nl_jump_over_0_5m"/>
		<to name="e_nl_jump_over_2_5m" redirect="std/stand/nav_link/e_nl_jump_over_2_5m"/>
		<to name="e_nl_cs_dwn_front" redirect="std/stand/nav_link/e_nl_cs_dwn_front"/>
		<to name="e_nl_cs_dwn_back" redirect="std/stand/nav_link/e_nl_cs_dwn_back"/>
		<to name="e_nl_cs_up_short_ladder" redirect="std/stand/nav_link/e_nl_cs_up_short_ladder"/>
		<to name="e_nl_cs_up_long_ladder" redirect="std/stand/nav_link/e_nl_cs_up_long_ladder"/>
		<to name="e_nl_cs_up_back_ladder" redirect="std/stand/nav_link/e_nl_cs_up_back_ladder"/>
		<to name="e_nl_cs_up_front_ladder" redirect="std/stand/nav_link/e_nl_cs_up_front_ladder"/>
		<to name="e_nl_cs_up_sewer_ladder" redirect="std/stand/nav_link/e_nl_cs_up_sewer_ladder"/>
		<to name="e_nl_cs_dwn_sewer" redirect="std/stand/nav_link/e_nl_cs_dwn_sewer"/>
		<to name="e_nl_cs_up_8m_ladder" redirect="std/stand/nav_link/e_nl_cs_up_8m_ladder"/>
		<to name="e_nl_up1m_fwd2m_through_window" redirect="std/stand/nav_link/e_nl_up1m_fwd2m_through_window"/>
		<to name="e_nl_down_elevator_shaft" redirect="std/stand/nav_link/e_nl_down_elevator_shaft"/>
		<to name="e_nl_up_elevator_shaft" redirect="std/stand/nav_link/e_nl_up_elevator_shaft"/>
		<to name="e_nl_down_thermite_hole" redirect="std/stand/nav_link/e_nl_down_thermite_hole"/>
		<to name="e_nl_up_7m_ladder" redirect="std/stand/nav_link/e_nl_up_7m_ladder"/>
		<to name="e_nl_up_1m_dwn_4m_roll" redirect="std/stand/nav_link/e_nl_up_1m_dwn_4m_roll"/>
		<to name="e_nl_up_1m_dwn_4m" redirect="std/stand/nav_link/e_nl_up_1m_dwn_4m"/>
		<to name="e_nl_down_4m_jump" redirect="std/stand/nav_link/e_nl_down_4m_jump"/>
		<to name="e_nl_up_1m_dwn_4_5m_roll" redirect="std/stand/nav_link/e_nl_up_1m_dwn_4_5m_roll"/>
		<to name="e_nl_up_1m_dwn_4_5m" redirect="std/stand/nav_link/e_nl_up_1m_dwn_4_5m"/>
		<to name="e_nl_slide_4m_dwn_2m" redirect="std/stand/nav_link/e_nl_slide_4m_dwn_2m"/>
		<to name="e_nl_dwn_4_75m" redirect="std/stand/nav_link/e_nl_dwn_4_75m"/>
		<to name="e_nl_hox_enter_car" redirect="std/stand/nav_link/e_nl_hox_enter_car"/>
		<to name="e_nl_up_2_2m_down_2m" redirect="std/stand/nav_link/e_nl_up_2_2m_down_2m"/>
		<to name="e_nl_slope_climb_3_3m" redirect="std/stand/nav_link/e_nl_slope_climb_3_3m"/>
		<to name="e_nl_slope_climb_2_4m" redirect="std/stand/nav_link/e_nl_slope_climb_2_4m"/>
		<to name="e_nl_slope_climb_3_7m" redirect="std/stand/nav_link/e_nl_slope_climb_3_7m"/>
		<to name="e_nl_up_2_2m_down_2_2m" redirect="std/stand/nav_link/e_nl_up_2_2m_down_2_2m"/>
		<to name="e_nl_button_slide_under" redirect="std/stand/nav_link/e_nl_button_slide_under"/>
		<to name="e_nl_door_open_hack_code" redirect="std/stand/nav_link/e_nl_door_open_hack_code"/>
		<to name="e_nl_up_1m_swing_dwn_3_5m" redirect="std/stand/nav_link/e_nl_up_1m_swing_dwn_3_5m"/>
		<to name="e_nl_down_1m" redirect="std/stand/nav_link/e_nl_down_1m"/>
		<to name="e_nl_4m_long_2m_dwn" redirect="std/stand/nav_link/e_nl_4m_long_2m_dwn"/>
		<to name="e_nl_jump_2m_long" redirect="std/stand/nav_link/e_nl_jump_2m_long"/>
		<to name="e_nl_actionjump_2m_forward" redirect="std/stand/nav_link/e_nl_actionjump_2m_forward"/>
		<to name="e_nl_actionjump_2m_forward_var2" redirect="std/stand/nav_link/e_nl_actionjump_2m_forward_var2"/>
		<to name="e_nl_over_4_25m" redirect="std/stand/nav_link/e_nl_over_4_25m"/>
		<to name="e_nl_up_1_3m" redirect="std/stand/nav_link/e_nl_up_1_3m"/>
		<to name="e_nl_up_1m" redirect="std/stand/nav_link/e_nl_up_1m"/>
		<to name="e_nl_crawl_3_5m" redirect="std/stand/nav_link/e_nl_crawl_3_5m"/>
		<to name="e_nl_climb_up_4_75m" redirect="std/stand/nav_link/e_nl_climb_up_4_75m"/>
		<to name="e_nl_climb_up_2_2m" redirect="std/stand/nav_link/e_nl_climb_up_2_2m"/>
		<to name="e_nl_run_jump_far_var1" redirect="std/stand/nav_link/e_nl_run_jump_far_var1"/>
		<to name="e_nl_run_jump_far_var2" redirect="std/stand/nav_link/e_nl_run_jump_far_var2"/>
		<to name="e_nl_run_jump_far_var3" redirect="std/stand/nav_link/e_nl_run_jump_far_var3"/>
		<to name="e_nl_down_4_75m_swing" redirect="std/stand/nav_link/e_nl_down_4_75m_swing"/>
		<to name="e_nl_up_1m_dwn_18m" redirect="std/stand/nav_link/e_nl_up_1m_dwn_18m"/>
		<to name="e_nl_up_1m_down_4_5m_swing" redirect="std/stand/nav_link/e_nl_up_1m_down_4_5m_swing"/>
		<to name="e_nl_up_1m_down_5m_swing" redirect="std/stand/nav_link/e_nl_up_1m_down_5m_swing"/>
		<to name="e_up_1m_down_3m" redirect="std/stand/nav_link/e_up_1m_down_3m"/>
		<to name="e_nl_up_1_5m_dwn_0_8m" redirect="std/stand/nav_link/e_nl_up_1_5m_dwn_0_8m"/>
		<to name="e_nl_up_4_3m_dwn_1m" redirect="std/stand/nav_link/e_nl_up_4_3m_dwn_1m"/>
		<to name="e_nl_up_4_3m_dwn_1m_var2" redirect="std/stand/nav_link/e_nl_up_4_3m_dwn_1m_var2"/>
		<to name="e_nl_up_8m_dwn_0_8m_left" redirect="std/stand/nav_link/e_nl_up_8m_dwn_0_8m_left"/>
		<to name="e_nl_up_1m_down_4_3m_swing" redirect="std/stand/nav_link/e_nl_up_1m_down_4_3m_swing"/>
		<to name="e_nl_up_11_5m_down_1m" redirect="std/stand/nav_link/e_nl_up_11_5m_down_1m"/>
		<to name="e_nl_up_7_5m_down_1m" redirect="std/stand/nav_link/e_nl_up_7_5m_down_1m"/>
		<to name="e_nl_dwn_11m" redirect="std/stand/nav_link/e_nl_dwn_11m"/>
		<to name="e_nl_dwn_repel_11_25m" redirect="std/stand/nav_link/e_nl_dwn_repel_11_25m"/>
		<to name="e_nl_dwn_jump_4_5m" redirect="std/stand/nav_link/e_nl_dwn_jump_4_5m"/>
		<to name="e_nl_dwn_jump_5_25m" redirect="std/stand/nav_link/e_nl_dwn_jump_5_25m"/>
		<to name="e_nl_up_1_down_4_5m_drill" redirect="std/stand/nav_link/e_nl_up_1_down_4_5m_drill"/>
		<to name="e_nl_up_2_5m_right_2m_jump" redirect="std/stand/nav_link/e_nl_up_2_5m_right_2m_jump"/>
		<to name="e_nl_up_3m_dwn_0_5m" redirect="std/stand/nav_link/e_nl_up_3m_dwn_0_5m"/>
		<to name="e_nl_enter_wall_hole" redirect="std/stand/nav_link/e_nl_enter_wall_hole"/>
		<to name="e_nl_up_0_5m_window_out" redirect="std/stand/nav_link/e_nl_up_0_5m_window_out"/>
		<to name="e_nl_dwn_0_5m_window_in" redirect="std/stand/nav_link/e_nl_dwn_0_5m_window_in"/>
		<to name="e_nl_up_0_5m_dwn_1m_window_out" redirect="std/stand/nav_link/e_nl_up_0_5m_dwn_1m_window_out"/>
		<to name="e_nl_up_0_9m_dwn_1m_window_out" redirect="std/stand/nav_link/e_nl_up_0_9m_dwn_1m_window_out"/>
		<to name="e_nl_up_1m_dwn_0_9m_window_in" redirect="std/stand/nav_link/e_nl_up_1m_dwn_0_9m_window_in"/>
		<to name="e_nl_up_1m_dwn_0_5m_window_in" redirect="std/stand/nav_link/e_nl_up_1m_dwn_0_5m_window_in"/>
		<to name="e_nl_dwn_3_5m_slide_cliff" redirect="std/stand/nav_link/e_nl_dwn_3_5m_slide_cliff"/>
		<to name="e_nl_dwn_4_5m_slide_cliff" redirect="std/stand/nav_link/e_nl_dwn_4_5m_slide_cliff"/>
		<to name="e_nl_ladder_up_3m" redirect="std/stand/nav_link/e_nl_ladder_up_3m"/>
		<to name="e_nl_ladder_up_4_4m" redirect="std/stand/nav_link/e_nl_ladder_up_4_4m"/>
		<to name="e_nl_dwn_4_4m_jump" redirect="std/stand/nav_link/e_nl_dwn_4_4m_jump"/>
		<to name="e_nl_dwn_4_4m_hang" redirect="std/stand/nav_link/e_nl_dwn_4_4m_hang"/>
		<to name="e_nl_up_3_3m" redirect="std/stand/nav_link/e_nl_up_3_3m"/>
		<to name="e_nl_up_3_5m" redirect="std/stand/nav_link/e_nl_up_3_5m"/>
		<to name="e_nl_up_4_4m_dwn_0_5m" redirect="std/stand/nav_link/e_nl_up_4_4m_dwn_0_5m"/>
		<to name="e_nl_up_5m_1m_dwn_right_stairs" redirect="std/stand/nav_link/e_nl_up_5m_1m_dwn_right_stairs"/>
		<to name="e_nl_up_5m_1m_dwn_left_stairs" redirect="std/stand/nav_link/e_nl_up_5m_1m_dwn_left_stairs"/>
		<to name="e_nl_over_1m_dwn_8m" redirect="std/stand/nav_link/e_nl_over_1m_dwn_8m"/>
		<to name="e_nl_over_1m_dwn_12m" redirect="std/stand/nav_link/e_nl_over_1m_dwn_12m"/>
		<to name="e_nl_over_1m_dwn_11_5m" redirect="std/stand/nav_link/e_nl_over_1m_dwn_11_5m"/>
		<to name="e_nl_up_1_down_4_8m" redirect="std/stand/nav_link/e_nl_up_1_down_4_8m"/>
		
		
		
		<to name="e_so_walk_investigate" redirect="std/stand/so/idle/e_so_walk_investigate"/>
		<to name="e_so_walk_investigate_unarmed" redirect="std/stand/so/idle/e_so_walk_investigate_unarmed"/>
		<to name="e_so_investigate_window" redirect="std/stand/so/idle/e_so_investigate_window"/>
		<to name="e_so_investigate_window_unarmed" redirect="std/stand/so/idle/e_so_investigate_window_unarmed"/>
		<to name="e_so_look_ledge_down_var2" redirect="std/stand/so/idle/e_so_look_ledge_down_var2"/>
		<to name="e_so_look_corner_var2" redirect="std/stand/so/idle/e_so_look_corner_var2"/>

		<to name="e_so_look_corner_var2_unarmed" redirect="std/stand/so/idle/e_so_look_corner_var2_unarmed"/>
		<to name="e_so_look_corner_var2_unarmed_right" redirect="std/stand/so/idle/e_so_look_corner_var2_unarmed_right"/>

		<to name="e_so_investigate_object_armed" redirect="std/stand/so/idle/e_so_investigate_object_armed"/>
		<to name="e_so_investigate_object_unarmed" redirect="std/stand/so/idle/e_so_investigate_object_unarmed"/>
		<to name="e_so_barn_door_open_r" redirect="std/stand/so/idle/e_so_barn_door_open_r"/>
		<to name="e_so_ntl_vendingmachine" redirect="std/stand/so/idle/e_so_ntl_vendingmachine"/>
		<to name="e_so_barn_door_open_l" redirect="std/stand/so/idle/e_so_barn_door_open_l"/>
		<to name="e_so_ntl_idle_tired" redirect="std/stand/so/idle/idle_tired"/>

		<!-- Raid -->
		
		<!-- So -->

		<to name="player_select_screen" redirect="std/stand/so/idle/player_select_screen"/>
		<to name="e_so_ntl_crouch_investigate_v01" redirect="std/stand/so/idle/e_so_ntl_crouch_investigate_v01"/>
		<to name="e_so_ntl_crouch_investigate_v02" redirect="std/stand/so/idle/e_so_ntl_crouch_investigate_v02"/>
		<to name="e_so_ntl_crouch_investigate_v03" redirect="std/stand/so/idle/e_so_ntl_crouch_investigate_v03"/>
		<to name="e_so_ntl_investigate_v01" redirect="std/stand/so/idle/e_so_ntl_investigate_v01"/>
		<to name="e_so_ntl_investigate_v02" redirect="std/stand/so/idle/e_so_ntl_investigate_v02"/>
		<to name="e_so_ntl_investigate_v03" redirect="std/stand/so/idle/e_so_ntl_investigate_v03"/>
		<to name="e_so_mg34_enter" redirect="std/stand/so/idle/e_so_mg34_enter"/>
		<to name="e_so_mg34_exit" redirect="std/stand/so/idle/e_so_mg34_exit"/>
		<to name="e_so_mg34_idle" redirect="std/stand/so/idle/e_so_mg34_idle"/>
		<to name="e_so_mg34_aiming" redirect="std/stand/so/idle/e_so_mg34_aiming"/>
		<to name="e_so_mg34_aim_right" redirect="std/stand/so/idle/e_so_mg34_aim_right"/>
		<to name="e_so_mg34_aim_left" redirect="std/stand/so/idle/e_so_mg34_aim_left"/>
		<to name="e_so_mg34_recoil_v01" redirect="std/stand/so/idle/e_so_mg34_recoil_v01"/>
		<to name="so_enter_flakvierling_20mm_quad" redirect="std/stand/so/idle/so_enter_flakvierling_20mm_quad"/>
		<to name="so_exit_flakvierling_20mm_quad" redirect="std/stand/so/idle/so_exit_flakvierling_20mm_quad"/>
		<to name="so_idle_flakvierling_20mm_quad" redirect="std/stand/so/idle/so_idle_flakvierling_20mm_quad"/>
		<to name="e_so_flak_88_sit_enter" redirect="std/stand/so/idle/e_so_flak_88_sit_enter"/>
		<to name="e_so_flak_88_idle" redirect="std/stand/so/idle/e_so_flak_88_idle"/>
		<to name="e_so_flak_88_sit_exit" redirect="std/stand/so/idle/e_so_flak_88_sit_exit"/>
		<to name="ntl_death_flakvierling_var1" redirect="std/stand/so/idle/ntl_death_flakvierling_var1"/>
		<to name="ntl_enter_flakvierling" redirect="std/stand/so/idle/ntl_enter_flakvierling"/>
		<to name="ntl_exit_flakvierling" redirect="std/stand/so/idle/ntl_exit_flakvierling"/>
		<to name="ntl_idle_flakvierling" redirect="std/stand/so/idle/ntl_idle_flakvierling"/>
		<to name="ntl_enter_flakvierling_v01" redirect="std/stand/so/idle/ntl_enter_flakvierling_v01"/>
		<to name="so_para_jump_flakturm" redirect="std/stand/so/idle/so_para_jump_flakturm"/>
		<to name="e_so_suspicious_pistol_v01" redirect="std/stand/so/idle/e_so_suspicious_pistol_v01"/>
		<to name="e_so_suspicious_pistol_v02" redirect="std/stand/so/idle/e_so_suspicious_pistol_v02"/>
		<to name="e_so_suspicious_rifle_v01" redirect="std/stand/so/idle/e_so_suspicious_rifle_v01"/>
		<to name="e_so_suspicious_rifle_v02" redirect="std/stand/so/idle/e_so_suspicious_rifle_v02"/>
		<to name="e_nl_up_6m_ladder_v01" redirect="std/stand/so/idle/e_nl_up_6m_ladder_v01"/>
		<to name="e_nl_ladder_up_19m" redirect="std/stand/so/idle/e_nl_ladder_up_19m"/>
		<to name="so_radio_tower_up_idle" redirect="std/stand/so/idle/so_radio_tower_up_idle"/>
		<to name="e_nl_ladder_down_19m" redirect="std/stand/so/idle/e_nl_ladder_down_19m"/>
		<to name="e_nl_down_6m_ladder_v01" redirect="std/stand/so/idle/e_nl_down_6m_ladder_v01"/>
		<to name="ntl_std_coin_charge" redirect="std/stand/so/idle/ntl_std_coin_charge"/>
		<to name="ntl_std_coin_idle" redirect="std/stand/so/idle/ntl_std_coin_idle"/>
		<to name="ntl_std_coin_throw" redirect="std/stand/so/idle/ntl_std_coin_throw"/>
		<to name="ntl_std_grenade_charge" redirect="std/stand/so/idle/ntl_std_grenade_charge"/>
		<to name="ntl_std_grenade_idle" redirect="std/stand/so/idle/ntl_std_grenade_idle"/>
		<to name="ntl_std_grenade_throw" redirect="std/stand/so/idle/ntl_std_grenade_throw"/>
		<to name="e_so_idle_adjust_boot" redirect="std/stand/so/idle/e_so_idle_adjust_boot"/>
		<to name="e_so_idle_adjust_boot_rifle" redirect="std/stand/so/idle/e_so_idle_adjust_boot_rifle"/>
		<to name="e_so_bored_rifle" redirect="std/stand/so/idle/e_so_bored_rifle"/>
		<to name="e_so_bored_pistol" redirect="std/stand/so/idle/e_so_bored_pistol"/>
		<to name="e_so_look_over_pistol" redirect="std/stand/so/idle/e_so_look_over_pistol"/>
		<to name="e_so_look_over_rifle" redirect="std/stand/so/idle/e_so_look_over_rifle"/>
		<to name="e_so_excited_pistol" redirect="std/stand/so/idle/e_so_excited_pistol"/>
		<to name="e_so_excited_rifle" redirect="std/stand/so/idle/e_so_excited_rifle"/>
		<to name="e_so_unarmed_smoke_enter_pistol" redirect="std/stand/so/idle/e_so_unarmed_smoke_enter_pistol"/>
		<to name="e_so_unarmed_smoke_exit_pistol" redirect="std/stand/so/idle/e_so_unarmed_smoke_exit_pistol"/>
		<to name="e_so_unarmed_smoke_loop_lean_pistol" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_lean_pistol"/>
		<to name="e_so_unarmed_smoke_loop_pistol" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_pistol"/>
		<to name="e_so_unarmed_smoke_loop_turn_pistol" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_pistol"/>
		<to name="e_so_unarmed_smoke_enter_rifle" redirect="std/stand/so/idle/e_so_unarmed_smoke_enter_rifle"/>
		<to name="e_so_unarmed_smoke_exit_rifle" redirect="std/stand/so/idle/e_so_unarmed_smoke_exit_rifle"/>
		<to name="e_so_unarmed_smoke_loop_lean_rifle" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_lean_rifle"/>
		<to name="e_so_unarmed_smoke_loop_rifle" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_rifle"/>
		<to name="e_so_unarmed_smoke_loop_turn_rifle" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_rifle"/>
		<to name="e_so_armed_leanwall_enter_rifle" redirect="std/stand/so/idle/e_so_armed_leanwall_enter_rifle"/>
		<to name="e_so_armed_leanwall_exit_rifle" redirect="std/stand/so/idle/e_so_armed_leanwall_exit_rifle"/>		
		<to name="e_so_armed_leanwall_loop_clock_rifle" redirect="std/stand/so/idle/e_so_armed_leanwall_loop_clock_rifle"/>	
		<to name="e_so_armed_leanwall_loop_kickpebble_rifle" redirect="std/stand/so/idle/e_so_armed_leanwall_loop_kickpebble_rifle"/>
		<to name="e_so_armed_leanwall_loop_look_rifle" redirect="std/stand/so/idle/e_so_armed_leanwall_loop_look_rifle"/>

		<to name="e_so_cover_var2" redirect="std/stand/so/idle/e_so_cover_var2"/>
		<to name="e_so_cover_exit_var2" redirect="std/stand/so/idle/e_so_cover_exit_var2"/>
		<to name="e_so_cover" redirect="std/stand/so/idle/e_so_cover"/>
		<to name="e_so_cover_exit" redirect="std/stand/so/idle/e_so_cover_exit"/>
		<to name="e_so_low_cover_var2" redirect="std/stand/so/idle/e_so_low_cover_var2"/>
		<to name="e_so_low_cover_exit_var2" redirect="std/stand/so/idle/e_so_low_cover_exit_var2"/>
		<to name="e_so_low_cover" redirect="std/stand/so/idle/e_so_low_cover"/>
		<to name="e_so_low_cover_exit" redirect="std/stand/so/idle/e_so_low_cover_exit"/>
		
		<to name="e_so_door_tackle" redirect="std/stand/so/idle/e_so_door_tackle"/>
		<to name="e_so_death_stairs" redirect="std/stand/so/idle/e_so_death_stairs"/>
		<to name="e_so_hurt_stairs" redirect="std/stand/so/idle/e_so_hurt_stairs"/>
		<to name="e_so_boxing" redirect="std/stand/so/idle/e_so_boxing"/>
		<to name="e_so_boxing_exit" redirect="std/stand/so/idle/e_so_boxing_exit"/>
		<to name="e_so_pushups" redirect="std/stand/so/idle/e_so_pushups"/>
		<to name="e_so_pushups_exit" redirect="std/stand/so/idle/e_so_pushups_exit"/>
		<to name="e_so_situps" redirect="std/stand/so/idle/e_so_situps"/>
		<to name="e_so_situps_exit" redirect="std/stand/so/idle/e_so_situps_exit"/>
		
		<to name="e_so_ntl_rest_exit" redirect="std/stand/so/idle/e_so_ntl_rest_exit"/>
		<to name="e_so_ntl_rest" redirect="std/stand/so/idle/e_so_ntl_rest"/>
		<to name="e_so_ntl_sit_ground_lean_back_exit" redirect="std/stand/so/idle/e_so_ntl_sit_ground_lean_back_exit"/>
		<to name="e_so_ntl_sit_ground_lean_back" redirect="std/stand/so/idle/e_so_ntl_sit_ground_lean_back"/>
		<to name="e_so_ntl_sit_on_object_idle_exit" redirect="std/stand/so/idle/e_so_ntl_sit_on_object_idle_exit"/>
		<to name="e_so_ntl_sit_on_object_idle" redirect="std/stand/so/idle/e_so_ntl_sit_on_object_idle"/>
		<to name="e_so_ntl_pissing" redirect="std/stand/so/idle/e_so_ntl_pissing"/>
		
		<to name="e_so_foxhole_exit" redirect="std/stand/so/idle/e_so_foxhole_exit"/>
		<to name="e_so_foxhole_enter" redirect="std/stand/so/idle/e_so_foxhole_enter"/>
		<to name="e_so_foxhole_idle" redirect="std/stand/so/idle/e_so_foxhole_idle"/>
		
		<to name="e_so_look_corner_unarmed" redirect="std/stand/so/idle/e_so_look_corner_unarmed"/>
		<to name="e_so_look_corner_unarmed_left" redirect="std/stand/so/idle/e_so_look_corner_unarmed_left"/>

		<to name="e_so_looking_in_distance" redirect="std/stand/so/idle/e_so_looking_in_distance"/>
		<to name="e_so_looking_in_distance_var1" redirect="std/stand/so/idle/e_so_looking_in_distance_var1"/>
		<to name="e_so_look_under_caranimation" redirect="std/stand/so/idle/e_so_look_under_caranimation"/>
		<to name="e_so_partol_circle" redirect="std/stand/so/idle/e_so_partol_circle"/>
		<to name="e_so_patrol_front_back" redirect="std/stand/so/idle/e_so_patrol_front_back"/>
		<to name="e_so_patrol_left_right" redirect="std/stand/so/idle/e_so_patrol_left_right"/>
		<to name="e_so_pick_nose" redirect="std/stand/so/idle/e_so_pick_nose"/>
		<to name="e_so_pickup_stuff_floor_dustoff_hands" redirect="std/stand/so/idle/e_so_pickup_stuff_floor_dustoff_hands"/>
		<to name="e_so_point_at_enter" redirect="std/stand/so/idle/e_so_point_at_enter"/>
		<to name="e_so_polish_boots" redirect="std/stand/so/idle/e_so_polish_boots"/>
		<to name="e_so_push_button_table" redirect="std/stand/so/idle/e_so_push_button_table"/>
		<to name="e_so_push_button_wall" redirect="std/stand/so/idle/e_so_push_button_wall"/>
		<to name="e_so_repair" redirect="std/stand/so/idle/e_so_repair"/>
		<to name="e_so_shoo_away_mosquito" redirect="std/stand/so/idle/e_so_shoo_away_mosquito"/>
		<to name="e_so_sit_to_point_at_enter" redirect="std/stand/so/idle/e_so_sit_to_point_at_enter"/>
		<to name="e_so_sit_to_point_at_exit" redirect="std/stand/so/idle/e_so_sit_to_point_at_exit"/>
		<to name="e_so_sit_to_point_at_idle" redirect="std/stand/so/idle/e_so_sit_to_point_at_idle"/>
		<to name="e_so_stretch_arms" redirect="std/stand/so/idle/e_so_stretch_arms"/>
		<to name="e_so_stretch_legs" redirect="std/stand/so/idle/e_so_stretch_legs"/>
		<to name="e_so_swat_mosquito" redirect="std/stand/so/idle/e_so_swat_mosquito"/>
		<to name="e_so_yawn" redirect="std/stand/so/idle/e_so_yawn"/>
		<to name="e_so_yawn_var1" redirect="std/stand/so/idle/e_so_yawn_var1"/>
		<to name="e_so_armed_idle" redirect="std/stand/so/idle/e_so_armed_idle"/>
		<to name="e_so_unarmed_idle" redirect="std/stand/so/idle/e_so_unarmed_idle"/>
		<to name="e_so_pull_lever_towards" redirect="std/stand/so/idle/e_so_pull_lever_towards"/>
		<to name="e_so_pull_lever_away" redirect="std/stand/so/idle/e_so_pull_lever_away"/>
		<to name="e_so_sit_on_tank_hood_enter" redirect="std/stand/so/idle/e_so_sit_on_tank_hood_enter"/>
		<to name="e_so_sit_on_tank_hood_exit" redirect="std/stand/so/idle/e_so_sit_on_tank_hood_exit"/>
		<to name="e_so_sit_on_tank_hood_idle" redirect="std/stand/so/idle/e_so_sit_on_tank_hood_idle"/>
		<to name="e_so_unarmed_smoke_loop_turn_l" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_l"/>
		<to name="e_so_unarmed_smoke_loop_turn_r" redirect="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_r"/>
		<to name="e_so_unarmed_smoke_lean_l" redirect="std/stand/so/idle/e_so_unarmed_smoke_lean_l"/>
		<to name="e_so_unarmed_smoke_lean_r" redirect="std/stand/so/idle/e_so_unarmed_smoke_lean_r"/>
		<to name="e_so_look_up_wall" redirect="std/stand/so/idle/e_so_look_up_wall"/>
		<to name="e_so_look_under_table" redirect="std/stand/so/idle/e_so_look_under_table"/>
		<to name="e_so_look_ledge_up" redirect="std/stand/so/idle/e_so_look_ledge_up"/>
		<to name="e_so_look_corner" redirect="std/stand/so/idle/e_so_look_corner"/>

		<to name="e_so_unarmed_wave_camera" redirect="std/stand/so/idle/e_so_unarmed_wave_camera"/>
		<to name="e_so_sit_truck_bumper_enter" redirect="std/stand/so/idle/e_so_sit_truck_bumper_enter"/>
		<to name="e_so_sit_truck_bumper_loop" redirect="std/stand/so/idle/e_so_sit_truck_bumper_loop"/>
		<to name="e_so_sit_truck_bumper_exit" redirect="std/stand/so/idle/e_so_sit_truck_bumper_exit"/>
		<to name="e_so_leg_on_sandbags_enter" redirect="std/stand/so/idle/e_so_leg_on_sandbags_enter"/>
		<to name="e_so_leg_on_sandbags_loop" redirect="std/stand/so/idle/e_so_leg_on_sandbags_loop"/>
		<to name="e_so_leg_on_sandbags_exit" redirect="std/stand/so/idle/e_so_leg_on_sandbags_exit"/>
		<to name="e_so_lean_on_crate_enter" redirect="std/stand/so/idle/e_so_lean_on_crate_enter"/>
		<to name="e_so_lean_on_crate_loop" redirect="std/stand/so/idle/e_so_lean_on_crate_loop"/>
		<to name="e_so_lean_on_crate_exit" redirect="std/stand/so/idle/e_so_lean_on_crate_exit"/>
		<to name="e_so_arm_lean_enter" redirect="std/stand/so/idle/e_so_arm_lean_enter"/>
		<to name="e_so_arm_lean_loop" redirect="std/stand/so/idle/e_so_arm_lean_loop"/>
		<to name="e_so_arm_lean_exit" redirect="std/stand/so/idle/e_so_arm_lean_exit"/>
		<to name="e_so_sit_on_barrel_enter" redirect="std/stand/so/idle/e_so_sit_on_barrel_enter"/>
		<to name="e_so_sit_on_barrel_loop" redirect="std/stand/so/idle/e_so_sit_on_barrel_loop"/>
		<to name="e_so_sit_on_barrel_exit" redirect="std/stand/so/idle/e_so_sit_on_barrel_exit"/>

		<to name="so_commander_chair_sit_exit" redirect="std/stand/so/idle/so_commander_chair_sit_exit"/>
		<to name="so_commander_look_idle" redirect="std/stand/so/idle/so_commander_look_idle"/>
		<to name="so_commander_chair_sit_idle" redirect="std/stand/so/idle/so_commander_chair_sit_idle"/>
		<to name="so_commander_chair_sit_enter" redirect="std/stand/so/idle/so_commander_chair_sit_enter"/>
		<to name="so_commander_sofa_sit_exit" redirect="std/stand/so/idle/so_commander_sofa_sit_exit"/>
		<to name="so_commander_sofa_sit_idle" redirect="std/stand/so/idle/so_commander_sofa_sit_idle"/>
		<to name="so_commander_sofa_sit_enter" redirect="std/stand/so/idle/so_commander_sofa_sit_enter"/>
		<to name="so_commander_couch_exit" redirect="std/stand/so/idle/so_commander_couch_exit"/>
		<to name="so_commander_couch_idle" redirect="std/stand/so/idle/so_commander_couch_idle"/>
		<to name="so_commander_couch_enter" redirect="std/stand/so/idle/so_commander_couch_enter"/>
		<to name="so_commander_look_table_exit" redirect="std/stand/so/idle/so_commander_look_table_exit"/>
		<to name="so_commander_look_table_idle" redirect="std/stand/so/idle/so_commander_look_table_idle"/>
		<to name="so_commander_look_table_enter" redirect="std/stand/so/idle/so_commander_look_table_enter"/>

		<to name="so_team_ai_stand_idle_look_around" redirect="std/stand/so/idle/so_team_ai_stand_idle_look_around"/>
		<to name="so_team_ai_stand_idle_look_l_r" redirect="std/stand/so/idle/so_team_ai_stand_idle_look_l_r"/>
		<to name="so_team_ai_stand_idle_look_l_r_var1" redirect="std/stand/so/idle/so_team_ai_stand_idle_look_l_r_var1"/>
		<to name="so_team_ai_stand_idle_stretch_arms" redirect="std/stand/so/idle/so_team_ai_stand_idle_stretch_arms"/>
		<to name="so_team_ai_stand_idle_scratch_head" redirect="std/stand/so/idle/so_team_ai_stand_idle_scratch_head"/>
		<to name="so_team_ai_stand_look_around" redirect="std/stand/so/idle/so_team_ai_stand_look_around"/>
		<to name="so_team_ai_stand_look_l_r" redirect="std/stand/so/idle/so_team_ai_stand_look_l_r"/>
		<to name="so_team_ai_stand_look_l_r_var1" redirect="std/stand/so/idle/so_team_ai_stand_look_l_r_var1"/>
		<to name="so_team_ai_stamd_stretch_arms" redirect="std/stand/so/idle/so_team_ai_stand_stretch_arms"/>
		<to name="so_team_ai_stand_scratch_head" redirect="std/stand/so/idle/so_team_ai_stand_scratch_head"/>

		<to name="e_nl_cbt_crh_blind_shot_r" redirect="std/stand/so/idle/e_nl_cbt_crh_blind_shot_r"/>
		<to name="e_nl_cbt_crh_blind_shot_l" redirect="std/stand/so/idle/e_nl_cbt_crh_blind_shot_l"/>
		<to name="e_nl_cbt_crh_blind_shot_top_r" redirect="std/stand/so/idle/e_nl_cbt_crh_blind_shot_top_r"/>
		<to name="e_nl_cbt_crh_blind_shot_top_l" redirect="std/stand/so/idle/e_nl_cbt_crh_blind_shot_top_l"/>
		<to name="e_nl_cbt_std_blind_shot_r" redirect="std/stand/so/idle/e_nl_cbt_std_blind_shot_r"/>
		<to name="e_nl_cbt_std_blind_shot_l" redirect="std/stand/so/idle/e_nl_cbt_std_blind_shot_l"/>

		<to name="e_so_shout_orders_l_arm_var1" redirect="std/stand/so/idle/e_so_shout_orders_l_arm_var1"/>
		<to name="e_so_shout_orders_l_arm_var2" redirect="std/stand/so/idle/e_so_shout_orders_l_arm_var2"/>

		<to name="e_so_yell_alarm_var1" redirect="std/stand/so/idle/e_so_yell_alarm_var1"/>
		<to name="e_so_yell_alarm_var2" redirect="std/stand/so/idle/e_so_yell_alarm_var2"/>
		<to name="e_so_yell_alarm_var3" redirect="std/stand/so/idle/e_so_yell_alarm_var3"/>

		<to name="e_so_valve_turn" redirect="std/stand/so/idle/e_so_valve_turn"/>
		<to name="spotter_cbt_sup_throw_flare" redirect="std/stand/so/idle/spotter_cbt_sup_throw_flare"/>
		<to name="e_so_fall_out_of_bunker_fire_dth_var1" redirect="std/stand/so/idle/e_so_fall_out_of_bunker_fire_dth_var1"/>
		<to name="e_so_fall_out_of_bunker_fire_dth_var2" redirect="std/stand/so/idle/e_so_fall_out_of_bunker_fire_dth_var2"/>
		<to name="e_so_fall_out_of_zepelin_fire_dth_var1" redirect="std/stand/so/idle/e_so_fall_out_of_zepelin_fire_dth_var1"/>
		<to name="e_so_fall_out_of_zepelin_fire_dth_var2" redirect="std/stand/so/idle/e_so_fall_out_of_zepelin_fire_dth_var2"/>
		<to name="e_so_run_fwd_on_fire_die_var2" redirect="std/stand/so/idle/e_so_run_fwd_on_fire_die_var2"/>
		<to name="e_so_run_fwd_on_fire_die_var1" redirect="std/stand/so/idle/e_so_run_fwd_on_fire_die_var1"/>

		<to name="aggressive_russian_punch_table" redirect="std/stand/so/idle/aggressive_russian_punch_table"/>
		<to name="aggressive_russian_punching" redirect="std/stand/so/idle/aggressive_russian_punching"/>
		<to name="aggressive_russian_punching_idle" redirect="std/stand/so/idle/aggressive_russian_punching_idle"/>
		<to name="aggressive_russian_patrol_left_right" redirect="std/stand/so/idle/aggressive_russian_patrol_left_right"/>
		<to name="beaten_calm_russian" redirect="std/stand/so/idle/beaten_calm_russian"/>
		<to name="drugged_dying_russian" redirect="std/stand/so/idle/drugged_dying_russian"/>
		<to name="scared_russian_idle" redirect="std/stand/so/idle/scared_russian_idle"/>
		<to name="scared_russian_look_r_corner" redirect="std/stand/so/idle/scared_russian_look_r_corner"/>
		<to name="scared_russian_puke" redirect="std/stand/so/idle/scared_russian_puke"/>
		<to name="scared_russian_look_l_corner" redirect="std/stand/so/idle/scared_russian_look_l_corner"/>
		<to name="crazy_russian_idle" redirect="std/stand/so/idle/crazy_russian_idle"/>
		<to name="crazy_russian_arm_wave" redirect="std/stand/so/idle/crazy_russian_arm_wave"/>
		<to name="crazy_russian_arm_hit" redirect="std/stand/so/idle/crazy_russian_arm_hit"/>

		<to name="e_nl_actionjump_2m_fwd_1m_up" redirect="std/stand/so/idle/e_nl_actionjump_2m_fwd_1m_up"/>
		<to name="e_nl_actionjump_2m_fwd_1m_down" redirect="std/stand/so/idle/e_nl_actionjump_2m_fwd_1m_down"/>
		<to name="e_nl_jump_over_4m" redirect="std/stand/so/idle/e_nl_jump_over_4m"/>
		<to name="e_nl_flak_bunker_fwd_2m_down_6m" redirect="std/stand/so/idle/e_nl_flak_bunker_fwd_2m_down_6m"/>
		<to name="so_train_wagon_var3" redirect="std/stand/so/idle/so_train_wagon_var3"/>
		<to name="so_train_wagon_var4" redirect="std/stand/so/idle/so_train_wagon_var4"/>

		<to name="e_so_unarmed_leanwall_loop_look" redirect="std/stand/so/idle/e_so_unarmed_leanwall_loop_look"/>
		<to name="e_so_unarmed_leanwall_loop_kickpebble" redirect="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble"/>
		<to name="e_so_unarmed_leanwall_loop_fingers" redirect="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers"/>
		<to name="e_so_unarmed_leanwall_loop_clock" redirect="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock"/>
		<to name="e_so_unarmed_leanwall_exit" redirect="std/stand/so/idle/e_so_unarmed_leanwall_exit"/>
		<to name="e_so_unarmed_leanwall_enter" redirect="std/stand/so/idle/e_so_unarmed_leanwall_enter"/>

		<to name="e_so_unarmed_idle_enter" redirect="std/stand/so/idle/e_so_unarmed_idle_enter"/>
		<to name="e_so_unarmed_idle_enter_corner" redirect="std/stand/so/idle/e_so_unarmed_idle_enter_corner"/>
		<to name="e_so_unarmed_idle_exit" redirect="std/stand/so/idle/e_so_unarmed_idle_exit"/>

		<to name="e_so_unarmed_idle_tired" redirect="std/stand/so/idle/e_so_unarmed_idle_tired"/>
		<to name="e_so_unarmed_idle_stickygum" redirect="std/stand/so/idle/e_so_unarmed_idle_stickygum"/>
		<to name="e_so_unarmed_idle_look2" redirect="std/stand/so/idle/e_so_unarmed_idle_look2"/>
		<to name="e_so_unarmed_idle_look" redirect="std/stand/so/idle/e_so_unarmed_idle_look"/>
		<to name="e_so_unarmed_idle_kickpebble" redirect="std/stand/so/idle/e_so_unarmed_idle_kickpebble"/>
		<to name="e_so_unarmed_idle_clock" redirect="std/stand/so/idle/e_so_unarmed_idle_clock"/>
		<to name="e_so_unarmed_idle_brush" redirect="std/stand/so/idle/e_so_unarmed_idle_brush"/>
		<to name="e_so_adjust_collar" redirect="std/stand/so/idle/e_so_adjust_collar"/>
		<to name="e_so_adjust_sleves" redirect="std/stand/so/idle/e_so_adjust_sleves"/>
		<to name="e_so_idle_std_to_crh_idle_crh_to_std_idle" redirect="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle"/>
		<to name="e_so_idle_std_to_crh_idle_crh_to_std_idle_var1" redirect="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle_var1"/>


		<to name="ntl_std_idle_var1" redirect="std/stand/so/idle/ntl_std_idle_var1"/>
		<to name="husk_hos_std_idle" redirect="std/stand/so/idle/husk_hos_std_idle"/>
		<to name="e_so_idle_v01" redirect="std/stand/so/idle/e_so_idle_v01"/>
		<to name="e_so_idle_v02" redirect="std/stand/so/idle/e_so_idle_v02"/>
		<to name="husk_hos_std_idle_rifle" redirect="std/stand/so/idle/husk_hos_std_idle_rifle"/>
		<to name="husk_lvl_start_std_idle" redirect="std/stand/so/idle/husk_lvl_start_std_idle"/>
		<to name="husk_lvl_start_crh_idle" redirect="std/stand/so/idle/husk_lvl_start_crh_idle"/>

		<!-- husk stealth idle start -->

		<to name="husk_stealth_crh_var1" redirect="std/stand/so/idle/husk_stealth_crh_var1"/>
		<to name="husk_stealth_crh_var2" redirect="std/stand/so/idle/husk_stealth_crh_var2"/>
		<to name="husk_stealth_crh_var3" redirect="std/stand/so/idle/husk_stealth_crh_var3"/>
		<to name="husk_stealth_crh_var4" redirect="std/stand/so/idle/husk_stealth_crh_var4"/>

		<to name="husk_stealth_std_var1" redirect="std/stand/so/idle/husk_stealth_std_var1"/>
		<to name="husk_stealth_std_var2" redirect="std/stand/so/idle/husk_stealth_std_var2"/>
		<to name="husk_stealth_std_var3" redirect="std/stand/so/idle/husk_stealth_std_var3"/>
		<to name="husk_stealth_std_var4" redirect="std/stand/so/idle/husk_stealth_std_var4"/>

		<!-- husk stealth idle end -->

		<to name="so_camp_inspect_armory" redirect="std/stand/so/idle/so_camp_inspect_armory"/>
		<to name="so_camp_inspect_piano" redirect="std/stand/so/idle/so_camp_inspect_piano"/>
		<to name="so_camp_look_at_maps" redirect="std/stand/so/idle/so_camp_look_at_maps"/>
		<to name="so_camp_look_at_statue" redirect="std/stand/so/idle/so_camp_look_at_statue"/>
		<to name="so_camp_sit_idle_get_up" redirect="std/stand/so/idle/so_camp_sit_idle_get_up"/>
		<to name="so_camp_sit_lean_on_crate_get_up" redirect="std/stand/so/idle/so_camp_sit_lean_on_crate_get_up"/>
		<to name="so_camp_small_table_sit" redirect="std/stand/so/idle/so_camp_small_table_sit"/>
		<to name="so_camp_small_table_sit_spy" redirect="std/stand/so/idle/so_camp_small_table_sit_spy"/>
		<to name="so_spy_idle" redirect="std/stand/so/idle/so_spy_idle"/>
		<to name="so_camp_use_radio" redirect="std/stand/so/idle/so_camp_use_radio"/>
		<to name="e_so_punching_idle" redirect="std/stand/so/idle/e_so_punching_idle"/>
		<to name="e_so_l_hand_punch" redirect="std/stand/so/idle/e_so_l_hand_punch"/>
		<to name="e_so_r_hand_punch" redirect="std/stand/so/idle/e_so_r_hand_punch"/>
		<to name="so_run_to_radio_tower" redirect="std/stand/so/idle/so_run_to_radio_tower"/>
		<to name="so_chair_sitting_hands_tied_to_stand_idle" redirect="std/stand/so/idle/so_chair_sitting_hands_tied_to_stand_idle"/>
		<to name="so_chair_stand_idle" redirect="std/stand/so/idle/so_chair_stand_idle"/>
		<to name="so_chair_sitting_hands_tied" redirect="std/stand/so/idle/so_chair_sitting_hands_tied"/>
		<to name="so_chair_sitting_punched_l" redirect="std/stand/so/idle/so_chair_sitting_punched_l"/>
		<to name="so_chair_sitting_punched_r" redirect="std/stand/so/idle/so_chair_sitting_punched_r"/>
		<to name="e_so_climbing_rope" redirect="std/stand/so/idle/e_so_climbing_rope"/>
		<to name="e_so_climbing_rope_var1" redirect="std/stand/so/idle/e_so_climbing_rope_var1"/>
		<to name="e_so_plant_dynamite_low" redirect="std/stand/so/idle/e_so_plant_dynamite_low"/>
		<to name="e_so_plant_dynamite_hi" redirect="std/stand/so/idle/e_so_plant_dynamite_hi"/>
		<to name="e_so_plant_dynamite_floor" redirect="std/stand/so/idle/e_so_plant_dynamite_floor"/>
		<to name="e_nl_climb_over_rocks_dwn_2_5m" redirect="std/stand/so/idle/e_nl_climb_over_rocks_dwn_2_5m"/>
		<to name="e_nl_over_rubble_to_inside" redirect="std/stand/so/idle/e_nl_over_rubble_to_inside"/>
		<to name="e_nl_over_rubble_to_outside" redirect="std/stand/so/idle/e_nl_over_rubble_to_outside"/>
		<to name="e_nl_down_4_3m" redirect="std/stand/so/idle/e_nl_down_4_3m"/>
		<to name="e_nl_up_4_3m" redirect="std/stand/so/idle/e_nl_up_4_3m"/>
		<to name="so_radio_tower_idle" redirect="std/stand/so/idle/so_radio_tower_idle"/>
		<to name="so_run_to_hide" redirect="std/stand/so/idle/so_run_to_hide"/>
		<to name="so_hide_idle" redirect="std/stand/so/idle/so_hide_idle"/>
		<to name="so_radio_tower_escape" redirect="std/stand/so/idle/so_radio_tower_escape"/>
		<to name="so_radio_tower_escape_idle" redirect="std/stand/so/idle/so_radio_tower_escape_idle"/>
		<to name="e_nl_radio_tower_fall" redirect="std/stand/so/idle/e_nl_radio_tower_fall"/>
		<to name="e_so_climb_down_tiger_tank" redirect="std/stand/so/idle/e_so_climb_down_tiger_tank"/>
		<to name="e_so_climb_up_tiger_tank" redirect="std/stand/so/idle/e_so_climb_up_tiger_tank"/>

		<to name="e_so_idle_look_around_startled_rifle" redirect="std/stand/so/idle/e_so_idle_look_around_startled_rifle"/>
		<to name="e_so_idle_walk_around_rifle" redirect="std/stand/so/idle/e_so_idle_walk_around_rifle"/>
		<to name="e_so_idle_walk_inplace_look_back_rifle" redirect="std/stand/so/idle/e_so_idle_walk_inplace_look_back_rifle"/>
		<to name="e_so_idle_walk_in_place_startled_rifle" redirect="std/stand/so/idle/e_so_idle_walk_in_place_startled_rifle"/>
		<to name="e_so_idle_walk_in_place_worried" redirect="std/stand/so/idle/e_so_idle_walk_in_place_worried"/>
		<to name="e_so_startled_while_eating_snack" redirect="std/stand/so/idle/e_so_startled_while_eating_snack"/>
		
		
		<to name="e_nl_3m_fwd_2m_dwn" redirect="std/stand/so/idle/e_nl_3m_fwd_2m_dwn"/>
		<to name="e_nl_3m_up_2m" redirect="std/stand/so/idle/e_nl_3m_up_2m"/>
		<to name="e_nl_crawl_4m" redirect="std/stand/so/idle/e_nl_crawl_4m"/>
		<to name="e_nl_dwn_6m" redirect="std/stand/so/idle/e_nl_dwn_6m"/>
		<to name="e_nl_ladder_down_7_5m" redirect="std/stand/so/idle/e_nl_ladder_down_7_5m"/>
		<to name="e_nl_ladder_down_9_7m" redirect="std/stand/so/idle/e_nl_ladder_down_9_7m"/>
		<to name="e_nl_ladder_up_4m" redirect="std/stand/so/idle/e_nl_ladder_up_4m"/>
		<to name="e_nl_ladder_up_5m_down_1m" redirect="std/stand/so/idle/e_nl_ladder_up_5m_down_1m"/>
		<to name="e_nl_ladder_up_7_5m" redirect="std/stand/so/idle/e_nl_ladder_up_7_5m"/>
		<to name="e_nl_ladder_up_9_7m" redirect="std/stand/so/idle/e_nl_ladder_up_9_7m"/>
		<to name="e_nl_up_2m" redirect="std/stand/so/idle/e_nl_up_2m"/>
		<to name="e_nl_ladder_up_13_7m" redirect="std/stand/so/idle/e_nl_ladder_up_13_7m"/>
		<to name="e_nl_ladder_down_13_7m" redirect="std/stand/so/idle/e_nl_ladder_down_13_7m"/>
		<to name="e_nl_ladder_up_14_5m" redirect="std/stand/so/idle/e_nl_ladder_up_14_5m"/>
		
		<to name="e_so_between_door_cover_3m" redirect="std/stand/so/idle/e_so_between_door_cover_3m"/>
		<to name="e_so_between_single_door_cover" redirect="std/stand/so/idle/e_so_between_single_door_cover"/>
		<to name="e_so_slide_cover_3m" redirect="std/stand/so/idle/e_so_slide_cover_3m"/>
		<to name="e_so_slide_cover_4m" redirect="std/stand/so/idle/e_so_slide_cover_4m"/>
		<to name="e_so_slide_cover_5m" redirect="std/stand/so/idle/e_so_slide_cover_5m"/>
		<to name="e_so_jump_over_cover_var2" redirect="std/stand/so/idle/e_so_jump_over_cover_var2"/>
		<to name="e_so_jump_over_cover" redirect="std/stand/so/idle/e_so_jump_over_cover"/>
		<to name="e_so_roll_cover_3m" redirect="std/stand/so/idle/e_so_roll_cover_3m"/>
		<to name="e_so_roll_cover_4m" redirect="std/stand/so/idle/e_so_roll_cover_4m"/>
		<to name="e_so_roll_cover_5m" redirect="std/stand/so/idle/e_so_roll_cover_5m"/>
		<to name="e_so_run_cover_3m" redirect="std/stand/so/idle/e_so_run_cover_3m"/>
		<to name="e_so_run_cover_4m" redirect="std/stand/so/idle/e_so_run_cover_4m"/>
		<to name="e_so_run_cover_5m" redirect="std/stand/so/idle/e_so_run_cover_5m"/>
		<to name="e_so_crawl_cover_3m" redirect="std/stand/so/idle/e_so_crawl_cover_3m"/>
		<to name="e_so_crawl_cover_4m" redirect="std/stand/so/idle/e_so_crawl_cover_4m"/>
		<to name="e_so_crawl_cover_5m" redirect="std/stand/so/idle/e_so_crawl_cover_5m"/>
		
		<to name="e_so_slide_to_cover" redirect="std/stand/so/idle/e_so_slide_to_cover"/>
		<to name="e_so_slide_to_cover_var2" redirect="std/stand/so/idle/e_so_slide_to_cover_var2"/>
		<to name="e_so_slide_to_cover_var3" redirect="std/stand/so/idle/e_so_slide_to_cover_var3"/>
		<to name="e_so_dive_to_cover" redirect="std/stand/so/idle/e_so_dive_to_cover"/>
		<to name="e_so_dive_to_cover_var2" redirect="std/stand/so/idle/e_so_dive_to_cover_var2"/>
		<to name="e_so_dive_to_cover_var3" redirect="std/stand/so/idle/e_so_dive_to_cover_var3"/>
		<to name="e_so_roll_to_cover" redirect="std/stand/so/idle/e_so_roll_to_cover"/>
		<to name="e_so_roll_to_cover_var2" redirect="std/stand/so/idle/e_so_roll_to_cover_var2"/>
		<to name="e_so_roll_to_cover_var3" redirect="std/stand/so/idle/e_so_roll_to_cover_var3"/>
		<to name="e_so_run_to_cover" redirect="std/stand/so/idle/e_so_run_to_cover"/>
		<to name="e_so_run_to_cover_var2" redirect="std/stand/so/idle/e_so_run_to_cover_var2"/>
		<to name="e_so_run_to_cover_var3" redirect="std/stand/so/idle/e_so_run_to_cover_var3"/>
		<to name="e_so_crawl_to_cover" redirect="std/stand/so/idle/e_so_crawl_to_cover"/>
		<to name="e_so_chr_walk_to_cover" redirect="std/stand/so/idle/e_so_chr_walk_to_cover"/>
		
		<to name="e_nl_barbwires_jump_var1" redirect="std/stand/so/idle/e_nl_barbwires_jump_var1"/>
		<to name="e_nl_barbwires_jump_var2" redirect="std/stand/so/idle/e_nl_barbwires_jump_var2"/>
		<to name="e_nl_slide_down_low_slope_var1" redirect="std/stand/so/idle/e_nl_slide_down_low_slope_var1"/>
		<to name="e_nl_slide_down_low_slope_var2" redirect="std/stand/so/idle/e_nl_slide_down_low_slope_var2"/>
		<to name="e_nl_slide_down_low_slope_var3" redirect="std/stand/so/idle/e_nl_slide_down_low_slope_var3"/>
		<to name="e_nl_slide_down_slope_var1" redirect="std/stand/so/idle/e_nl_slide_down_slope_var1"/>
		<to name="e_nl_slide_down_slope_var2" redirect="std/stand/so/idle/e_nl_slide_down_slope_var2"/>
		<to name="e_nl_slide_down_slope_var3" redirect="std/stand/so/idle/e_nl_slide_down_slope_var3"/>
		<to name="e_nl_ladder_down_14_5m" redirect="std/stand/so/idle/e_nl_ladder_down_14_5m"/>
		<to name="e_nl_down_5_5m_climb_arc" redirect="std/stand/so/idle/e_nl_down_5_5m_climb_arc"/>
		<to name="e_nl_up_5_5m_climb_arc" redirect="std/stand/so/idle/e_nl_up_5_5m_climb_arc"/>
		<to name="e_nl_over_vault_1_1m" redirect="std/stand/so/idle/e_nl_over_vault_1_1m"/>
		<to name="e_nl_down_jump_2_25m" redirect="std/stand/so/idle/e_nl_down_jump_2_25m"/>
		<to name="e_nl_over_0_75_down_4m" redirect="std/stand/so/idle/e_nl_over_0_75_down_4m"/>
		<to name="e_nl_down_jump_1_8m" redirect="std/stand/so/idle/e_nl_down_jump_1_8m"/>
		<to name="e_nl_over_0_75_down_3_7m" redirect="std/stand/so/idle/e_nl_over_0_75_down_3_7m"/>
		<to name="e_nl_over_0_75_down_4_6m" redirect="std/stand/so/idle/e_nl_over_0_75_down_4_6m"/>
		<to name="e_nl_ladder_up_4m_fwd_1m" redirect="std/stand/so/idle/e_nl_ladder_up_4m_fwd_1m"/>
		<to name="e_nl_over_1m_down_6m" redirect="std/stand/so/idle/e_nl_over_1m_down_6m"/>
		<to name="e_nl_over_1m_down_3_3m" redirect="std/stand/so/idle/e_nl_over_1m_down_3_3m"/>
		<to name="e_nl_up_0_75m_down_1_75m" redirect="std/stand/so/idle/e_nl_up_0_75m_down_1_75m"/>
		<to name="e_nl_climb_over_4m" redirect="std/stand/so/idle/e_nl_climb_over_4m"/>
		<to name="e_nl_up_5m_1m_down_left_stairs" redirect="std/stand/so/idle/e_nl_up_5m_1m_down_left_stairs"/>
		<to name="e_nl_up_5m_1m_down_right_stairs" redirect="std/stand/so/idle/e_nl_up_5m_1m_down_right_stairs"/>
		<to name="e_nl_up_4_4m_down_0_5m" redirect="std/stand/so/idle/e_nl_up_4_4m_down_0_5m"/>
		<to name="e_nl_up_4_3m_down_1m_var2" redirect="std/stand/so/idle/e_nl_up_4_3m_down_1m_var2"/>
		<to name="e_nl_up_4_3m_down_1m" redirect="std/stand/so/idle/e_nl_up_4_3m_down_1m"/>
		<to name="e_nl_up_3_down_0_5m" redirect="std/stand/so/idle/e_nl_up_3_down_0_5m"/>
		<to name="e_nl_over_1m_down_8m" redirect="std/stand/so/idle/e_nl_over_1m_down_8m"/>
		<to name="e_nl_cs_up_front_ladder_down_loop_and_exit_var2" redirect="std/stand/so/idle/e_nl_cs_up_front_ladder_down_loop_and_exit_var2"/>
		<to name="e_nl_cs_up_front_ladder_down_loop_and_exit_var1" redirect="std/stand/so/idle/e_nl_cs_up_front_ladder_down_loop_and_exit_var1"/>
		<to name="e_nl_4m_long_2m_down" redirect="std/stand/so/idle/e_nl_4m_long_2m_down"/>
		<to name="e_nl_over_1m_down_11_5m" redirect="std/stand/so/idle/e_nl_over_1m_down_11_5m"/>
		<to name="e_nl_runjump_far_var1" redirect="std/stand/so/idle/e_nl_runjump_far_var1"/>
		<to name="e_nl_runjump_far_var2" redirect="std/stand/so/idle/e_nl_runjump_far_var2"/>
		<to name="e_nl_runjump_far_var3" redirect="std/stand/so/idle/e_nl_runjump_far_var3"/>
		<to name="e_nl_slide_4m_down_2m" redirect="std/stand/so/idle/e_nl_slide_4m_down_2m"/>
		<to name="e_nl_up_1_5m_down_1m" redirect="std/stand/so/idle/e_nl_up_1_5m_down_1m"/>
		<to name="e_nl_up_1_5m_down_0_8m" redirect="std/stand/so/idle/e_nl_up_1_5m_down_0_8m"/>
		<to name="e_nl_ladder_down_4_3m" redirect="std/stand/so/idle/e_nl_ladder_down_4_3m"/>
		<to name="e_nl_ladder_up_4_3m" redirect="std/stand/so/idle/e_nl_ladder_up_4_3m"/>
		<to name="e_nl_up_1_15m" redirect="std/stand/so/idle/e_nl_up_1_15m"/>
		<to name="e_nl_up_1_down_4m_jump" redirect="std/stand/so/idle/e_nl_up_1_down_4m_jump"/>
		<to name="e_nl_up_ladder_4m_train_cabin" redirect="std/stand/so/idle/e_nl_up_ladder_4m_train_cabin"/>
		<to name="e_nl_down_1_15m" redirect="std/stand/so/idle/e_nl_down_1_15m"/>
		<to name="e_nl_down_1_75m_trainyard" redirect="std/stand/so/idle/e_nl_down_1_75m_trainyard"/>
		<to name="e_nl_jump_over_0_5m_train_cabin" redirect="std/stand/so/idle/e_nl_jump_over_0_5m_train_cabin"/>
		<to name="e_nl_down_4m_jump_train_cabin" redirect="std/stand/so/idle/e_nl_down_4m_jump_train_cabin"/>
		<to name="e_nl_up_ladder_3_7m" redirect="std/stand/so/idle/e_nl_up_ladder_3_7m"/>

		<to name="e_nl_dwn_7m" redirect="std/stand/so/idle/e_nl_dwn_7m"/>
		<to name="e_nl_up_1_down_3_3m" redirect="std/stand/so/idle/e_nl_up_1_down_3_3m"/>
		<to name="e_nl_up_1_down_5_5m" redirect="std/stand/so/idle/e_nl_up_1_down_5_5m"/>
		<to name="e_nl_ladder_down_3_7m" redirect="std/stand/so/idle/e_nl_ladder_down_3_7m"/>
		<to name="e_nl_up_1_down_4_6m" redirect="std/stand/so/idle/e_nl_up_1_down_4_6m"/>
		<to name="e_nl_up_1_down_4_2m" redirect="std/stand/so/idle/e_nl_up_1_down_4_2m"/>
		<to name="e_nl_up_1_down_5_6m" redirect="std/stand/so/idle/e_nl_up_1_down_5_6m"/>
		<to name="e_nl_up_1_down_3_6m" redirect="std/stand/so/idle/e_nl_up_1_down_3_6m"/>
		<to name="e_nl_down_1_85m" redirect="std/stand/so/idle/e_nl_down_1_85m"/>
		<to name="e_nl_down_2_25m" redirect="std/stand/so/idle/e_nl_down_2_25m"/>
		<to name="e_nl_up_4_25m_down_1m" redirect="std/stand/so/idle/e_nl_up_4_25m_down_1m"/>
		<to name="e_nl_up_0_6_down_4_6m" redirect="std/stand/so/idle/e_nl_up_0_6_down_4_6m"/>
		<to name="e_nl_up_0_75_down_3_6m" redirect="std/stand/so/idle/e_nl_up_0_75_down_3_6m"/>
		<to name="e_nl_up_0_75_down_5_6m" redirect="std/stand/so/idle/e_nl_up_0_75_down_5_6m"/>

		<to name="e_nl_up_1m_fwd_3_5m_dwn_4m" redirect="std/stand/so/idle/e_nl_up_1m_fwd_3_5m_dwn_4m"/>
		<to name="e_nl_ladder_down_8m" redirect="std/stand/so/idle/e_nl_ladder_down_8m"/>
		<to name="e_nl_climb_over_2_30m" redirect="std/stand/so/idle/e_nl_climb_over_2_30m"/>
		<to name="e_nl_up_1_35m_down_1_35m" redirect="std/stand/so/idle/e_nl_up_1_35m_down_1_35m"/>
		<to name="nl_train_start_01" redirect="std/stand/so/idle/nl_train_start_01"/>
		<to name="nl_train_start_02" redirect="std/stand/so/idle/nl_train_start_02"/>
		<to name="nl_train_start_03" redirect="std/stand/so/idle/nl_train_start_03"/>
		<to name="e_nl_30m" redirect="std/stand/so/idle/e_nl_30m"/>
		<to name="e_nl_down_0_75" redirect="std/stand/so/idle/e_nl_down_0_75"/>
		<to name="e_nl_up_2_5m_down_2_5m" redirect="std/stand/so/idle/e_nl_up_2_5m_down_2_5m"/>
		<to name="e_nl_climb_over_3_15m" redirect="std/stand/so/idle/e_nl_climb_over_3_15m"/>
		<to name="e_nl_up_2m_down_2m" redirect="std/stand/so/idle/e_nl_up_2m_down_2m"/>
		<to name="e_nl_climb_over_3_75m" redirect="std/stand/so/idle/e_nl_climb_over_3_75m"/>
		
		<!-- Raid End -->

		<to name="e_so_ntl_idle_kickpebble" redirect="std/stand/so/idle/idle_kickpebble"/>
		<to name="e_so_ntl_idle_look" redirect="std/stand/so/idle/idle_look"/>
		<to name="e_so_ntl_idle_look2" redirect="std/stand/so/idle/idle_look2"/>
		<to name="e_so_ntl_idle_clock" redirect="std/stand/so/idle/idle_clock"/>
		<to name="e_so_ntl_idle_brush" redirect="std/stand/so/idle/idle_brush"/>
		<to name="e_so_ntl_idle_stickygum" redirect="std/stand/so/idle/idle_stickygum"/>
		<to name="e_so_ntl_idle_backoff" redirect="std/stand/so/idle/idle_backoff"/>
		<to name="e_so_ntl_wave_camera" redirect="std/stand/so/idle/wave_camera"/>
		<to name="e_so_ntl_smoke_stand" redirect="std/stand/so/idle/smoke_stand/enter"/>
		<to name="e_so_ntl_leanwall" redirect="std/stand/so/idle/lean_wall/enter"/>
		<to name="e_so_unarmed_shake_fence" redirect="std/stand/so/idle/e_so_unarmed_shake_fence"/>
		<to name="e_so_unarmed_scrape_foot_truck" redirect="std/stand/so/idle/e_so_unarmed_scrape_foot_truck"/>
		<to name="e_so_unarmed_sick_puke_sink" redirect="std/stand/so/idle/sick_puke_sink/enter"/>
		<to name="e_so_talking_in_megaphone" redirect="std/stand/so/idle/talking_in_megaphone/enter"/>
		<to name="e_so_push_button_low" redirect="std/stand/so/cbt/e_so_push_button_low"/>
		<to name="e_so_ntl_talk_phone" redirect="std/stand/so/idle/talk_phone"/>
		<to name="e_so_ntl_look_up_wall" redirect="std/stand/so/idle/look_up_wall"/>
		<to name="e_so_ntl_look_corner" redirect="std/stand/so/idle/look_corner"/>
		<to name="e_so_ntl_look_ledge_down" redirect="std/stand/so/idle/look_ledge_down"/>
		<to name="e_so_ntl_look_ledge_up" redirect="std/stand/so/idle/look_ledge_up"/>
		<to name="e_so_ntl_look_under_table" redirect="std/stand/so/idle/look_under_table"/>
		<to name="e_so_ntl_look_under_car" redirect="std/stand/so/idle/look_under_car"/>
		<to name="e_so_plant_c4_low" redirect="std/stand/so/cbt/plant_c4_low"/>
		<to name="e_so_plant_c4_floor" redirect="std/stand/so/cbt/plant_c4_floor"/>
		<to name="e_so_plant_c4_hi" redirect="std/stand/so/cbt/plant_c4_hi"/>
		<to name="e_so_alarm_under_table" redirect="std/stand/so/cbt/alarm_under_table"/>
		<to name="e_so_std_alarm" redirect="std/stand/so/cbt/std_alarm"/>
		<to name="e_so_pull_lever" redirect="std/stand/so/cbt/e_so_pull_lever"/>
		<to name="e_so_interact_mid" redirect="std/stand/so/cbt/e_so_interact_mid"/>
		<to name="e_so_not_dizzy_look" redirect="std/stand/so/cbt/e_so_not_dizzy_look"/>
		<to name="e_so_not_dizzy_look_v2" redirect="std/stand/so/cbt/e_so_not_dizzy_look_v2"/>
		<to name="e_so_keyboard_type_loop" redirect="std/stand/so/idle/e_so_keyboard_type_loop"/>
		<to name="e_so_sneak_wait_crh" redirect="std/stand/so/idle/sneak_wait2_enter"/>
		<to name="e_so_sneak_wait_stand" redirect="std/stand/so/idle/sneak_wait_enter"/>
		<to name="e_so_push_button" redirect="std/stand/so/cbt/e_so_push_button"/>
		<to name="e_so_try_kick_door" redirect="std/stand/so/cbt/e_so_try_kick_door"/>
		<to name="e_so_try_kick_door_loop" redirect="std/stand/so/cbt/e_so_try_kick_door_loop"/>
		<to name="e_so_throw_grenade" redirect="std/stand/so/cbt/e_so_throw_grenade"/>
		<to name="e_so_ntl_boxing" redirect="std/stand/so/idle/e_so_ntl_boxing"/>
		<to name="e_so_ntl_boxing_bag_hold" redirect="std/stand/so/idle/e_so_ntl_boxing_bag_hold"/>
		<to name="e_so_ntl_bouncer_idle" redirect="std/stand/so/idle/e_so_bouncer_idle"/>
		<to name="e_so_ntl_bouncer_stop" redirect="std/stand/so/idle/e_so_bouncer_stop"/>
		<to name="e_so_ntl_bouncer_step_right" redirect="std/stand/so/idle/bouncer_step_right"/>
		<to name="e_so_investigate_truck" redirect="std/stand/so/idle/investigate_truck"/>
		<to name="e_so_investigate_truck_slope" redirect="std/stand/so/idle/investigate_truck_slope"/>
		<to name="e_so_shield_throw_grenade" redirect="std/stand/so/cbt/e_so_shield_throw_grenade"/>
		<to name="e_so_idle_to_door_or_point" redirect="std/stand/so/idle/e_so_idle_to_door_or_point"/>
		<to name="e_so_door_open" redirect="std/stand/so/idle/e_so_door_open"/>
		<to name="e_so_door_knock" redirect="std/stand/so/idle/e_so_door_knock"/>
		<to name="e_so_point_right" redirect="std/stand/so/idle/e_so_point_right"/>
		<to name="e_so_sit_to_point_at" redirect="std/stand/so/idle/e_so_sit_to_point_at"/>
		<to name="e_so_point_at" redirect="std/stand/so/idle/e_so_point_at"/>
		<to name="e_so_point_at_exit_idle" redirect="std/stand/so/idle/e_so_point_at_exit_idle"/>
		
		<to name="e_so_use_key" redirect="std/stand/so/idle/e_so_use_key"/>
		<to name="e_so_insert_keycard_ntl" redirect="std/stand/so/idle/e_so_insert_keycard_ntl"/>
		
		<to name="e_so_exit_speech" redirect="std/stand/so/e_so_exit_speech"/>
		<to name="e_so_enter_speech" redirect="std/stand/so/e_so_enter_speech"/>
		<to name="e_so_loop_speech" redirect="std/stand/so/e_so_loop_speech"/>
	
		<to name="e_so_checkbag_short" redirect="std/stand/so/idle/e_so_checkbag_short"/>
		<to name="e_so_sit_stair1" redirect="std/stand/so/idle/e_so_sit_stair1"/>
		<to name="e_so_sit_stair_exit1" redirect="std/stand/so/idle/e_so_sit_stair_exit1"/>
		<to name="e_so_stair_idle1" redirect="std/stand/so/idle/e_so_stair_idle1"/>
		<to name="e_so_sit_stair2" redirect="std/stand/so/idle/e_so_sit_stair2"/>
		<to name="e_so_sit_stair_exit2" redirect="std/stand/so/idle/e_so_sit_stair_exit2"/>
		<to name="e_so_stair_idle2" redirect="std/stand/so/idle/e_so_stair_idle2"/>

		<to name="e_so_stair_idle2_pose" redirect="std/stand/so/idle/e_so_stair_idle2_pose"/>
		<to name="e_so_stair_idle1_pose" redirect="std/stand/so/idle/e_so_stair_idle1_pose"/>

		<to name="e_so_sit_on_car_hood_exit" redirect="std/stand/so/idle/e_so_sit_on_car_hood_exit"/>
		<to name="e_so_sit_on_car_hood_idle" redirect="std/stand/so/idle/e_so_sit_on_car_hood_idle"/>

		<to name="e_so_container_impact_01" redirect="std/stand/so/idle/e_so_container_impact_01"/>
		<to name="e_so_container_impact_02" redirect="std/stand/so/idle/e_so_container_impact_02"/>
		<to name="e_so_container_impact_03" redirect="std/stand/so/idle/e_so_container_impact_03"/>
		<to name="e_so_container_kick" redirect="std/stand/so/idle/e_so_container_kick"/>

		<to name="e_so_hide_under_car_enter" redirect="std/crouch/so/cbt/hide/under_car/enter"/>
		<to name="e_so_hide_2_5m_vent_enter" redirect="std/crouch/so/cbt/hide/2_5m_vent/enter"/>
		<to name="e_so_hide_behind_door_enter" redirect="std/crouch/so/cbt/hide/behind_door/enter"/>
		<to name="e_so_hide_ledge_enter" redirect="std/crouch/so/cbt/hide/ledge/enter"/>

		<to name="e_so_sup_fumble_inplace" redirect="std/crouch/still/fumble/suppressed_inplace"/>
		<to name="e_so_sup_fumble_run_fwd" redirect="std/crouch/move/run/fumble/suppressed_run_fwd"/>
	</state>


	<state name="std/spawn/loop" type="emptyloop" segment="base">
		<default blend="0" />
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="stand" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="stand" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
		</keys>
	</state>

<!-- Stand -->

	<state name="std/stand" type="template_state" segment="base">
		<from_group name="std/crouch" blend="12"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="stand" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="stand" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still" type="template_state" segment="base">
		<from_group name="std/stand/move/run/stop" blend="2"/>
		<to name="crouch" redirect="std/crouch/still/crh_from_std"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="still" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="still" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/attached_collar/enter" type="once" segment="base">
		<anim name="attached_collar_enter"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/still/std_from_crh" type="mix" segment="base">
		<default blend="9"/>
		<anim name="cbt_legs_crh_to_std" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_to_std_pistol" weight="cbt * pistol"/>
		<anim name="hos_legs_crh_to_std" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_to_std_pistol" weight="hos * pistol"/>

		<anim name="cbt_rifle_crh_to_std" weight="cbt * rifle"/>
		<anim name="cbt_rifle_crh_to_std_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="cbt_rifle_crh_to_std_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="cbt_rifle_crh_to_std_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="cbt_rifle_crh_to_std_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="cbt_rifle_crh_to_std_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="cbt_rifle_crh_to_std_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="cbt_rifle_crh_to_std_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="cbt_rifle_crh_to_std_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="cbt_rifle_crh_to_std_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="cbt_rifle_crh_to_std_m1918" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="cbt_rifle_crh_to_std_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="cbt_rifle_crh_to_std_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="cbt_rifle_crh_to_std_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="cbt_rifle_crh_to_std_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="cbt_rifle_crh_to_std_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="cbt_pistol_crh_to_std" weight="cbt * pistol"/>
		<anim name="cbt_pistol_crh_to_std_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33"/>
		<anim name="cbt_grenade_crh_to_std" weight="cbt * grenade"/>
		<anim name="cbt_melee_crh_to_std" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_to_std_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_to_std_marching_mace" weight="cbt * marching_mace"/>
		<anim name="hos_rifle_crh_to_std" weight="hos * rifle"/>
		<anim name="hos_rifle_crh_to_std_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="hos_rifle_crh_to_std_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="hos_rifle_crh_to_std_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="hos_rifle_crh_to_std_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="hos_rifle_crh_to_std_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="hos_rifle_crh_to_std_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="hos_rifle_crh_to_std_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="hos_rifle_crh_to_std_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="hos_rifle_crh_to_std_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="hos_rifle_crh_to_std_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="hos_rifle_crh_to_std_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="hos_rifle_crh_to_std_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="hos_rifle_crh_to_std_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="hos_rifle_crh_to_std_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="hos_rifle_crh_to_std_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="hos_pistol_crh_to_std" weight="hos * pistol"/>
		<anim name="hos_pistol_crh_to_std_tt33" weight="hos * tt33"/>
		<anim name="hos_grenade_crh_to_std" weight="hos * grenade"/>
		<anim name="hos_melee_crh_to_std" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_to_std_machete" weight="hos * machete"/>
		<anim name="hos_melee_crh_to_std_marching_mace" weight="hos * marching_mace"/>

		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/still/idle" type="template_state" segment="base">
		<from_group name="std/stand/still/turn" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="idle_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle_full_blend" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/idle/look" type="mixloop" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/turn" blend="4"/>
		<from_group name="std/stand/still/spooc" blend="9"/>
		<from_group name="std/stand/spawn/cbt" blend="9"/>
		<from_group name="std/stand/so/idle" blend="9"/>


		<anim name="ntl_legs_idle" weight="cop * ntl * rifle"/>
		<anim name="ntl_legs_idle_pistol" weight="cop * ntl * pistol"/>
		<anim name="ntl_legs_idle_husk1_var1" weight="husk1 * ntl"/>
		<anim name="ntl_legs_idle_husk2_var1" weight="husk2 * ntl"/>
		<anim name="ntl_legs_idle_husk3_var1" weight="husk3 * ntl"/>
		<anim name="ntl_legs_idle_husk4_var1" weight="husk4 * ntl"/>
		<anim name="hos_legs_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_idle_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * pistol"/>
		<anim name="cbt_legs_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_idle_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_idle" weight="tank"/>
		<anim name="flamer_legs_idle" weight="flamer"/>

		<anim name="ntl_rifle_idle" weight="cop * ntl * rifle"/>
		<anim name="ntl_rifle_idle_husk1_var1" weight="husk1 * ntl * rifle"/>
		<anim name="ntl_rifle_idle_husk2_var1" weight="husk2 * ntl * rifle"/>
		<anim name="ntl_rifle_idle_husk3_var1" weight="husk3 * ntl * rifle"/>
		<anim name="ntl_rifle_idle_husk4_var1" weight="husk4 * ntl * rifle"/>
		<anim name="hos_rifle_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * rifle"/>
		<anim name="hos_rifle_idle_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sterling"/>
		<anim name="hos_rifle_idle_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sten"/>
		<anim name="hos_rifle_idle_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * garand"/>
		<anim name="hos_rifle_idle_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * springfield"/>
		<anim name="hos_rifle_idle_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mosin"/>
		<anim name="hos_rifle_idle_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1912"/>
		<anim name="hos_rifle_idle_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * geco"/>
		<anim name="hos_rifle_idle_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mg42"/>
		<anim name="hos_rifle_idle_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * dp28"/>		
		<anim name="hos_rifle_idle_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1918"/>
		<anim name="hos_rifle_idle_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_idle_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="hos_rifle_idle_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * thompson"/>
		<anim name="hos_rifle_idle_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mp38"/>
		<anim name="hos_rifle_idle_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * stg44"/>
		<anim name="cbt_rifle_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * ( 1 - spotter )"/>
		<anim name="cbt_rifle_idle_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling"/>
		<anim name="cbt_rifle_idle_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten"/>
		<anim name="cbt_rifle_idle_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand"/>
		<anim name="cbt_rifle_idle_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield"/>
		<anim name="cbt_rifle_idle_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin"/>
		<anim name="cbt_rifle_idle_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912"/>
		<anim name="cbt_rifle_idle_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco"/>
		<anim name="cbt_rifle_idle_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42"/>
		<anim name="cbt_rifle_idle_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28"/>
		<anim name="cbt_rifle_idle_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918"/>
		<anim name="cbt_rifle_idle_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine"/>
		<anim name="cbt_rifle_idle_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren"/>
		<anim name="cbt_rifle_idle_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren"/>
		<anim name="cbt_rifle_idle_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson"/>
		<anim name="cbt_rifle_idle_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38"/>
		<anim name="cbt_rifle_idle_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44"/>

		<anim name="tank_idle" weight="tank"/>
		<anim name="flamer_idle" weight="flamer"/>
		<anim name="spotter_idle" weight="10 * spotter"/>

		<anim name="ntl_pistol_idle" weight="cop * ntl * pistol"/>
		<anim name="ntl_pistol_idle_husk1_var1" weight="husk1 * ntl * (pistol+grenade+melee)"/>
		<anim name="ntl_pistol_idle_husk2_var1" weight="husk2 * ntl * (pistol+grenade+melee)"/>
		<anim name="ntl_pistol_idle_husk3_var1" weight="husk3 * ntl * (pistol+grenade+melee)"/>
		<anim name="ntl_pistol_idle_husk4_var1" weight="husk4 * ntl * (pistol+grenade+melee)"/>
		<anim name="hos_pistol_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * pistol"/>
		<anim name="hos_pistol_idle_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * tt33"/>
		<anim name="cbt_pistol_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol * (1 - spotter )"/>
		<anim name="cbt_pistol_idle_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33"/>

		<anim name="hos_grenade_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * grenade"/>
		<anim name="cbt_grenade_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * grenade"/>
		<anim name="hos_melee_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * ( melee + pick_axe )"/>
		<anim name="cbt_melee_idle" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_idle_machete" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * machete"/>
		<anim name="hos_melee_idle_machete" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * machete"/>
		<anim name="cbt_melee_idle_marching_mace" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * marching_mace"/>
		<anim name="hos_melee_idle_marching_mace" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * marching_mace"/>
		
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="look" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="look" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/turn" type="template_state" segment="base">
		<from_group name="std/stand/still" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/still/turn/l" type="mix" segment="base">
		<default blend="10" />
		<param name="angle45" value="0"/>
		<param name="angle90" value="0"/>
		<param name="angle135" value="0"/>

		<anim name="ntl_legs_turn_l_45" weight="cop * ntl * angle45 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_45_pistol" weight="cop * ntl * angle45 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_90" weight="cop * ntl * angle90 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_90_pistol" weight="cop * ntl * angle90 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_135" weight="cop * ntl * angle135 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_135_pistol" weight="cop * ntl * angle135 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle45"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle90"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_l_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle135"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>

		<anim name="hos_legs_turn_l_45" weight="hos * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_l_45_pistol" weight="hos * angle45 * pistol"/>
		<anim name="hos_legs_turn_l_90" weight="hos * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_l_90_pistol" weight="hos * angle90 * pistol"/>
		<anim name="hos_legs_turn_l_135" weight="hos * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_l_135_pistol" weight="hos * angle135 * pistol"/>

		<anim name="cbt_legs_turn_l_45" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_l_45_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle45 * pistol"/>
		<anim name="cbt_legs_turn_l_90" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_l_90_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle90 * pistol"/>
		<anim name="cbt_legs_turn_l_135" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_l_135_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle135 * pistol"/>

		<anim name="tank_legs_turn_l_45" weight="tank * angle45"/>
		<anim name="tank_legs_turn_l_90" weight="tank * angle90"/>
		<anim name="tank_legs_turn_l_135" weight="tank * angle135"/>

		<anim name="flamer_legs_turn_l_45" weight="flamer * angle45"/>
		<anim name="flamer_legs_turn_l_90" weight="flamer * angle90"/>
		<anim name="flamer_legs_turn_l_135" weight="flamer * angle135"/>

		<anim name="ntl_rifle_turn_l_45" weight="cop * ntl * rifle * angle45"/>
		<anim name="ntl_rifle_turn_l_90" weight="cop * ntl * rifle * angle90"/>
		<anim name="ntl_rifle_turn_l_135" weight="cop * ntl * rifle * angle135"/>
		<anim name="ntl_rifle_turn_l_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle45"/>
		<anim name="ntl_rifle_turn_l_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle90"/>
		<anim name="ntl_rifle_turn_l_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle135"/>

		<anim name="hos_rifle_turn_l_45" weight="hos * rifle * angle45"/>
		<anim name="hos_rifle_turn_l_90" weight="hos * rifle * angle90"/>
		<anim name="hos_rifle_turn_l_135" weight="hos * rifle * angle135"/>

		<anim name="hos_rifle_turn_l_45_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="hos_rifle_turn_l_90_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="hos_rifle_turn_l_135_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="hos_rifle_turn_l_45_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="hos_rifle_turn_l_90_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="hos_rifle_turn_l_135_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="hos_rifle_turn_l_45_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="hos_rifle_turn_l_90_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="hos_rifle_turn_l_135_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="hos_rifle_turn_l_45_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="hos_rifle_turn_l_90_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="hos_rifle_turn_l_135_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="hos_rifle_turn_l_45_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="hos_rifle_turn_l_90_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="hos_rifle_turn_l_135_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="hos_rifle_turn_l_45_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="hos_rifle_turn_l_90_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="hos_rifle_turn_l_135_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="hos_rifle_turn_l_45_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="hos_rifle_turn_l_90_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="hos_rifle_turn_l_135_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="hos_rifle_turn_l_45_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="hos_rifle_turn_l_90_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="hos_rifle_turn_l_135_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="hos_rifle_turn_l_45_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="hos_rifle_turn_l_90_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="hos_rifle_turn_l_135_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>
		<anim name="hos_rifle_turn_l_45_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="hos_rifle_turn_l_90_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="hos_rifle_turn_l_135_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="hos_rifle_turn_l_45_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="hos_rifle_turn_l_90_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="hos_rifle_turn_l_135_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="hos_rifle_turn_l_45_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="hos_rifle_turn_l_90_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="hos_rifle_turn_l_135_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="hos_rifle_turn_l_45_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="hos_rifle_turn_l_90_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="hos_rifle_turn_l_135_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="hos_rifle_turn_l_45_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="hos_rifle_turn_l_90_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="hos_rifle_turn_l_135_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="hos_rifle_turn_l_45_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="hos_rifle_turn_l_90_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="hos_rifle_turn_l_135_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="cbt_rifle_turn_l_45" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle45"/>
		<anim name="cbt_rifle_turn_l_90" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle90"/>
		<anim name="cbt_rifle_turn_l_135" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle135"/>
		<anim name="cbt_rifle_turn_l_45_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle45"/>
		<anim name="cbt_rifle_turn_l_90_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle90"/>
		<anim name="cbt_rifle_turn_l_135_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle135"/>
		<anim name="cbt_rifle_turn_l_45_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle45"/>
		<anim name="cbt_rifle_turn_l_90_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle90"/>
		<anim name="cbt_rifle_turn_l_135_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle135"/>
		<anim name="cbt_rifle_turn_l_45_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle45"/>
		<anim name="cbt_rifle_turn_l_90_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle90"/>
		<anim name="cbt_rifle_turn_l_135_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle135"/>
		<anim name="cbt_rifle_turn_l_45_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle45"/>
		<anim name="cbt_rifle_turn_l_90_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle90"/>
		<anim name="cbt_rifle_turn_l_135_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle135"/>
		<anim name="cbt_rifle_turn_l_45_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle45"/>
		<anim name="cbt_rifle_turn_l_90_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle90"/>
		<anim name="cbt_rifle_turn_l_135_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle135"/>
		<anim name="cbt_rifle_turn_l_45_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle45"/>
		<anim name="cbt_rifle_turn_l_90_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle90"/>
		<anim name="cbt_rifle_turn_l_135_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle135"/>
		<anim name="cbt_rifle_turn_l_45_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle45"/>
		<anim name="cbt_rifle_turn_l_90_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle90"/>
		<anim name="cbt_rifle_turn_l_135_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle135"/>
		<anim name="cbt_rifle_turn_l_45_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle45"/>
		<anim name="cbt_rifle_turn_l_90_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle90"/>
		<anim name="cbt_rifle_turn_l_135_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle135"/>
		<anim name="cbt_rifle_turn_l_45_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle45"/>
		<anim name="cbt_rifle_turn_l_90_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle90"/>
		<anim name="cbt_rifle_turn_l_135_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle135"/>
		<anim name="cbt_rifle_turn_l_45_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle45"/>
		<anim name="cbt_rifle_turn_l_90_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle90"/>
		<anim name="cbt_rifle_turn_l_135_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle135"/>

		<anim name="tank_turn_l_45" weight="tank * angle45"/>
		<anim name="tank_turn_l_90" weight="tank * angle90"/>
		<anim name="tank_turn_l_135" weight="tank * angle135"/>

		<anim name="flamer_turn_l_45" weight="flamer * angle45"/>
		<anim name="flamer_turn_l_90" weight="flamer * angle90"/>
		<anim name="flamer_turn_l_135" weight="flamer * angle135"/>

		<anim name="ntl_pistol_turn_l_45" weight="cop * ntl * pistol * angle45"/>
		<anim name="ntl_pistol_turn_l_90" weight="cop * ntl * pistol * angle90"/>
		<anim name="ntl_pistol_turn_l_135" weight="cop * ntl * pistol * angle135"/>
		<anim name="ntl_pistol_turn_l_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle45"/>
		<anim name="ntl_pistol_turn_l_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle90"/>
		<anim name="ntl_pistol_turn_l_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle135"/>

		<anim name="hos_pistol_turn_l_45" weight="hos * pistol * angle45"/>
		<anim name="hos_pistol_turn_l_90" weight="hos * pistol * angle90"/>
		<anim name="hos_pistol_turn_l_135" weight="hos * pistol * angle135"/>
		<anim name="hos_pistol_turn_l_45_tt33" weight="hos * tt33 * angle45"/>
		<anim name="hos_pistol_turn_l_90_tt33" weight="hos * tt33 * angle90"/>
		<anim name="hos_pistol_turn_l_135_tt33" weight="hos * tt33 * angle135"/>

		<anim name="cbt_pistol_turn_l_45" weight="cbt * pistol * angle45"/>
		<anim name="cbt_pistol_turn_l_90" weight="cbt * pistol * angle90"/>
		<anim name="cbt_pistol_turn_l_135" weight="cbt * pistol * angle135"/>
		<anim name="cbt_pistol_turn_l_45_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle45"/>
		<anim name="cbt_pistol_turn_l_90_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle90"/>
		<anim name="cbt_pistol_turn_l_135_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle135"/>

		<anim name="hos_grenade_turn_l_45" weight="hos * grenade * angle45"/>
		<anim name="hos_grenade_turn_l_90" weight="hos * grenade * angle90"/>
		<anim name="hos_grenade_turn_l_135" weight="hos * grenade * angle135"/>

		<anim name="cbt_grenade_turn_l_45" weight="cbt * grenade * angle45"/>
		<anim name="cbt_grenade_turn_l_90" weight="cbt * grenade * angle90"/>
		<anim name="cbt_grenade_turn_l_135" weight="cbt * grenade * angle135"/>

		<anim name="hos_melee_turn_l_45" weight="hos * ( melee + pick_axe ) * angle45"/>
		<anim name="hos_melee_turn_l_90" weight="hos * ( melee + pick_axe ) * angle90"/>
		<anim name="hos_melee_turn_l_135" weight="hos * ( melee + pick_axe ) * angle135"/>

		<anim name="hos_melee_turn_l_45_machete" weight="hos * machete * angle45"/>
		<anim name="hos_melee_turn_l_90_machete" weight="hos * machete * angle90"/>
		<anim name="hos_melee_turn_l_135_machete" weight="hos * machete * angle135"/>

		<anim name="hos_melee_turn_l_45_marching_mace" weight="hos * marching_mace * angle45"/>
		<anim name="hos_melee_turn_l_90_marching_mace" weight="hos * marching_mace * angle90"/>
		<anim name="hos_melee_turn_l_135_marching_mace" weight="hos * marching_mace * angle135"/>

		<anim name="cbt_melee_turn_l_45" weight="cbt * ( melee + pick_axe ) * angle45"/>
		<anim name="cbt_melee_turn_l_90" weight="cbt * ( melee + pick_axe ) * angle90"/>
		<anim name="cbt_melee_turn_l_135" weight="cbt * ( melee + pick_axe ) * angle135"/>

		<anim name="cbt_melee_turn_l_45_machete" weight="cbt * machete * angle45"/>
		<anim name="cbt_melee_turn_l_90_machete" weight="cbt * machete * angle90"/>
		<anim name="cbt_melee_turn_l_135_machete" weight="cbt * machete * angle135"/>

		<anim name="cbt_melee_turn_l_45_marching_mace" weight="cbt * marching_mace * angle45"/>
		<anim name="cbt_melee_turn_l_90_marching_mace" weight="cbt * marching_mace * angle90"/>
		<anim name="cbt_melee_turn_l_135_marching_mace" weight="cbt * marching_mace * angle135"/>

		<to name="crouch" redirect="std/crouch/still/turn/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn_l" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/turn/r" type="mix" segment="base">
		<default blend="10" />
		<param name="angle45" value="0"/>
		<param name="angle90" value="0"/>
		<param name="angle135" value="0"/>

		<anim name="ntl_legs_turn_r_45" weight="cop * ntl * angle45 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_45_pistol" weight="cop * ntl * angle45 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_90" weight="cop * ntl * angle90 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_90_pistol" weight="cop * ntl * angle90 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_135" weight="cop * ntl * angle135 * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_135_pistol" weight="cop * ntl * angle135 * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle45"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle90"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_turn_r_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * angle135"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>

		<anim name="hos_legs_turn_r_45" weight="hos * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_r_45_pistol" weight="hos * angle45 * pistol"/>
		<anim name="hos_legs_turn_r_90" weight="hos * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_r_90_pistol" weight="hos * angle90 * pistol"/>
		<anim name="hos_legs_turn_r_135" weight="hos * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_turn_r_135_pistol" weight="hos * angle135 * pistol"/>

		<anim name="cbt_legs_turn_r_45" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_r_45_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle45 * pistol"/>
		<anim name="cbt_legs_turn_r_90" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_r_90_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle90 * pistol"/>
		<anim name="cbt_legs_turn_r_135" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_turn_r_135_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * angle135 * pistol"/>

		<anim name="tank_legs_turn_r_45" weight="tank * angle45"/>
		<anim name="tank_legs_turn_r_90" weight="tank * angle90"/>
		<anim name="tank_legs_turn_r_135" weight="tank * angle135"/>

		<anim name="flamer_legs_turn_r_45" weight="flamer * angle45"/>
		<anim name="flamer_legs_turn_r_90" weight="flamer * angle90"/>
		<anim name="flamer_legs_turn_r_135" weight="flamer * angle135"/>

		<anim name="ntl_rifle_turn_r_45" weight="cop * ntl * rifle * angle45"/>
		<anim name="ntl_rifle_turn_r_90" weight="cop * ntl * rifle * angle90"/>
		<anim name="ntl_rifle_turn_r_135" weight="cop * ntl * rifle * angle135"/>
		<anim name="ntl_rifle_turn_r_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle45"/>
		<anim name="ntl_rifle_turn_r_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle90"/>
		<anim name="ntl_rifle_turn_r_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * rifle * angle135"/>

		<anim name="hos_rifle_turn_r_45" weight="hos * rifle * angle45"/>
		<anim name="hos_rifle_turn_r_90" weight="hos * rifle * angle90"/>
		<anim name="hos_rifle_turn_r_135" weight="hos * rifle * angle135"/>

		<anim name="hos_rifle_turn_r_45_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="hos_rifle_turn_r_90_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="hos_rifle_turn_r_135_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="hos_rifle_turn_r_45_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="hos_rifle_turn_r_90_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="hos_rifle_turn_r_135_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="hos_rifle_turn_r_45_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="hos_rifle_turn_r_90_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="hos_rifle_turn_r_135_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="hos_rifle_turn_r_45_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="hos_rifle_turn_r_90_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="hos_rifle_turn_r_135_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="hos_rifle_turn_r_45_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="hos_rifle_turn_r_90_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="hos_rifle_turn_r_135_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="hos_rifle_turn_r_45_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="hos_rifle_turn_r_90_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="hos_rifle_turn_r_135_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="hos_rifle_turn_r_45_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="hos_rifle_turn_r_90_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="hos_rifle_turn_r_135_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="hos_rifle_turn_r_45_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="hos_rifle_turn_r_90_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="hos_rifle_turn_r_135_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="hos_rifle_turn_r_45_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="hos_rifle_turn_r_90_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="hos_rifle_turn_r_135_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>
		<anim name="hos_rifle_turn_r_45_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="hos_rifle_turn_r_90_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="hos_rifle_turn_r_135_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="hos_rifle_turn_r_45_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="hos_rifle_turn_r_90_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="hos_rifle_turn_r_135_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="hos_rifle_turn_r_45_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="hos_rifle_turn_r_90_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="hos_rifle_turn_r_135_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="hos_rifle_turn_r_45_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="hos_rifle_turn_r_90_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="hos_rifle_turn_r_135_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="hos_rifle_turn_r_45_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="hos_rifle_turn_r_90_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="hos_rifle_turn_r_135_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="hos_rifle_turn_r_45_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="hos_rifle_turn_r_90_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="hos_rifle_turn_r_135_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="cbt_rifle_turn_r_45" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle45"/>
		<anim name="cbt_rifle_turn_r_90" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle90"/>
		<anim name="cbt_rifle_turn_r_135" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle * angle135"/>
		<anim name="cbt_rifle_turn_r_45_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle45"/>
		<anim name="cbt_rifle_turn_r_90_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle90"/>
		<anim name="cbt_rifle_turn_r_135_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * carbine * angle135"/>
		<anim name="cbt_rifle_turn_r_45_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle45"/>
		<anim name="cbt_rifle_turn_r_90_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle90"/>
		<anim name="cbt_rifle_turn_r_135_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * bren * angle135"/>
		<anim name="cbt_rifle_turn_r_45_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle45"/>
		<anim name="cbt_rifle_turn_r_90_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle90"/>
		<anim name="cbt_rifle_turn_r_135_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sten * angle135"/>
		<anim name="cbt_rifle_turn_r_45_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1912 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle45"/>
		<anim name="cbt_rifle_turn_r_90_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle90"/>
		<anim name="cbt_rifle_turn_r_135_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * geco * angle135"/>
		<anim name="cbt_rifle_turn_r_45_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle45"/>
		<anim name="cbt_rifle_turn_r_90_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle90"/>
		<anim name="cbt_rifle_turn_r_135_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mosin * angle135"/>
		<anim name="cbt_rifle_turn_r_45_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle45"/>
		<anim name="cbt_rifle_turn_r_90_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle90"/>
		<anim name="cbt_rifle_turn_r_135_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * springfield * angle135"/>
		<anim name="cbt_rifle_turn_r_45_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mg42 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * dp28 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * m1918 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle45"/>
		<anim name="cbt_rifle_turn_r_90_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle90"/>
		<anim name="cbt_rifle_turn_r_135_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * garand * angle135"/>
		<anim name="cbt_rifle_turn_r_45_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle45"/>
		<anim name="cbt_rifle_turn_r_90_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle90"/>
		<anim name="cbt_rifle_turn_r_135_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * thompson * angle135"/>
		<anim name="cbt_rifle_turn_r_45_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * mp38 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle45"/>
		<anim name="cbt_rifle_turn_r_90_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle90"/>
		<anim name="cbt_rifle_turn_r_135_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * stg44 * angle135"/>
		<anim name="cbt_rifle_turn_r_45_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle45"/>
		<anim name="cbt_rifle_turn_r_90_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle90"/>
		<anim name="cbt_rifle_turn_r_135_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * sterling * angle135"/>

		<anim name="tank_turn_r_45" weight="tank * angle45"/>
		<anim name="tank_turn_r_90" weight="tank * angle90"/>
		<anim name="tank_turn_r_135" weight="tank * angle135"/>

		<anim name="flamer_turn_r_45" weight="flamer * angle45"/>
		<anim name="flamer_turn_r_90" weight="flamer * angle90"/>
		<anim name="flamer_turn_r_135" weight="flamer * angle135"/>

		<anim name="ntl_pistol_turn_r_45" weight="cop * ntl * pistol * angle45"/>
		<anim name="ntl_pistol_turn_r_90" weight="cop * ntl * pistol * angle90"/>
		<anim name="ntl_pistol_turn_r_135" weight="cop * ntl * pistol * angle135"/>
		<anim name="ntl_pistol_turn_r_45_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle45"/>
		<anim name="ntl_pistol_turn_r_90_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle90"/>
		<anim name="ntl_pistol_turn_r_135_husk1" weight="(husk1+husk2+husk3+husk4) * ntl * (pistol+grenade+melee) * angle135"/>

		<anim name="hos_pistol_turn_r_45" weight="hos * pistol * angle45"/>
		<anim name="hos_pistol_turn_r_90" weight="hos * pistol * angle90"/>
		<anim name="hos_pistol_turn_r_135" weight="hos * pistol * angle135"/>
		<anim name="hos_pistol_turn_r_45_tt33" weight="hos * tt33 * angle45"/>
		<anim name="hos_pistol_turn_r_90_tt33" weight="hos * tt33 * angle90"/>
		<anim name="hos_pistol_turn_r_135_tt33" weight="hos * tt33 * angle135"/>

		<anim name="cbt_pistol_turn_r_45" weight="cbt * pistol * angle45"/>
		<anim name="cbt_pistol_turn_r_90" weight="cbt * pistol * angle90"/>
		<anim name="cbt_pistol_turn_r_135" weight="cbt * pistol * angle135"/>
		<anim name="cbt_pistol_turn_r_45_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle45"/>
		<anim name="cbt_pistol_turn_r_90_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle90"/>
		<anim name="cbt_pistol_turn_r_135_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle135"/>
		
		<anim name="hos_grenade_turn_r_45" weight="hos * grenade * angle45"/>
		<anim name="hos_grenade_turn_r_90" weight="hos * grenade * angle90"/>
		<anim name="hos_grenade_turn_r_135" weight="hos * grenade * angle135"/>

		<anim name="cbt_grenade_turn_r_45" weight="cbt * grenade * angle45"/>
		<anim name="cbt_grenade_turn_r_90" weight="cbt * grenade * angle90"/>
		<anim name="cbt_grenade_turn_r_135" weight="cbt * grenade * angle135"/>		
		
		<anim name="hos_melee_turn_r_45" weight="hos * ( melee + pick_axe ) * angle45"/>
		<anim name="hos_melee_turn_r_90" weight="hos * ( melee + pick_axe ) * angle90"/>
		<anim name="hos_melee_turn_r_135" weight="hos * ( melee + pick_axe ) * angle135"/>

		<anim name="hos_melee_turn_r_45_machete" weight="hos * machete * angle45"/>
		<anim name="hos_melee_turn_r_90_machete" weight="hos * machete * angle90"/>
		<anim name="hos_melee_turn_r_135_machete" weight="hos * machete * angle135"/>

		<anim name="hos_melee_turn_r_45_marching_mace" weight="hos * marching_mace * angle45"/>
		<anim name="hos_melee_turn_r_90_marching_mace" weight="hos * marching_mace * angle90"/>
		<anim name="hos_melee_turn_r_135_marching_mace" weight="hos * marching_mace * angle135"/>

		<anim name="cbt_melee_turn_r_45" weight="cbt * ( melee + pick_axe ) * angle45"/>
		<anim name="cbt_melee_turn_r_90" weight="cbt * ( melee + pick_axe ) * angle90"/>
		<anim name="cbt_melee_turn_r_135" weight="cbt * ( melee + pick_axe ) * angle135"/>

		<anim name="cbt_melee_turn_r_45_machete" weight="cbt * machete * angle45"/>
		<anim name="cbt_melee_turn_r_90_machete" weight="cbt * machete * angle90"/>
		<anim name="cbt_melee_turn_r_135_machete" weight="cbt * machete * angle135"/>

		<anim name="cbt_melee_turn_r_45_marching_mace" weight="cbt * marching_mace * angle45"/>
		<anim name="cbt_melee_turn_r_90_marching_mace" weight="cbt * marching_mace * angle90"/>
		<anim name="cbt_melee_turn_r_135_marching_mace" weight="cbt * marching_mace * angle135"/>

		<to name="crouch" redirect="std/crouch/still/turn/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn_r" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/spooc" type="template_state" segment="base">
		<from_group name="std/stand/still" blend="3"/>
		<to name="spooc_exit" redirect="std/stand/still/spooc/spooc_strike/exit"/>
		<to name="idle" redirect="std/stand/still/spooc/spooc_strike/exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/spooc/spooc_strike/enter" type="once" segment="base">
		<from name="std/stand/move/run/fwd" blend="1"/>
		<from_group name="std/stand/still" blend="1"/>
		<anim name="spooc_strike_enter_var1"/>
		<anim name="spooc_strike_enter_var2"/>
		<anim name="spooc_strike_enter_var3"/>
		<anim name="spooc_strike_enter_var4"/> 
		<anim name="spooc_strike_enter_var5"/>
		<anim name="spooc_strike_enter_var6"/>
		<anim name="spooc_strike_enter_var7"/>
		<anim name="spooc_strike_enter_var8"/>
		<anim name="spooc_strike_enter_var9"/>
		<anim name="spooc_strike_enter_var10"/>
		<anim name="spooc_strike_enter_var11"/>
		<anim name="spooc_strike_enter_var12"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="spooc_enter" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="spooc_enter" extension_value="false"/>

			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="clk_jump"/>
			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="clk_roundkick"/>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="clk_turn"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="clk_baton_enter"/>
			<key at="trigger" trigger="anim_act_06" callback="anim_clbk_play_sound" class_name="sound" param1="clk_kick_impact"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_act_clbk" class_name="base" param1="strike" param2="true"/>
			<key at="exit" callback="anim_act_clbk" class_name="base" param1="strike" param2="true"/> <!--This is a fallback in case the trigger at anim_act_01 fails-->

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="baton" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/spooc/spooc_strike/loop/var1" weight="1"/>
		<exit name="std/stand/still/spooc/spooc_strike/loop/var2" weight="1"/>
	</state>

	<state name="std/stand/still/spooc/spooc_strike/exit" type="once" segment="base">
		<anim name="spooc_strike_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="spooc_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="spooc_exit" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/still/spooc/spooc_strike/loop" type="template_state" segment="base">
		<from name="std/stand/still/spooc/spooc_strike/enter" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="clk_punch_3p"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="clk_baton_enter"/>
		</keys>
		<exit name="std/stand/still/spooc/spooc_strike/loop/var1" weight="1"/>
		<exit name="std/stand/still/spooc/spooc_strike/loop/var2" weight="1"/>
	</state>

	<state name="std/stand/still/spooc/spooc_strike/loop/var1" type="once" segment="base">
		<anim name="spooc_strike_loop_var1"/>
	</state>

	<state name="std/stand/still/spooc/spooc_strike/loop/var2" type="once" segment="base">
		<anim name="spooc_strike_loop_var2"/>
	</state>

	<state name="std/stand/still/spooc/spooc_flying_strike" type="once" segment="base">
		<anim name="spooc_flying_strike"/>
		<anim name="spooc_flying_strike_var2"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="spooc_enter" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="spooc_enter" extension_value="false"/>

			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="clk_jump"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_act_clbk" class_name="base" param1="strike" param2="true"/>

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="baton" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/still/sabotage" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="trigger" trigger="anim_act_01" callback="anim_act_clbk" class_name="base" param1="anim_act_01"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_act_clbk" class_name="base" param1="anim_act_02"/>
			<key at="trigger" trigger="anim_act_03" callback="anim_act_clbk" class_name="base" param1="anim_act_03"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/still/sabotage/low" type="once" segment="base">
		<anim name="e_so_kickdrill_low"/>
	</state>

	<state name="std/stand/still/sabotage/mid" type="once" segment="base">
		<anim name="e_so_kickdrill_mid"/>
	</state>

	<state name="std/stand/still/sabotage/high" type="once" segment="base">
		<anim name="e_so_kickdrill_high"/>
	</state>

	<state name="std/stand/move" type="template_state" segment="base">
		<from_group name="std/stand/move" blend="3"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move" extension_value="false"/>
			<key at="trigger" trigger="leftfoot" callback="anim_clbk_footstep" class_name="movement"/>
			<key at="trigger" trigger="rightfoot" callback="anim_clbk_footstep" class_name="movement"/>

			<key at="enter" set_extension="anim_data" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="player_ignore_base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="player_ignore_base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk" type="template_state" segment="base">
		<from_group name="std/stand/move/run" blend="9"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="walk" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="walk" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="haste" extension_value="walk"/>
			<key at="exit" set_extension="anim_data" extension_key="haste" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk/fwd" type="mixloop" segment="base">
		<from_group name="std/stand/move/walk/turn" blend="8"/>

		<anim name="ntl_legs_walk_fwd" weight="cop * ntl * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_fwd_pistol" weight="cop * ntl * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>

		<anim name="ntl_legs_walk_fwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>

		<anim name="hos_legs_walk_fwd" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_walk_fwd_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_walk_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_walk_fwd_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_walk_fwd_slow" weight="tank"/>
		<anim name="flamer_legs_walk_fwd_slow" weight="flamer"/>

		<anim name="ntl_rifle_walk_fwd" weight="cop * ntl * rifle"/>
		<anim name="ntl_rifle_walk_fwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * rifle"/>

		<anim name="hos_rifle_walk_fwd" weight="hos * rifle"/>
		<anim name="cbt_rifle_walk_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="tank_walk_fwd_slow" weight="tank"/>
		<anim name="flamer_walk_fwd_slow" weight="flamer"/>
		<anim name="spotter_walk_fwd_slow" weight="spotter"/>

		<anim name="ntl_pistol_walk_fwd" weight="cop * ntl * pistol"/>
		<anim name="ntl_pistol_walk_fwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * (pistol+grenade+melee)"/>

		<anim name="hos_pistol_walk_fwd" weight="hos * pistol"/>
		<anim name="cbt_pistol_walk_fwd" weight="cbt * pistol"/>
		
		<anim name="hos_grenade_walk_fwd" weight="hos * grenade"/>
		<anim name="cbt_grenade_walk_fwd" weight="cbt * grenade"/>		

		<anim name="hos_melee_walk_fwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_walk_fwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_walk_fwd_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_melee_walk_fwd" weight="cbt * ( melee + pick_axe )"/>	
		<anim name="cbt_melee_walk_fwd_machete" weight="cbt * machete"/>	
		<anim name="cbt_melee_walk_fwd_marching_mace" weight="cbt * marching_mace"/>	

		<to name="crouch" redirect="std/crouch/move/walk/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk/bwd" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="ntl_legs_walk_bwd" weight="cop * ntl * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_bwd_pistol" weight="cop * ntl * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_bwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl"/>

		<anim name="hos_legs_walk_bwd" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_walk_bwd_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_walk_bwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_walk_bwd_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_walk_bwd" weight="tank"/>
		<anim name="flamer_legs_walk_bwd" weight="flamer"/>

		<anim name="ntl_rifle_walk_bwd" weight="cop * ntl * rifle"/>
		<anim name="ntl_rifle_walk_bwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * rifle"/>

		<anim name="hos_rifle_walk_bwd" weight="hos * rifle"/>
		<anim name="cbt_rifle_walk_bwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="tank_walk_bwd" weight="tank"/>
		<anim name="flamer_walk_bwd" weight="flamer"/>

		<anim name="ntl_pistol_walk_bwd" weight="cop * ntl * pistol"/>
		<anim name="ntl_pistol_walk_bwd_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * (pistol+grenade+melee)"/>

		<anim name="hos_pistol_walk_bwd" weight="hos * pistol"/>
		<anim name="cbt_pistol_walk_bwd" weight="cbt * pistol"/>
		
		<anim name="hos_grenade_walk_bwd" weight="hos * grenade"/>
		<anim name="cbt_grenade_walk_bwd" weight="cbt * grenade"/>		

		<anim name="hos_melee_walk_bwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_walk_bwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_walk_bwd_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_melee_walk_bwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_walk_bwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_walk_bwd_marching_mace" weight="cbt * marching_mace"/>	

		<to name="crouch" redirect="std/crouch/move/walk/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk/l" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="ntl_legs_walk_l" weight="cop * ntl * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_l_pistol" weight="cop * ntl * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
		
		</keys>
		<anim name="ntl_legs_walk_l_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl"/>

		<anim name="hos_legs_walk_l" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_walk_l_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_walk_l" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_walk_l_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_walk_l" weight="tank"/>
		<anim name="flamer_legs_walk_l" weight="flamer"/>

		<anim name="ntl_rifle_walk_l" weight="cop * ntl * rifle"/>
		<anim name="ntl_rifle_walk_l_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * rifle"/>

		<anim name="hos_rifle_walk_l" weight="hos * rifle"/>
		<anim name="cbt_rifle_walk_l" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="tank_walk_l" weight="tank"/>
		<anim name="flamer_walk_l" weight="flamer"/>

		<anim name="ntl_pistol_walk_l" weight="cop * ntl * pistol"/>
		<anim name="ntl_pistol_walk_l_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * (pistol+grenade+melee)"/>

		<anim name="hos_pistol_walk_l" weight="hos * pistol"/>
		<anim name="cbt_pistol_walk_l" weight="cbt * pistol"/>

		<anim name="hos_grenade_walk_l" weight="hos * grenade"/>
		<anim name="cbt_grenade_walk_l" weight="cbt * grenade"/>

		<anim name="hos_melee_walk_l" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_walk_l_machete" weight="hos * machete"/>
		<anim name="hos_melee_walk_l_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_melee_walk_l" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_walk_l_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_walk_l_marching_mace" weight="cbt * marching_mace"/>

		<to name="crouch" redirect="std/crouch/move/walk/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk/r" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="ntl_legs_walk_r" weight="cop * ntl * rifle"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_r_pistol" weight="cop * ntl * pistol"/>
		<keys>
			
			<key at="trigger" trigger="footsteps_npc" callback="anim_clbk_play_sound" class_name="sound" param1="footsteps_npc"/>
			
		</keys>
		<anim name="ntl_legs_walk_r_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl"/>

		<anim name="hos_legs_walk_r" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_walk_r_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_walk_r" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_walk_r_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_walk_r" weight="tank"/>
		<anim name="flamer_legs_walk_r" weight="flamer"/>

		<anim name="ntl_rifle_walk_r" weight="cop * ntl * rifle"/>
		<anim name="ntl_rifle_walk_r_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * rifle"/>

		<anim name="hos_rifle_walk_r" weight="hos * rifle"/>
		<anim name="cbt_rifle_walk_r" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="tank_walk_r" weight="tank"/>
		<anim name="flamer_walk_r" weight="flamer"/>

		<anim name="ntl_pistol_walk_r" weight="cop * ntl * pistol"/>
		<anim name="ntl_pistol_walk_r_husk1" weight="( husk1 + husk2 + husk3 + husk4 ) * ntl * (pistol+grenade+melee)"/>

		<anim name="hos_pistol_walk_r" weight="hos * pistol"/>
		<anim name="cbt_pistol_walk_r" weight="cbt * pistol"/>

		<anim name="hos_grenade_walk_r" weight="hos * grenade"/>
		<anim name="cbt_grenade_walk_r" weight="cbt * grenade"/>

		<anim name="hos_melee_walk_r" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_walk_r_machete" weight="hos * machete"/>
		<anim name="hos_melee_walk_r_marching_mace" weight="hos * marching_mace"/>	
		<anim name="cbt_melee_walk_r" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_walk_r_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_walk_r_marching_mace" weight="cbt * marching_mace"/>

		<to name="crouch" redirect="std/crouch/move/walk/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/walk/turn" type="template_state" segment="base">
		<from_group name="std/stand/move/walk" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="walk_turn" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="walk_turn" extension_value="false"/>
		</keys>
	</state>


	<state name="std/stand/move/walk/turn/l/lf" type="mix" segment="base">
		<anim name="ntl_pistol_walk_turn_l_lf" weight="cop * pistol"/>
		<anim name="ntl_rifle_walk_turn_l_lf" weight="cop * rifle"/>
		<anim name="ntl_pistol_walk_turn_l_lf_husk1" weight="husk1"/>
		<exit name="std/stand/move/walk/fwd"/>
	</state>

	<state name="std/stand/move/walk/turn/l/rf" type="mix" segment="base">
		<anim name="ntl_pistol_walk_turn_l_rf" weight="cop * pistol"/>
		<anim name="ntl_rifle_walk_turn_l_rf" weight="cop * rifle"/>
		<anim name="ntl_pistol_walk_turn_l_rf_husk1" weight="husk1"/>
		<exit name="std/stand/move/walk/fwd"/>
	</state>

	<state name="std/stand/move/walk/turn/r/lf" type="mix" segment="base">
		<anim name="ntl_pistol_walk_turn_r_lf" weight="cop * pistol"/>
		<anim name="ntl_rifle_walk_turn_r_lf" weight="cop * rifle"/>
		<anim name="ntl_pistol_walk_turn_r_lf_husk1" weight="husk1"/>
		<exit name="std/stand/move/walk/fwd"/>
	</state>

	<state name="std/stand/move/walk/turn/r/rf" type="mix" segment="base">
		<anim name="ntl_pistol_walk_turn_r_rf" weight="cop * pistol"/>
		<anim name="ntl_rifle_walk_turn_r_rf" weight="cop * rifle"/>
		<anim name="ntl_pistol_walk_turn_r_rf_husk1" weight="husk1"/>
		<exit name="std/stand/move/walk/fwd"/>
	</state>

	<state name="std/stand/move/run" type="template_state" segment="base">
		<from_group name="std/stand/move/run/start" blend="4"/>
		<from_group name="std/stand/move/walk" blend="9"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="haste" extension_value="run"/>
			<key at="exit" set_extension="anim_data" extension_key="haste" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/fwd" type="mixloop" segment="base">
		<anim name="hos_legs_run_fwd" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * ( sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="ntl_legs_run_fwd" weight="ntl * ( 1 - tank - flamer)"/>
		<anim name="hos_legs_run_fwd" weight="hos * ( 1 - tank - flamer) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_run_fwd_pistol" weight="hos * ( 1 - tank - flamer) * pistol"/>
		<anim name="cbt_legs_run_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_run_fwd_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_run_fwd" weight="tank"/>
		<anim name="flamer_legs_run_fwd" weight="flamer"/>

		<anim name="ntl_rifle_run_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * ntl * rifle"/>
		<anim name="hos_rifle_run_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * hos * rifle"/>
		<anim name="hos_rifle_run_fwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_fwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="hos_rifle_run_fwd_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * garand"/>
		<anim name="hos_rifle_run_fwd_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1918"/>
		<anim name="hos_rifle_run_fwd_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mg42"/>
		<anim name="hos_rifle_run_fwd_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * dp28"/>
		<anim name="hos_rifle_run_fwd_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mosin"/>
		<anim name="hos_rifle_run_fwd_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mp38"/>
		<anim name="hos_rifle_run_fwd_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * springfield"/>
		<anim name="hos_rifle_run_fwd_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sten"/>
		<anim name="hos_rifle_run_fwd_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sterling"/>
		<anim name="hos_rifle_run_fwd_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * stg44"/>
		<anim name="hos_rifle_run_fwd_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * thompson"/>
		<anim name="hos_rifle_run_fwd_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1912"/>
		<anim name="hos_rifle_run_fwd_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * geco"/>
		<anim name="cbt_rifle_run_fwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="ntl_pistol_run_fwd" weight="ntl * (pistol+grenade+melee)"/>
		<anim name="hos_pistol_run_fwd" weight="hos * pistol * ( 1 - spotter )"/>
		<anim name="hos_grenade_run_fwd" weight="hos * grenade"/>
		<anim name="hos_melee_run_fwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_run_fwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_run_fwd_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_pistol_run_fwd" weight="cbt * pistol * ( 1 - spotter )"/>
		<anim name="cbt_grenade_run_fwd" weight="cbt * grenade"/>
		<anim name="cbt_melee_run_fwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_run_fwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_run_fwd_marching_mace" weight="cbt * marching_mace"/>
		<anim name="tank_run_fwd" weight="tank"/>
		<anim name="flamer_run_fwd" weight="flamer"/>

		<anim name="spotter_cbt_std_run_fwd" weight="( cbt + hos ) * spotter"/>

		<to name="crouch" redirect="std/crouch/move/run/fwd"/>
		<to name="stop" redirect="std/stand/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/bwd" type="mixloop" segment="base">
		<anim name="ntl_legs_run_bwd" weight="ntl"/>
		<anim name="hos_legs_run_bwd" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_run_bwd_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_run_bwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_run_bwd_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_run_bwd" weight="tank"/>
		<anim name="flamer_legs_run_bwd" weight="flamer"/>

		<anim name="ntl_rifle_run_bwd" weight="ntl * rifle"/>
		<anim name="hos_rifle_run_bwd" weight="hos * rifle"/>
		<anim name="hos_rifle_run_bwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_bwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="hos_rifle_run_bwd_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * garand"/>
		<anim name="hos_rifle_run_bwd_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1918"/>
		<anim name="hos_rifle_run_bwd_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mg42"/>
		<anim name="hos_rifle_run_bwd_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * dp28"/>
		<anim name="hos_rifle_run_bwd_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mosin"/>
		<anim name="hos_rifle_run_bwd_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mp38"/>
		<anim name="hos_rifle_run_bwd_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * springfield"/>
		<anim name="hos_rifle_run_bwd_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sten"/>
		<anim name="hos_rifle_run_bwd_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sterling"/>
		<anim name="hos_rifle_run_bwd_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * stg44"/>
		<anim name="hos_rifle_run_bwd_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * thompson"/>
		<anim name="hos_rifle_run_bwd_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1912"/>
		<anim name="hos_rifle_run_bwd_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * geco"/>
		<anim name="cbt_rifle_run_bwd" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="ntl_pistol_run_bwd" weight="ntl * (pistol+grenade+melee)"/>
		<anim name="hos_pistol_run_bwd" weight="hos * pistol"/>
		<anim name="hos_grenade_run_bwd" weight="hos * grenade"/>
		<anim name="hos_melee_run_bwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_run_bwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_run_bwd_marching_mace" weight="hos * marching_mace"/>	
		<anim name="cbt_pistol_run_bwd" weight="cbt * pistol"/>
		<anim name="cbt_grenade_run_bwd" weight="cbt * grenade"/>
		<anim name="cbt_melee_run_bwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_run_bwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_run_bwd_marching_mace" weight="cbt * marching_mace"/>
		<anim name="tank_run_bwd" weight="tank"/>
		<anim name="flamer_run_bwd" weight="flamer"/>

		<to name="crouch" redirect="std/crouch/move/run/bwd"/>
		<to name="stop" redirect="std/stand/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/l" type="mixloop" segment="base">
		<anim name="ntl_legs_run_l" weight="ntl"/>
		<anim name="hos_legs_run_l" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_run_l_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_run_l" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_run_l_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_run_l" weight="tank"/>
		<anim name="flamer_legs_run_l" weight="flamer"/>

		<anim name="ntl_rifle_run_l" weight="ntl * rifle"/>
		<anim name="hos_rifle_run_l" weight="hos * rifle"/>
		<anim name="hos_rifle_run_l_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_l_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="hos_rifle_run_l_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * garand"/>
		<anim name="hos_rifle_run_l_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1918"/>
		<anim name="hos_rifle_run_l_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mg42"/>
		<anim name="hos_rifle_run_l_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * dp28"/>	
		<anim name="hos_rifle_run_l_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mosin"/>
		<anim name="hos_rifle_run_l_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mp38"/>
		<anim name="hos_rifle_run_l_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * springfield"/>
		<anim name="hos_rifle_run_l_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sten"/>
		<anim name="hos_rifle_run_l_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sterling"/>
		<anim name="hos_rifle_run_l_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * stg44"/>
		<anim name="hos_rifle_run_l_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * thompson"/>
		<anim name="hos_rifle_run_l_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1912"/>
		<anim name="hos_rifle_run_l_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * geco"/>
		<anim name="cbt_rifle_run_l" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="ntl_pistol_run_l" weight="ntl * (pistol+grenade+melee)"/>
		<anim name="hos_pistol_run_l" weight="hos * pistol"/>
		<anim name="hos_grenade_run_l" weight="hos * grenade"/>
		<anim name="hos_melee_run_l" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_run_l_machete" weight="hos * machete"/>
		<anim name="hos_melee_run_l_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_pistol_run_l" weight="cbt * pistol"/>
		<anim name="cbt_grenade_run_l" weight="cbt * grenade"/>
		<anim name="cbt_melee_run_l" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_run_l_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_run_l_mraching_mace" weight="cbt * marching_mace"/>
		<anim name="tank_run_l" weight="tank"/>
		<anim name="flamer_run_l" weight="flamer"/>

		<to name="crouch" redirect="std/crouch/move/run/l"/>
		<to name="stop" redirect="std/stand/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/r" type="mixloop" segment="base">
		<anim name="ntl_legs_run_r" weight="ntl"/>
		<anim name="hos_legs_run_r" weight="hos * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_run_r_pistol" weight="hos * pistol"/>
		<anim name="cbt_legs_run_r" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_run_r_pistol" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * pistol"/>
		<anim name="tank_legs_run_r" weight="tank"/>
		<anim name="flamer_legs_run_r" weight="flamer"/>

		<anim name="ntl_rifle_run_r" weight="ntl * rifle"/>
		<anim name="hos_rifle_run_r" weight="hos * rifle"/>
		<anim name="hos_rifle_run_r_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_r_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="hos_rifle_run_r_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * garand"/>
		<anim name="hos_rifle_run_r_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1918"/>
		<anim name="hos_rifle_run_r_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mg42"/>
		<anim name="hos_rifle_run_r_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * dp28"/>
		<anim name="hos_rifle_run_r_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mosin"/>
		<anim name="hos_rifle_run_r_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * mp38"/>
		<anim name="hos_rifle_run_r_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * springfield"/>
		<anim name="hos_rifle_run_r_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sten"/>
		<anim name="hos_rifle_run_r_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * sterling"/>
		<anim name="hos_rifle_run_r_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * stg44"/>
		<anim name="hos_rifle_run_r_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * thompson"/>
		<anim name="hos_rifle_run_r_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * m1912"/>
		<anim name="hos_rifle_run_r_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * geco"/>
		<anim name="cbt_rifle_run_r" weight="( cop + husk1 + husk2 + husk3 + husk4 ) * cbt * rifle"/>
		<anim name="ntl_pistol_run_r" weight="ntl * (pistol+grenade+melee)"/>
		<anim name="hos_pistol_run_r" weight="hos * pistol"/>
		<anim name="hos_grenade_run_r" weight="hos * grenade"/>
		<anim name="hos_melee_run_r" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_run_r_machete" weight="hos * machete"/>
		<anim name="hos_melee_run_r_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_pistol_run_r" weight="cbt * pistol"/>
		<anim name="cbt_grenade_run_r" weight="cbt * grenade"/>
		<anim name="cbt_melee_run_r" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_run_r_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_run_r_marching_mace" weight="cbt * marching_mace"/>
		<anim name="tank_run_r" weight="tank"/>
		<anim name="flamer_run_r" weight="flamer"/>

		<to name="crouch" redirect="std/crouch/move/run/r"/>
		<to name="stop" redirect="std/stand/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/sprint" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="sprint" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="sprint" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="haste" extension_value="sprint"/>
			<key at="exit" set_extension="anim_data" extension_key="haste" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/sprint/fwd" type="mixloop" segment="base" speed="1">
		<default blend="10" />
		<anim name="hos_legs_sprint_fwd" weight="(1 - sup) * (1 - wnd) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_sprint_fwd_pistol" weight="(1 - sup) * (1 - wnd) * pistol"/>
		<anim name="hos_legs_sup_run_fwd" weight="sup * (1 - wnd) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_run_fwd_pistol" weight="sup * (1 - wnd) * pistol"/>

		<anim name="hos_rifle_sprint_fwd" weight="hos * (1 - sup) * rifle"/>
		<anim name="hos_pistol_sprint_fwd" weight="hos * (1 - sup) * pistol"/>
		<anim name="hos_grenade_sprint_fwd" weight="hos * grenade"/>
		<anim name="hos_melee_sprint_fwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_sprint_fwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_sprint_fwd_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_rifle_sprint_fwd" weight="cbt * (1 - sup) * rifle"/>
		<anim name="cbt_pistol_sprint_fwd" weight="cbt * (1 - sup) * pistol"/>
		<anim name="cbt_grenade_sprint_fwd" weight="cbt * grenade"/>
		<anim name="cbt_melee_sprint_fwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_sprint_fwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_sprint_fwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_fwd" weight="hos * sup * (1 - wnd) * rifle"/>
		<anim name="hos_pistol_sup_run_fwd" weight="hos * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_rifle_sup_run_fwd" weight="cbt * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_pistol_sup_run_fwd" weight="cbt * sup * (1 - wnd) * pistol"/>

		<anim name="rifle_wounded_run_fwd_1" weight="wnd"/>

		<to name="stand" redirect="std/stand/move/run/fwd"/>
		<to name="stop" redirect="std/stand/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/sprint/bwd" type="mixloop" segment="base" speed="1">
		<default blend="10" />
		<anim name="hos_legs_sprint_bwd" weight="(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_sprint_bwd_pistol" weight="(1 - sup) * pistol"/>
		<anim name="hos_legs_sup_run_bwd" weight="sup"/>


		<anim name="hos_rifle_sprint_bwd" weight="hos * (1 - sup) * rifle"/>
		<anim name="hos_pistol_sprint_bwd" weight="hos * (1 - sup) * pistol"/>
		<anim name="hos_grenade_sprint_bwd" weight="hos * grenade"/>
		<anim name="hos_melee_sprint_bwd" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_sprint_bwd_machete" weight="hos * machete"/>
		<anim name="hos_melee_sprint_bwd_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_rifle_sprint_bwd" weight="cbt * (1 - sup) * rifle"/>
		<anim name="cbt_pistol_sprint_bwd" weight="cbt * (1 - sup) * pistol"/>
		<anim name="cbt_grenade_sprint_bwd" weight="cbt * grenade"/>
		<anim name="cbt_melee_sprint_bwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_sprint_bwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_sprint_bwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_bwd" weight="hos * sup * rifle"/>
		<anim name="hos_pistol_sup_run_bwd" weight="hos * sup * pistol"/>
		<anim name="cbt_rifle_sup_run_bwd" weight="cbt * sup * rifle"/>
		<anim name="cbt_pistol_sup_run_bwd" weight="cbt * sup * pistol"/>

		<to name="stand" redirect="std/stand/move/run/bwd"/>
		<to name="stop" redirect="std/stand/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/sprint/l" type="mixloop" segment="base" speed="1">
		<default blend="10" />
		<anim name="hos_legs_sprint_l" weight="(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_sprint_l_pistol" weight="(1 - sup) * pistol"/>
		<anim name="hos_legs_sup_run_l" weight="sup * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_run_l_pistol" weight="sup * pistol"/>

		<anim name="hos_rifle_sprint_l" weight="hos * (1 - sup) * rifle"/>
		<anim name="hos_pistol_sprint_l" weight="hos * (1 - sup) * pistol"/>
		<anim name="hos_grenade_sprint_l" weight="hos * grenade"/>
		<anim name="hos_melee_sprint_l" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_sprint_l_machete" weight="hos * machete"/>
		<anim name="hos_melee_sprint_l_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_rifle_sprint_l" weight="cbt * (1 - sup) * rifle"/>
		<anim name="cbt_pistol_sprint_l" weight="cbt * (1 - sup) * pistol"/>
		<anim name="cbt_grenade_sprint_l" weight="cbt * grenade"/>
		<anim name="cbt_melee_sprint_l" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_sprint_l_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_sprint_l_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_l" weight="hos * sup * rifle"/>
		<anim name="hos_pistol_sup_run_l" weight="hos * sup * pistol"/>
		<anim name="cbt_rifle_sup_run_l" weight="cbt * sup * rifle"/>
		<anim name="cbt_pistol_sup_run_l" weight="cbt * sup * pistol"/>

		<to name="stand" redirect="std/stand/move/run/l"/>
		<to name="stop" redirect="std/stand/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/sprint/r" type="mixloop" segment="base" speed="1">
		<default blend="10" />
		<anim name="hos_legs_sprint_r" weight="(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_sprint_r_pistol" weight="(1 - sup) * pistol"/>
		<anim name="hos_legs_sup_run_r" weight="sup * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_run_r_pistol" weight="sup * pistol"/>

		<anim name="hos_rifle_sprint_r" weight="hos * (1 - sup) * rifle"/>
		<anim name="hos_pistol_sprint_r" weight="hos * (1 - sup) * pistol"/>
		<anim name="hos_grenade_sprint_r" weight="hos * grenade"/>
		<anim name="hos_melee_sprint_r" weight="hos * ( melee + pick_axe )"/>
		<anim name="hos_melee_sprint_r_machete" weight="hos * machete"/>
		<anim name="hos_melee_sprint_r_marching_mace" weight="hos * marching_mace"/>
		<anim name="cbt_rifle_sprint_r" weight="cbt * (1 - sup) * rifle"/>
		<anim name="cbt_pistol_sprint_r" weight="cbt * (1 - sup) * pistol"/>
		<anim name="cbt_grenade_sprint_r" weight="cbt * grenade"/>
		<anim name="cbt_melee_sprint_r" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_sprint_r_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_sprint_r_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_r" weight="hos * sup * rifle"/>
		<anim name="hos_pistol_sup_run_r" weight="hos * sup * pistol"/>
		<anim name="cbt_rifle_sup_run_r" weight="cbt * sup * rifle"/>
		<anim name="cbt_pistol_sup_run_r" weight="cbt * sup * pistol"/>

		<to name="stand" redirect="std/stand/move/run/r"/>
		<to name="stop" redirect="std/stand/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/start" type="template_state" segment="base">
		<from_group name="std/stand/still" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_start" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="run_start_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start_full_blend" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/start/fwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_fwd" weight="( hos + ntl) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_fwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_fwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_fwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_fwd" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_start_fwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_start_fwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_start_fwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_fwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_fwd" weight="cbt * pistol"/>

		<anim name="spotter_cbt_std_idle_to_cbt_std_run_fwd" weight="( cbt + hos + ntl ) * spotter"/>

		<to name="crouch" redirect="std/crouch/move/run/start/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/move/run/fwd"/>
	</state>

	<state name="std/stand/move/run/start/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_start_bwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_start_bwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_start_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_bwd" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/move/run/bwd"/>
	</state>

	<state name="std/stand/move/run/start/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_l" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_start_l_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_start_l_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>	
		<anim name="cbt_rifle_run_start_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_l" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/move/run/l"/>
	</state>

	<state name="std/stand/move/run/start/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_r" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_start_r_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_start_r_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_start_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_r" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/move/run/r"/>
	</state>

	<state name="std/stand/move/run/start/turn" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_start_turn" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start_turn" extension_value="false"/>
		</keys>
		<exit name="std/stand/move/run/fwd"/>
	</state>

	<state name="std/stand/move/run/start/turn/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_turn_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_turn_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_turn_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_turn_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_turn_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_run_start_turn_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_turn_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_turn_bwd" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/turn/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/start/turn/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_turn_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_turn_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_turn_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_turn_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_turn_l" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_run_start_turn_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_turn_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_turn_l" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/turn/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/start/turn/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_start_turn_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_start_turn_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_start_turn_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_start_turn_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_start_turn_r" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_run_start_turn_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_start_turn_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_start_turn_r" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/start/turn/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/stop" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_stop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_stop" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/move/run/stop/fwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_stop_fwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_stop_fwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_stop_fwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_stop_fwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_stop_fwd" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_stop_fwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_stop_fwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_stop_fwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_stop_fwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_stop_fwd" weight="cbt * pistol"/>

		<anim name="spotter_cbt_std_run_fwd_to_cbt_std_idle" weight="cbt * spotter"/>

		<to name="crouch" redirect="std/crouch/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/move/run/stop/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_stop_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_stop_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_stop_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_stop_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_stop_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_stop_bwd_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_stop_bwd_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_stop_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_stop_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_stop_bwd" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/move/run/stop/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_stop_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_stop_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_stop_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_stop_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_stop_l" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_stop_l_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_stop_l_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>
		<anim name="cbt_rifle_run_stop_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_stop_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_stop_l" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/move/run/stop/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_run_stop_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_run_stop_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_run_stop_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_run_stop_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_run_stop_r" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_run_stop_r_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * carbine"/>
		<anim name="hos_rifle_run_stop_r_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * hos * bren"/>	
		<anim name="cbt_rifle_run_stop_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_run_stop_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_run_stop_r" weight="cbt * pistol"/>

		<to name="crouch" redirect="std/crouch/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/freefall" type="template_state" segment="base">
		<from_group name="std/freefall" blend="6"/>
		<to name="stand" redirect="std/stand/still/std_from_crh"/>
		<to name="parachute" redirect="std/freefall_to_parachute"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="freefall" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="freefall" extension_value="false"/>
		</keys>		
	</state>

	<state name="std/freefall/fwd" segment="base" type="mixloop">
		<anim name="freefall_fwd"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fwd" extension_value="false"/>
		</keys>
	</state>
	<state name="std/freefall/l" segment="base" type="mixloop">
		<anim name="freefall_l"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="left" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="left" extension_value="false"/>
		</keys>
	</state>
	<state name="std/freefall/r" segment="base" type="mixloop">
		<anim name="freefall_r"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="right" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="right" extension_value="false"/>
		</keys>
	</state>

	<state name="std/freefall_to_parachute" segment="base" type="once">
		<anim name="freefall_to_parachute"/>
		<exit name="std/parachute/fwd"/>
	</state>

	<state name="std/parachute" type="template_state" segment="base">
		<from_group name="std/parachute" blend="6"/>
		<from name="std/freefall_to_parachute" blend="1"/>
		<to name="stand" redirect="std/stand/still/std_from_crh"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="parachute" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="parachute" extension_value="false"/>
		</keys>			
	</state>

	<state name="std/parachute/fwd" segment="base" type="mixloop">
		<anim name="parachute_fwd"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fwd" extension_value="false"/>
		</keys>
	</state>
	<state name="std/parachute/l" segment="base" type="mixloop">
		<anim name="parachute_l"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="left" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="left" extension_value="false"/>
		</keys>
	</state>
	<state name="std/parachute/r" segment="base" type="mixloop">
		<anim name="parachute_r"/>	
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="right" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="right" extension_value="false"/>
		</keys>
	</state>
	
	<state name="std/drive" type="template_state" segment="base">
			<param name="team_ai" value="0"/>
			<param name="fwd" value="1"/>
			<param name="bwd" value="0"/>
			<param name="l" value="0"/>
			<param name="r" value="0"/>
			<param name="shooting_stance" value="0"/>

			<to name="stand" redirect="std/stand/still/std_from_crh"/>

			<keys>
				<key at="enter" set_extension="anim_data" extension_key="driving" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="driving" extension_value="false"/>

				<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

				<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
				<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

				<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>

				<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

				<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>

				<key at="enter" callback="anim_clbk_enter_vehicle" class_name="movement"/>
				<key at="exit" callback="anim_clbk_exit_vehicle" class_name="movement"/>
			</keys>
	</state>

	<!-- TIGER TANK START -->
	<state name="std/drive/tiger_tank_driver" type="mixloop" segment="base">
		<anim name="tiger_tank_driver_fwd" weight="fwd"/>
	</state>

	<state name="std/drive/tiger_tank_commander" type="mixloop" segment="base">
		
		<anim name="tiger_tank_commander_look_fwd" weight="fwd"/>
		<anim name="tiger_tank_commander_pistol_fwd" weight="fwd * pistol"/>
		<anim name="tiger_tank_commander_pistol_left" weight="l  * pistol"/>
		<anim name="tiger_tank_commander_pistol_right" weight="r  * pistol"/>
		<anim name="tiger_tank_commander_rifle_fwd" weight="fwd * rifle"/>
		<anim name="tiger_tank_commander_rifle_left" weight="l * rifle" />
		<anim name="tiger_tank_commander_rifle_right" weight="r * rifle"/>
	</state>

    <state name="std/drive/tiger_tank_mg" type="mixloop" segment="base">

    	<anim name="tiger_tank_mg_look_fwd" weight="fwd"/>
		<anim name="tiger_tank_mg_pistol_fwd" weight="fwd * pistol"/>
		<anim name="tiger_tank_mg_pistol_left" weight="l  * pistol"/>
		<anim name="tiger_tank_mg_pistol_right" weight="r  * pistol"/>
		<anim name="tiger_tank_mg_rifle_fwd" weight="fwd * rifle"/>
		<anim name="tiger_tank_mg_rifle_left" weight="l * rifle" />
		<anim name="tiger_tank_mg_rifle_right" weight="r * rifle"/>
	</state>	

	<state name="std/drive/tiger_tank_gunner" type="mixloop" segment="base">
		<anim name="tiger_tank_gunner_fwd" weight="fwd"/>
	</state>
	<!-- TIGER TANK END -->

	<!-- KUBELWAGEN START -->
	<state name="std/drive/kubelwagen_driver" type="mixloop" segment="base">
			<anim name="drive_kubelwagen_driver_fwd" weight="fwd"/>
			<anim name="drive_kubelwagen_driver_l" weight="l"/>
			<anim name="drive_kubelwagen_driver_r" weight="r"/>
	</state>
	<state name="std/drive/kubelwagen_passenger" type="mixloop" segment="base">
			<anim name="drive_kubelwagen_passenger_look_fwd" weight="fwd * (1 - shooting_stance - pistol - tt33 - rifle) * (1 - pistol - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="drive_kubelwagen_passenger_look_l" weight="l  * (1 - shooting_stance - pistol - tt33 - rifle) * (1 - pistol - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="drive_kubelwagen_passenger_look_r" weight="r  * (1 - shooting_stance - pistol - tt33 - rifle) * (1 - pistol - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>

			<anim name="drive_kubelwagen_passenger_pistol_fwd" weight="fwd * pistol * (1 - shooting_stance - tt33)"/>
			<anim name="drive_kubelwagen_passenger_pistol_l" weight="l  * pistol * (1 - shooting_stance - tt33)"/>
			<anim name="drive_kubelwagen_passenger_pistol_r" weight="r  * pistol * (1 - shooting_stance - tt33)"/>
			<anim name="passenger_tt33_fwd" weight="fwd * tt33 * (1 - shooting_stance)"/>
			<anim name="passenger_tt33_left" weight="l  * tt33 * (1 - shooting_stance)"/>
			<anim name="passenger_tt33_right" weight="r  * tt33 * (1 - shooting_stance)"/>
			<!-- <anim name="drive_kubelwagen_passenger_pistol_bwd" weight="bwd  * pistol * shooting_stance"/> -->

			<anim name="drive_kubelwagen_passenger_rifle_fwd" weight="fwd * rifle * (1 - shooting_stance) * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="drive_kubelwagen_passenger_rifle_l" weight="l * rifle * (1 - shooting_stance) * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)" />
			<anim name="drive_kubelwagen_passenger_rifle_r" weight="r * rifle * (1 - shooting_stance) * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<!-- <anim name="drive_kubelwagen_passenger_rifle_bwd" weight="bwd * rifle * shooting_stance"/>				 -->

			<anim name="passenger_mg42_left" weight="l * mg42 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_mg42_right" weight="r * mg42 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_mg42_fwd" weight="fwd * mg42 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_dp28_left" weight="l * dp28 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_dp28_right" weight="r * dp28 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_dp28_fwd" weight="fwd * dp28 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_carbine_left" weight="l * carbine * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_carbine_right" weight="r * carbine * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_carbine_fwd" weight="fwd * carbine * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_bren_left" weight="l * bren * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_bren_right" weight="r * bren * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_bren_fwd" weight="fwd * bren * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_mp38_left" weight="l * mp38 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_mp38_right" weight="r * mp38 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_mp38_fwd" weight="fwd * mp38 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_stg44_left" weight="l * stg44 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_stg44_right" weight="r * stg44 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_stg44_fwd" weight="fwd * stg44 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_thompson_left" weight="l * thompson * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_thompson_right" weight="r * thompson * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_thompson_fwd" weight="fwd * thompson * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_garand_left" weight="l * garand * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_garand_right" weight="r * garand * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_garand_fwd" weight="fwd * garand * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_mosin_left" weight="l * mosin * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_mosin_right" weight="r * mosin * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_mosin_fwd" weight="fwd * mosin * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_m1903_left" weight="l * springfield * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_m1903_right" weight="r * springfield * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_m1903_fwd" weight="fwd * springfield * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_m1912_left" weight="l * m1912 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_m1912_right" weight="r * m1912 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_m1912_fwd" weight="fwd * m1912 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_geco_left" weight="l * geco * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_geco_right" weight="r * geco * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_geco_fwd" weight="fwd * geco * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_bar_left" weight="l * m1918 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_bar_right" weight="r * m1918 * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_bar_fwd" weight="fwd * m1918 * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_sten_left" weight="l * sten * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_sten_right" weight="r * sten * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_sten_fwd" weight="fwd * sten * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_sterling_left" weight="l * sterling * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_sterling_right" weight="r * sterling * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_sterling_fwd" weight="fwd * sterling * (1 - shooting_stance) * (1 - pistol)"/>

			<anim name="passenger_grenade_left" weight="l * grenade * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_grenade_right" weight="r * grenade * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_grenade_fwd" weight="fwd * grenade * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_machete_left" weight="l * ( machete + marching_mace ) * (1 - shooting_stance) * (1 - pistol)"/>
			<anim name="passenger_machete_right" weight="r * ( machete + marching_mace ) * (1 - shooting_stance) * (1 - pistol)" />
			<anim name="passenger_machete_fwd" weight="fwd * ( machete + marching_mace ) * (1 - shooting_stance) * (1 - pistol)"/>

	</state>	
	<state name="std/drive/kubelwagen_back_left" type="mixloop" segment="base">
			<anim name="drive_kubelwagen_back_left_fwd" weight="fwd * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="drive_kubelwagen_back_left_l" weight="l * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="drive_kubelwagen_back_left_r" weight="r * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="back_left_passenger_machete_fwd" weight="fwd * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_left_passenger_machete_left" weight="l * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_left_passenger_machete_right" weight="r * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_left_passenger_grenade_fwd" weight="fwd * grenade * (1 - shooting_stance)"/>
			<anim name="back_left_passenger_grenade_left" weight="l * grenade * (1 - shooting_stance)"/>
			<anim name="back_left_passenger_grenade_right" weight="r * grenade * (1 - shooting_stance)"/>

			<anim name="back_left_passenger_door_rifle_fwd" weight="fwd * shooting_stance * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_left_passenger_door_rifle_l" weight="l * shooting_stance * (1 - pistol - mg42 - tt33 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_left_passenger_door_rifle_r" weight="r * shooting_stance * (1 - pistol - mg42 - tt33 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_left_passenger_door_mg42_fwd" weight="fwd * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mg42_l" weight="l * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mg42_r" weight="r * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_dp28_fwd" weight="fwd * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_dp28_l" weight="l * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_dp28_r" weight="r * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_carbine_fwd" weight="fwd * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_left_passenger_door_carbine_l" weight="l * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_left_passenger_door_carbine_r" weight="r * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bren_fwd" weight="fwd * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bren_l" weight="l * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bren_r" weight="r * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_left_passenger_door_garand_fwd" weight="fwd * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_left_passenger_door_garand_l" weight="l * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_left_passenger_door_garand_r" weight="r * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mosin_fwd" weight="fwd * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mosin_l" weight="l * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mosin_r" weight="r * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1903_fwd" weight="fwd * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1903_l" weight="l * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1903_r" weight="r * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1912_fwd" weight="fwd * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1912_l" weight="l * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_m1912_r" weight="r * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_geco_fwd" weight="fwd * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_left_passenger_door_geco_l" weight="l * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_left_passenger_door_geco_r" weight="r * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mp38_fwd" weight="fwd * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mp38_l" weight="l * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_mp38_r" weight="r * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sten_fwd" weight="fwd * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sten_l" weight="l * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sten_r" weight="r * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sterling_fwd" weight="fwd * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sterling_l" weight="l * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_left_passenger_door_sterling_r" weight="r * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_left_passenger_door_stg44_fwd" weight="fwd * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_stg44_l" weight="l * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_stg44_r" weight="r * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_thompson_fwd" weight="fwd * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_left_passenger_door_thompson_l" weight="l * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_left_passenger_door_thompson_r" weight="r * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bar_fwd" weight="fwd * shooting_stance * m1918 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bar_l" weight="l * shooting_stance * m1918 * (1 - pistol)"/>
			<anim name="back_left_passenger_door_bar_r" weight="r * shooting_stance * m1918 * (1 - pistol)"/>

			<anim name="back_left_passenger_door_grenade_fwd" weight="fwd * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_left_passenger_door_grenade_l" weight="l * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_left_passenger_door_grenade_r" weight="r * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_left_passenger_door_machete_fwd" weight="fwd * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>
			<anim name="back_left_passenger_door_machete_l" weight="l * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>
			<anim name="back_left_passenger_door_machete_r" weight="r * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>

			<anim name="back_left_passenger_door_pistol_fwd" weight="fwd * pistol * shooting_stance"/>
			<anim name="back_left_passenger_door_pistol_l" weight="l * pistol * shooting_stance"/>
			<anim name="back_left_passenger_door_pistol_r" weight="r * pistol * shooting_stance"/>
			<anim name="back_left_passenger_door_tt33_fwd" weight="fwd * tt33 * shooting_stance"/>
			<anim name="back_left_passenger_door_tt33_l" weight="l * tt33 * shooting_stance"/>
			<anim name="back_left_passenger_door_tt33_r" weight="r * tt33 * shooting_stance"/>

			<anim name="drive_kubelwagen_back_left_pistol_fwd" weight="fwd * ( pistol + tt33 ) * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_left_pistol_l" weight="l * ( pistol + tt33 ) * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_left_pistol_r" weight="r * ( pistol + tt33 ) * (1 - shooting_stance)"/>


			<!-- <anim name="drive_kubelwagen_passenger_rifle_fwd" weight="fwd * rifle * shooting_stance"/>
			<anim name="drive_kubelwagen_passenger_rifle_l" weight="l * rifle * shooting_stance" />
			<anim name="drive_kubelwagen_passenger_rifle_r" weight="r * rifle * shooting_stance"/> -->
			<!-- <anim name="drive_kubelwagen_passenger_rifle_bwd" weight="bwd * rifle * shooting_stance"/> -->
		
	</state>	
	<state name="std/drive/kubelwagen_back_right" type="mixloop" segment="base">
			<anim name="drive_kubelwagen_back_right_fwd" weight="fwd * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="drive_kubelwagen_back_right_l" weight="l * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="drive_kubelwagen_back_right_r" weight="r * (1 - shooting_stance - machete - marching_mace - grenade)"/>
			<anim name="back_right_passenger_machete_fwd" weight="fwd * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_right_passenger_machete_left" weight="l * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_right_passenger_machete_right" weight="r * ( machete + marching_mace ) * (1 - shooting_stance)"/>
			<anim name="back_right_passenger_grenade_fwd" weight="fwd * grenade * (1 - shooting_stance)"/>
			<anim name="back_right_passenger_grenade_left" weight="l * grenade * (1 - shooting_stance)"/>
			<anim name="back_right_passenger_grenade_right" weight="r * grenade * (1 - shooting_stance)"/>

			<anim name="back_right_passenger_door_rifle_fwd" weight="fwd * shooting_stance * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_right_passenger_door_rifle_l" weight="l * shooting_stance * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_right_passenger_door_rifle_r" weight="r * shooting_stance * (1 - pistol - tt33 - mg42 - dp28 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918 - grenade - machete - marching_mace)"/>
			<anim name="back_right_passenger_door_mg42_fwd" weight="fwd * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mg42_l" weight="l * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mg42_r" weight="r * shooting_stance * mg42 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_dp28_fwd" weight="fwd * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_dp28_l" weight="l * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_dp28_r" weight="r * shooting_stance * dp28 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_carbine_fwd" weight="fwd * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_right_passenger_door_carbine_l" weight="l * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_right_passenger_door_carbine_r" weight="r * shooting_stance * carbine * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bren_fwd" weight="fwd * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bren_l" weight="l * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bren_r" weight="r * shooting_stance * bren * (1 - pistol)"/>
			<anim name="back_right_passenger_door_garand_fwd" weight="fwd * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_right_passenger_door_garand_l" weight="l * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_right_passenger_door_garand_r" weight="r * shooting_stance * garand * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mosin_fwd" weight="fwd * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mosin_l" weight="l * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mosin_r" weight="r * shooting_stance * mosin * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1903_fwd" weight="fwd * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1903_l" weight="l * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1903_r" weight="r * shooting_stance * springfield * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1912_fwd" weight="fwd * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1912_l" weight="l * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_m1912_r" weight="r * shooting_stance * m1912 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_geco_fwd" weight="fwd * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_right_passenger_door_geco_l" weight="l * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_right_passenger_door_geco_r" weight="r * shooting_stance * geco * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mp38_fwd" weight="fwd * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mp38_l" weight="l * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_mp38_r" weight="r * shooting_stance * mp38 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sten_fwd" weight="fwd * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sten_l" weight="l * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sten_r" weight="r * shooting_stance * sten * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sterling_fwd" weight="fwd * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sterling_l" weight="l * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_right_passenger_door_sterling_r" weight="r * shooting_stance * sterling * (1 - pistol)"/>
			<anim name="back_right_passenger_door_stg44_fwd" weight="fwd * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_stg44_l" weight="l * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_stg44_r" weight="r * shooting_stance * stg44 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_thompson_fwd" weight="fwd * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_right_passenger_door_thompson_l" weight="l * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_right_passenger_door_thompson_r" weight="r * shooting_stance * thompson * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bar_fwd" weight="fwd * shooting_stance * m1918 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bar_l" weight="l * shooting_stance * m1918 * (1 - pistol)"/>
			<anim name="back_right_passenger_door_bar_r" weight="r * shooting_stance * m1918 * (1 - pistol)"/>

			<anim name="back_right_passenger_door_grenade_fwd" weight="fwd * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_right_passenger_door_grenade_l" weight="l * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_right_passenger_door_grenade_r" weight="r * shooting_stance * grenade * (1 - pistol)"/>
			<anim name="back_right_passenger_door_machete_fwd" weight="fwd * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>
			<anim name="back_right_passenger_door_machete_l" weight="l * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>
			<anim name="back_right_passenger_door_machete_r" weight="r * shooting_stance * ( machete + marching_mace ) * (1 - pistol)"/>

			<anim name="back_right_passenger_door_pistol_fwd" weight="fwd * pistol * shooting_stance"/>
			<anim name="back_right_passenger_door_pistol_l" weight="l * pistol * shooting_stance"/>
			<anim name="back_right_passenger_door_pistol_r" weight="r * pistol * shooting_stance"/>
			<anim name="back_right_passenger_door_tt33_fwd" weight="fwd * tt33 * shooting_stance"/>
			<anim name="back_right_passenger_door_tt33_l" weight="l * tt33 * shooting_stance"/>
			<anim name="back_right_passenger_door_tt33_r" weight="r * tt33 * shooting_stance"/>

			<anim name="drive_kubelwagen_back_right_pistol_fwd" weight="fwd * ( pistol + tt33 ) * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_right_pistol_l" weight="l  * ( pistol + tt33 ) * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_right_pistol_r" weight="r  * ( pistol + tt33 ) * (1 - shooting_stance)"/>
			<!-- <anim name="drive_kubelwagen_passenger_pistol_bwd" weight="bwd  * pistol * shooting_stance"/> -->

			<!-- <anim name="drive_kubelwagen_passenger_rifle_fwd" weight="fwd * rifle * shooting_stance"/>
			<anim name="drive_kubelwagen_passenger_rifle_l" weight="l * rifle * shooting_stance" />
			<anim name="drive_kubelwagen_passenger_rifle_r" weight="r * rifle * shooting_stance"/> -->
			<!-- <anim name="drive_kubelwagen_passenger_rifle_bwd" weight="bwd * rifle * shooting_stance"/> -->
	</state>


	<state name="std/drive/kubelwagen_back_left_shooting" type="mixloop" segment="base">
<!--
 			<anim name="drive_kubelwagen_back_left_fwd" weight="fwd * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_left_l" weight="l * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_left_r" weight="r * (1 - shooting_stance)"/>
 -->
			<anim name="back_left_passenger_door_rifle_fwd" weight="fwd * shooting_stance * (1 - pistol - mg42 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918)"/>

	</state>	
	<state name="std/drive/kubelwagen_back_right_shooting" type="mixloop" segment="base">
<!--
 			<anim name="drive_kubelwagen_back_right_fwd" weight="fwd * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_right_l" weight="l * (1 - shooting_stance)"/>
			<anim name="drive_kubelwagen_back_right_r" weight="r * (1 - shooting_stance)"/>
 -->
			<anim name="back_right_passenger_door_rifle_fwd" weight="fwd * shooting_stance * (1 - pistol - mg42 - carbine - bren - garand - mosin - springfield - m1912 - geco - mp38 - sten - sterling - stg44 - thompson - m1918)"/>

	</state>

	<!-- KUBELWAGEN END -->
	
	<!-- TRUCK START -->
	<state name="std/drive/truck_driver" type="mixloop" segment="base">
			<anim name="drive_truck_driver_fwd" weight="fwd"/>
			<anim name="drive_truck_driver_l" weight="l"/>
			<anim name="drive_truck_driver_r" weight="r"/>
	</state>	
	<state name="std/drive/truck_passenger" type="mixloop" segment="base">
			<anim name="drive_truck_passenger_look_fwd" weight="fwd * (1 - shooting_stance)"/>
			<anim name="drive_truck_passenger_look_l" weight="l  * (1 - shooting_stance)"/>
			<anim name="drive_truck_passenger_look_r" weight="r  * (1 - shooting_stance)"/>

			<anim name="drive_truck_passenger_pistol_fwd" weight="fwd * pistol * shooting_stance"/>
			<anim name="drive_truck_passenger_pistol_l" weight="l  * pistol * shooting_stance"/>
			<anim name="drive_truck_passenger_pistol_r" weight="r  * pistol * shooting_stance"/>
			<anim name="drive_truck_passenger_pistol_bwd" weight="bwd  * pistol * shooting_stance"/>

			<anim name="drive_truck_passenger_rifle_fwd" weight="fwd * rifle * shooting_stance"/>
			<anim name="drive_truck_passenger_rifle_l" weight="l * rifle * shooting_stance" />
			<anim name="drive_truck_passenger_rifle_r" weight="r * rifle * shooting_stance"/>
			<anim name="drive_truck_passenger_rifle_bwd" weight="bwd * rifle * shooting_stance"/>					
	</state>	
	
	<state name="std/drive/truck_back_left" type="mixloop" segment="base">
			<anim name="drive_truck_back_left_pistol_fwd" weight="fwd * pistol"/>
			<anim name="drive_truck_back_left_pistol_l" weight="l  * pistol"/>
			<anim name="drive_truck_back_left_pistol_r" weight="r  * pistol"/>
			
			<anim name="drive_truck_back_left_rifle_fwd" weight="fwd * rifle"/>
			<anim name="drive_truck_back_left_rifle_l" weight="l * rifle" />
			<anim name="drive_truck_back_left_rifle_r" weight="r * rifle"/>
	</state>	
	<state name="std/drive/truck_back_right" type="mixloop" segment="base">
			<anim name="drive_truck_back_right_pistol_fwd" weight="fwd * pistol"/>
			<anim name="drive_truck_back_right_pistol_l" weight="l  * pistol"/>
			<anim name="drive_truck_back_right_pistol_r" weight="r  * pistol"/>
			

			<anim name="drive_truck_back_right_rifle_fwd" weight="fwd * rifle"/>
			<anim name="drive_truck_back_right_rifle_l" weight="l * rifle" />
			<anim name="drive_truck_back_right_rifle_r" weight="r * rifle"/>
	</state>
	<!-- TRUCK END -->
	
	
	<state name="std/zipline" type="template_state" segment="base">
			<from_group name="std/stand" blend="12"/>

			<keys>
				<key at="enter" set_extension="anim_data" extension_key="zipline" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="zipline" extension_value="false"/>
				<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="zipline"/>
				<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
			</keys>
	</state>

	<state name="std/zipline/still" type="template_state" segment="base">
		<from_group name="std/crouch/still/turn" blend="5"/>
		<from_group name="std/crouch/move/run/stop" blend="2"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="still" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="still" extension_value="false"/>
		</keys>
	</state>

	<state name="std/zipline/still/idle" type="mixloop" segment="base">
		<from_group name="std/dodge" blend="1"/>
		<to name="stand" redirect="std/stand/still/std_from_crh"/>

		<param name="fwd" value="1"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<anim name="cbt_rifle_zipline_fwd" weight="fwd"/>
		<anim name="cbt_rifle_zipline_l" weight="l"/>
		<anim name="cbt_rifle_zipline_r" weight="r"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="on_zipline" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="on_zipline" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="on_zipline" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="idle_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle_full_blend" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>


	<!--
	<state name="std/prone" type="template_state" segment="base">
			<from_group name="std/stand" blend="12"/>
			<to name="stand" redirect="std/stand/still/idle/look"/>
			<to name="reload" redirect="upper_body/crouch_reload"/>
			<to name="recoil_auto" redirect="upper_body/crh/recoil/auto"/>
			<to name="recoil_single" redirect="upper_body/crh/recoil/single"/>
			<to name="recoil_shotgun" redirect="upper_body/crh/recoil/shotgun"/>
			<to name="idle" redirect="std/crouch/still/idle"/>
			<to name="light_hurt" redirect="upper_body/hurt/crouch/light"/>

			<to name="turn_l" redirect="std/crouch/still/turn/l"/>
			<to name="turn_r" redirect="std/crouch/still/turn/r"/>

			<to name="walk_fwd" redirect="std/crouch/move/walk/fwd"/>
			<to name="walk_bwd" redirect="std/crouch/move/walk/bwd"/>
			<to name="walk_l" redirect="std/crouch/move/walk/l"/>
			<to name="walk_r" redirect="std/crouch/move/walk/r"/>

			<to name="run_fwd" redirect="std/crouch/move/run/fwd"/>
			<to name="run_bwd" redirect="std/crouch/move/run/bwd"/>
			<to name="run_l" redirect="std/crouch/move/run/l"/>
			<to name="run_r" redirect="std/crouch/move/run/r"/>

			<to name="run_start_fwd" redirect="std/crouch/move/run/start/fwd"/>
			<to name="run_start_bwd" redirect="std/crouch/move/run/start/bwd"/>
			<to name="run_start_l" redirect="std/crouch/move/run/start/l"/>
			<to name="run_start_r" redirect="std/crouch/move/run/start/r"/>

			<to name="run_start_turn_bwd" redirect="std/crouch/move/run/start/turn/bwd"/>
			<to name="run_start_turn_l" redirect="std/crouch/move/run/start/turn/l"/>
			<to name="run_start_turn_r" redirect="std/crouch/move/run/start/turn/r"/>
			<keys>
				<key at="enter" set_extension="anim_data" extension_key="prone" extension_value="true"/>
				<key at="exit" set_extension="anim_data" extension_key="prone" extension_value="false"/>
				<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="prone"/>
				<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
			</keys>
	</state>

	<state name="std/prone/still" type="template_state" segment="base">
		<from_group name="std/crouch/still/turn" blend="5"/>
		<from_group name="std/crouch/move/run/stop" blend="2"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="still" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="still" extension_value="false"/>
		</keys>
	</state>

	<state name="std/prone/still/idle" type="mixloop" segment="base">
		<from_group name="std/dodge" blend="1"/>
		<to name="stand" redirect="std/stand/still/std_from_crh"/>

		<anim name="cbt_rifle_prone_idle" weight="1"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="proneing" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="proneing" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="proneing" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="idle_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle_full_blend" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>
	-->

	<state name="std/crouch" type="template_state" segment="base">
		<from_group name="std/stand" blend="12"/>
		<to name="stand" redirect="std/stand/still/idle/look"/>
		<to name="reload" redirect="upper_body/crouch_reload"/>
		<to name="recoil_auto" redirect="upper_body/crh/recoil/auto"/>
		<to name="recoil_single" redirect="upper_body/crh/recoil/single"/>
		<to name="recoil_shotgun" redirect="upper_body/crh/recoil/shotgun"/>
		<to name="idle" redirect="std/crouch/still/idle"/>
		<to name="light_hurt" redirect="upper_body/hurt/crouch/light"/>

		<to name="turn_l" redirect="std/crouch/still/turn/l"/>
		<to name="turn_r" redirect="std/crouch/still/turn/r"/>

		<to name="walk_fwd" redirect="std/crouch/move/walk/fwd"/>
		<to name="walk_bwd" redirect="std/crouch/move/walk/bwd"/>
		<to name="walk_l" redirect="std/crouch/move/walk/l"/>
		<to name="walk_r" redirect="std/crouch/move/walk/r"/>

		<to name="run_fwd" redirect="std/crouch/move/run/fwd"/>
		<to name="run_bwd" redirect="std/crouch/move/run/bwd"/>
		<to name="run_l" redirect="std/crouch/move/run/l"/>
		<to name="run_r" redirect="std/crouch/move/run/r"/>

		<to name="run_start_fwd" redirect="std/crouch/move/run/start/fwd"/>
		<to name="run_start_bwd" redirect="std/crouch/move/run/start/bwd"/>
		<to name="run_start_l" redirect="std/crouch/move/run/start/l"/>
		<to name="run_start_r" redirect="std/crouch/move/run/start/r"/>

		<to name="run_start_turn_bwd" redirect="std/crouch/move/run/start/turn/bwd"/>
		<to name="run_start_turn_l" redirect="std/crouch/move/run/start/turn/l"/>
		<to name="run_start_turn_r" redirect="std/crouch/move/run/start/turn/r"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="crouch" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="crouch" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/still" type="template_state" segment="base">
		<from_group name="std/crouch/still/turn" blend="5"/>
		<from_group name="std/crouch/move/run/stop" blend="2"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="still" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="still" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/still/idle" type="mixloop" segment="base">
		<from name="std/dodge" blend="8"/>
		<to name="stand" redirect="std/stand/still/std_from_crh"/>

		

		<anim name="hos_legs_crh_idle" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_idle_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * pistol"/>
		<anim name="cbt_legs_crh_idle" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_crh_idle_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * pistol"/>
		<anim name="hos_legs_sup_idle" weight="sup * ( hos + ntl ) * ( 1 - shield ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_idle_pistol" weight="sup * ( hos + ntl ) * ( 1 - shield ) * pistol"/>
		<anim name="cbt_legs_sup_idle" weight="sup * cbt * ( 1 - shield ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_idle_pistol" weight="sup * cbt * ( 1 - shield ) * pistol"/>

		<anim name="hos_rifle_crh_idle" weight="( hos + ntl ) * rifle * ( 1 - sup ) * ( 1 - spotter )"/>
		<anim name="hos_rifle_crh_idle_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="hos_rifle_crh_idle_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="hos_rifle_crh_idle_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="hos_rifle_crh_idle_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="hos_rifle_crh_idle_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="hos_rifle_crh_idle_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="hos_rifle_crh_idle_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="hos_rifle_crh_idle_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="hos_rifle_crh_idle_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="hos_rifle_crh_idle_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="hos_rifle_crh_idle_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="hos_rifle_crh_idle_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="hos_rifle_crh_idle_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="hos_rifle_crh_idle_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="hos_rifle_crh_idle_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="cbt_rifle_crh_idle" weight="cbt * rifle * ( 1 - sup )"/>
		<anim name="cbt_rifle_crh_idle_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="cbt_rifle_crh_idle_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="cbt_rifle_crh_idle_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="cbt_rifle_crh_idle_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="cbt_rifle_crh_idle_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="cbt_rifle_crh_idle_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="cbt_rifle_crh_idle_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="cbt_rifle_crh_idle_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="cbt_rifle_crh_idle_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="cbt_rifle_crh_idle_m1918" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="cbt_rifle_crh_idle_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="cbt_rifle_crh_idle_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="cbt_rifle_crh_idle_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="cbt_rifle_crh_idle_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="cbt_rifle_crh_idle_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="hos_rifle_sup_idle" weight="( hos + ntl ) * sup * rifle * ( 1 - spotter )"/>
		<anim name="cbt_rifle_sup_idle" weight="cbt * sup * rifle * ( 1 - spotter )"/>
		<anim name="spotter_sup_idle" weight="spotter * sup * ( cbt + hos )"/>
		<anim name="spotter_crh_idle" weight="spotter * ( cbt + hos ) * ( 1 - sup )"/>

		<anim name="hos_pistol_crh_idle" weight="( hos + ntl ) * pistol * ( 1 - sup ) * ( 1 - spotter )"/>
		<anim name="hos_pistol_crh_idle_tt33" weight="( hos + ntl ) * tt33 * ( 1 - sup ) * ( 1 - spotter )"/>
		<anim name="cbt_pistol_crh_idle" weight="cbt * pistol * ( 1 - shield ) * ( 1 - sup ) * ( 1 - spotter )"/>
		<anim name="cbt_pistol_crh_idle_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33"/>
		<anim name="hos_pistol_sup_idle" weight="( hos + ntl ) * sup * pistol * ( 1 - shield ) * ( 1 - spotter )"/>
		<anim name="cbt_pistol_sup_idle" weight="cbt * sup * pistol * ( 1 - shield ) * ( 1 - spotter )"/>

		<anim name="cbt_shield_crh_idle" weight="shield"/>

		<anim name="hos_grenade_crh_idle" weight="( hos + ntl ) * grenade"/>
		<anim name="cbt_grenade_crh_idle" weight="cbt * grenade"/>

		<anim name="hos_melee_crh_idle" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_idle_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_crh_idle_marching_mace" weight="( hos + ntl ) * marching_mace"/>
		<anim name="cbt_melee_crh_idle" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_idle_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_idle_marching_mace" weight="cbt * marching_mace"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="crouching" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="crouching" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="crouching" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="idle_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle_full_blend" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="full_blend" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="idle" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/still/crh_from_std" type="mix" segment="base">
		<default blend="10" />
		<anim name="cbt_legs_std_to_crh" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_std_to_crh_pistol" weight="cbt * pistol"/>
		<anim name="hos_legs_std_to_crh" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_std_to_crh_pistol" weight="( hos + ntl ) * pistol"/>

		<anim name="cbt_rifle_std_to_crh" weight="cbt * rifle * ( 1 - spotter)"/>
		<anim name="cbt_rifle_std_to_crh_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="cbt_rifle_std_to_crh_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="cbt_rifle_std_to_crh_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="cbt_rifle_std_to_crh_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="cbt_rifle_std_to_crh_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="cbt_rifle_std_to_crh_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="cbt_rifle_std_to_crh_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="cbt_rifle_std_to_crh_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="cbt_rifle_std_to_crh_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>	
		<anim name="cbt_rifle_std_to_crh_m1918" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="cbt_rifle_std_to_crh_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="cbt_rifle_std_to_crh_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="cbt_rifle_std_to_crh_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="cbt_rifle_std_to_crh_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="cbt_rifle_std_to_crh_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="cbt_pistol_std_to_crh" weight="cbt * pistol * ( 1 - spotter)"/>
		<anim name="cbt_pistol_std_to_crh_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33"/>
		<anim name="cbt_grenade_std_to_crh" weight="cbt * grenade"/>
		<anim name="cbt_melee_std_to_crh" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_std_to_crh_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_std_to_crh_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_std_to_crh" weight="( hos + ntl ) * rifle"/>
		<anim name="hos_rifle_std_to_crh_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="hos_rifle_std_to_crh_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="hos_rifle_std_to_crh_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="hos_rifle_std_to_crh_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="hos_rifle_std_to_crh_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="hos_rifle_std_to_crh_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="hos_rifle_std_to_crh_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="hos_rifle_std_to_crh_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="hos_rifle_std_to_crh_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="hos_rifle_std_to_crh_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="hos_rifle_std_to_crh_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="hos_rifle_std_to_crh_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="hos_rifle_std_to_crh_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="hos_rifle_std_to_crh_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="hos_rifle_std_to_crh_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="hos_pistol_std_to_crh" weight="( hos + ntl ) * pistol"/>
		<anim name="hos_pistol_std_to_crh_tt33" weight="( hos + ntl ) * tt33"/>
		<anim name="hos_grenade_std_to_crh" weight="( hos + ntl ) * grenade"/>
		<anim name="hos_melee_std_to_crh" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_std_to_crh_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_std_to_crh_marching_mace" weight="( hos + ntl ) * marching_mace"/>

		<anim name="spotter_cbt_std_to_cbt_sup" weight="( cbt + hos ) * spotter"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="look" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="look" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/still/turn" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/still/turn/l" type="mix" segment="base">
		<default blend="10" />
		<param name="angle45" value="0"/>
		<param name="angle90" value="0"/>
		<param name="angle135" value="0"/>

		<anim name="hos_legs_crh_turn_l_45" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_l_45_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle45 * pistol"/>
		<anim name="hos_legs_crh_turn_l_90" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_l_90_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle90 * pistol"/>
		<anim name="hos_legs_crh_turn_l_135" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_l_135_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle135 * pistol"/>

		<anim name="hos_legs_sup_turn_l_45" weight="( hos + ntl ) * sup * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_l_45_pistol" weight="( hos + ntl ) * sup * angle45 * pistol"/>
		<anim name="hos_legs_sup_turn_l_90" weight="( hos + ntl ) * sup * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_l_90_pistol" weight="( hos + ntl ) * sup * angle90 * pistol"/>
		<anim name="hos_legs_sup_turn_l_135" weight="( hos + ntl ) * sup * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_l_135_pistol" weight="( hos + ntl ) * sup * angle135 * pistol"/>

		<anim name="cbt_legs_crh_turn_l_45" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_l_45_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle45 * pistol"/>
		<anim name="cbt_legs_crh_turn_l_90" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_l_90_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle90 * pistol"/>
		<anim name="cbt_legs_crh_turn_l_135" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_l_135_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle135 * pistol"/>

		<anim name="cbt_legs_sup_turn_l_45" weight="cbt * sup * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_l_45_pistol" weight="cbt * sup * angle45 * pistol"/>
		<anim name="cbt_legs_sup_turn_l_90" weight="cbt * sup * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_l_90_pistol" weight="cbt * sup * angle90 * pistol"/>
		<anim name="cbt_legs_sup_turn_l_135" weight="cbt * sup * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_l_135_pistol" weight="cbt * sup * angle135 * pistol"/>

		<anim name="hos_rifle_crh_turn_l_45" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle135"/>

		<anim name="hos_rifle_crh_turn_l_45_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_m1918" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="hos_rifle_crh_turn_l_45_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="hos_rifle_crh_turn_l_90_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="hos_rifle_crh_turn_l_135_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="hos_rifle_sup_turn_l_45" weight="( hos + ntl ) * sup * rifle * angle45"/>
		<anim name="hos_rifle_sup_turn_l_90" weight="( hos + ntl ) * sup * rifle * angle90"/>
		<anim name="hos_rifle_sup_turn_l_135" weight="( hos + ntl ) * sup * rifle * angle135"/>

		<anim name="cbt_rifle_crh_turn_l_45" weight="cbt * ( 1 - sup ) * rifle * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90" weight="cbt * ( 1 - sup ) * rifle * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135" weight="cbt * ( 1 - sup ) * rifle * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>		
		<anim name="cbt_rifle_crh_turn_l_45_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="cbt_rifle_crh_turn_l_45_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="cbt_rifle_crh_turn_l_90_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="cbt_rifle_crh_turn_l_135_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="cbt_rifle_sup_turn_l_45" weight="cbt * sup * rifle * angle45"/>
		<anim name="cbt_rifle_sup_turn_l_90" weight="cbt * sup * rifle * angle90"/>
		<anim name="cbt_rifle_sup_turn_l_135" weight="cbt * sup * rifle * angle135"/>

		<anim name="hos_pistol_crh_turn_l_45" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle45"/>
		<anim name="hos_pistol_crh_turn_l_90" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle90"/>
		<anim name="hos_pistol_crh_turn_l_135" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle135"/>
		<anim name="hos_pistol_crh_turn_l_45_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle45"/>
		<anim name="hos_pistol_crh_turn_l_90_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle90"/>
		<anim name="hos_pistol_crh_turn_l_135_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle135"/>

		<anim name="hos_pistol_sup_turn_l_45" weight="( hos + ntl ) * sup * pistol * angle45"/>
		<anim name="hos_pistol_sup_turn_l_90" weight="( hos + ntl ) * sup * pistol * angle90"/>
		<anim name="hos_pistol_sup_turn_l_135" weight="( hos + ntl ) * sup * pistol * angle135"/>

		<anim name="cbt_pistol_crh_turn_l_45" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle45"/>
		<anim name="cbt_pistol_crh_turn_l_90" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle90"/>
		<anim name="cbt_pistol_crh_turn_l_135" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle135"/>
		<anim name="cbt_pistol_crh_turn_l_45_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle45"/>
		<anim name="cbt_pistol_crh_turn_l_90_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle90"/>
		<anim name="cbt_pistol_crh_turn_l_135_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle135"/>

		<anim name="cbt_pistol_sup_turn_l_45" weight="cbt * sup * pistol * angle45"/>
		<anim name="cbt_pistol_sup_turn_l_90" weight="cbt * sup * pistol * angle90"/>
		<anim name="cbt_pistol_sup_turn_l_135" weight="cbt * sup * pistol * angle135"/>

		<anim name="cbt_shield_crh_turn_l_45" weight="shield * angle45"/>
		<anim name="cbt_shield_crh_turn_l_90" weight="shield * angle90"/>
		<anim name="cbt_shield_crh_turn_l_135" weight="shield * angle135"/>

		<anim name="hos_grenade_crh_turn_l_45" weight="( hos + ntl ) * grenade * angle45"/>
		<anim name="hos_grenade_crh_turn_l_90" weight="( hos + ntl ) * grenade * angle90"/>
		<anim name="hos_grenade_crh_turn_l_135" weight="( hos + ntl ) * grenade * angle135"/>

		<anim name="cbt_grenade_crh_turn_l_45" weight="cbt * grenade * angle45"/>
		<anim name="cbt_grenade_crh_turn_l_90" weight="cbt * grenade * angle90"/>
		<anim name="cbt_grenade_crh_turn_l_135" weight="cbt * grenade * angle135"/>

		<anim name="hos_melee_crh_turn_l_45" weight="( hos + ntl ) * ( melee + pick_axe ) * angle45"/>
		<anim name="hos_melee_crh_turn_l_90" weight="( hos + ntl ) * ( melee + pick_axe ) * angle90"/>
		<anim name="hos_melee_crh_turn_l_135" weight="( hos + ntl ) * ( melee + pick_axe ) * angle135"/>
		<anim name="hos_melee_crh_turn_l_45_machete" weight="( hos + ntl ) * machete * angle45"/>
		<anim name="hos_melee_crh_turn_l_90_machete" weight="( hos + ntl ) * machete * angle90"/>
		<anim name="hos_melee_crh_turn_l_135_machete" weight="( hos + ntl ) * machete * angle135"/>
		<anim name="hos_melee_crh_turn_l_45_marching_mace" weight="( hos + ntl ) * marching_mace * angle45"/>
		<anim name="hos_melee_crh_turn_l_90_marching_mace" weight="( hos + ntl ) * marching_mace * angle90"/>
		<anim name="hos_melee_crh_turn_l_135_marching_mace" weight="( hos + ntl ) * marching_mace * angle135"/>

		<anim name="cbt_melee_crh_turn_l_45" weight="cbt * ( melee + pick_axe ) * angle45"/>
		<anim name="cbt_melee_crh_turn_l_90" weight="cbt * ( melee + pick_axe ) * angle90"/>
		<anim name="cbt_melee_crh_turn_l_135" weight="cbt * ( melee + pick_axe ) * angle135"/>
		<anim name="cbt_melee_crh_turn_l_45_machete" weight="cbt * machete * angle45"/>
		<anim name="cbt_melee_crh_turn_l_90_machete" weight="cbt * machete * angle90"/>
		<anim name="cbt_melee_crh_turn_l_135_machete" weight="cbt * machete * angle135"/>
		<anim name="cbt_melee_crh_turn_l_45_marching_mace" weight="cbt * marching_mace * angle45"/>
		<anim name="cbt_melee_crh_turn_l_90_marching_mace" weight="cbt * marching_mace * angle90"/>
		<anim name="cbt_melee_crh_turn_l_135_marching_mace" weight="cbt * marching_mace * angle135"/>

		<to name="stand" redirect="std/stand/still/turn/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn_l" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/still/turn/r" type="mix" segment="base">
		<default blend="10" />
		<param name="angle45" value="0"/>
		<param name="angle90" value="0"/>
		<param name="angle135" value="0"/>

		<anim name="hos_legs_crh_turn_r_45" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_r_45_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle45 * pistol"/>
		<anim name="hos_legs_crh_turn_r_90" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_r_90_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle90 * pistol"/>
		<anim name="hos_legs_crh_turn_r_135" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="hos_legs_crh_turn_r_135_pistol" weight="( hos + ntl ) * ( 1 - shield ) * ( 1 - sup ) * angle135 * pistol"/>

		<anim name="hos_legs_sup_turn_r_45" weight="( hos + ntl ) * sup * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_r_45_pistol" weight="( hos + ntl ) * sup * angle45 * pistol"/>
		<anim name="hos_legs_sup_turn_r_90" weight="( hos + ntl ) * sup * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_r_90_pistol" weight="( hos + ntl ) * sup * angle90 * pistol"/>
		<anim name="hos_legs_sup_turn_r_135" weight="( hos + ntl ) * sup * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_turn_r_135_pistol" weight="( hos + ntl ) * sup * angle135 * pistol"/>

		<anim name="cbt_legs_crh_turn_r_45" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_r_45_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle45 * pistol"/>
		<anim name="cbt_legs_crh_turn_r_90" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_r_90_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle90 * pistol"/>
		<anim name="cbt_legs_crh_turn_r_135" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace + carbine + bren + sten + m1912 + geco + mosin + springfield + mg42 + dp28 + m1918 + garand + thompson + mp38 + stg44 + sterling + tt33 )"/>
		<anim name="cbt_legs_crh_turn_r_135_pistol" weight="cbt * ( 1 - shield ) * ( 1 - sup ) * angle135 * pistol"/>

		<anim name="cbt_legs_sup_turn_r_45" weight="cbt * sup * angle45 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_r_45_pistol" weight="cbt * sup * angle45 * pistol"/>
		<anim name="cbt_legs_sup_turn_r_90" weight="cbt * sup * angle90 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_r_90_pistol" weight="cbt * sup * angle90 * pistol"/>
		<anim name="cbt_legs_sup_turn_r_135" weight="cbt * sup * angle135 * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_turn_r_135_pistol" weight="cbt * sup * angle135 * pistol"/>

		<anim name="hos_rifle_crh_turn_r_45" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135" weight="( hos + ntl ) * ( 1 - sup ) * rifle * angle135"/>

		<anim name="hos_rifle_crh_turn_r_45_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_carbine" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_bren" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_sten" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_m1912" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_geco" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_mosin" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_springfield" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_mg42" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_dp28" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>		
		<anim name="hos_rifle_crh_turn_r_45_m1918" weight="hos * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_m1918" weight="hos * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_m1918" weight="hos * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_garand" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_thompson" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_mp38" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_stg44" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="hos_rifle_crh_turn_r_45_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="hos_rifle_crh_turn_r_90_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="hos_rifle_crh_turn_r_135_sterling" weight="hos * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="hos_rifle_sup_turn_r_45" weight="( hos + ntl ) * sup * rifle * angle45"/>
		<anim name="hos_rifle_sup_turn_r_90" weight="( hos + ntl ) * sup * rifle * angle90"/>
		<anim name="hos_rifle_sup_turn_r_135" weight="( hos + ntl ) * sup * rifle * angle135"/>

		<anim name="cbt_rifle_crh_turn_r_45" weight="cbt * ( 1 - sup ) * rifle * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90" weight="cbt * ( 1 - sup ) * rifle * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135" weight="cbt * ( 1 - sup ) * rifle * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_carbine" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * carbine * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_bren" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * bren * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_sten" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sten * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_m1912" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * m1912 * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_geco" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * geco * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_mosin" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mosin * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_springfield" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * springfield * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_mg42" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mg42 * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_dp28" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * dp28 * angle135"/>		
		<anim name="cbt_rifle_crh_turn_r_45_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_m1918" weight="cbt * ( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918 * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_garand" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * garand * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_thompson" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * thompson * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_mp38" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * mp38 * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_stg44" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * stg44 * angle135"/>
		<anim name="cbt_rifle_crh_turn_r_45_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle45"/>
		<anim name="cbt_rifle_crh_turn_r_90_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle90"/>
		<anim name="cbt_rifle_crh_turn_r_135_sterling" weight="cbt * ( husk1 + husk2 + husk3 + husk4 ) * sterling * angle135"/>

		<anim name="cbt_rifle_sup_turn_r_45" weight="cbt * sup * rifle * angle45"/>
		<anim name="cbt_rifle_sup_turn_r_90" weight="cbt * sup * rifle * angle90"/>
		<anim name="cbt_rifle_sup_turn_r_135" weight="cbt * sup * rifle * angle135"/>

		<anim name="hos_pistol_crh_turn_r_45" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle45"/>
		<anim name="hos_pistol_crh_turn_r_90" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle90"/>
		<anim name="hos_pistol_crh_turn_r_135" weight="( hos + ntl ) * ( 1 - sup ) * pistol * angle135"/>
		<anim name="hos_pistol_crh_turn_r_45_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle45"/>
		<anim name="hos_pistol_crh_turn_r_90_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle90"/>
		<anim name="hos_pistol_crh_turn_r_135_tt33" weight="( hos + ntl ) * ( 1 - sup ) * tt33 * angle135"/>

		<anim name="hos_pistol_sup_turn_r_45" weight="( hos + ntl ) * sup * pistol * angle45"/>
		<anim name="hos_pistol_sup_turn_r_90" weight="( hos + ntl ) * sup * pistol * angle90"/>
		<anim name="hos_pistol_sup_turn_r_135" weight="( hos + ntl ) * sup * pistol * angle135"/>

		<anim name="cbt_pistol_crh_turn_r_45" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle45"/>
		<anim name="cbt_pistol_crh_turn_r_90" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle90"/>
		<anim name="cbt_pistol_crh_turn_r_135" weight="cbt * ( 1 - sup ) * ( 1 - shield ) * pistol * angle135"/>
		<anim name="cbt_pistol_crh_turn_r_45_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle45"/>
		<anim name="cbt_pistol_crh_turn_r_90_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle90"/>
		<anim name="cbt_pistol_crh_turn_r_135_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * cbt * tt33 * angle135"/>

		<anim name="cbt_pistol_sup_turn_r_45" weight="cbt * sup * pistol * angle45"/>
		<anim name="cbt_pistol_sup_turn_r_90" weight="cbt * sup * pistol * angle90"/>
		<anim name="cbt_pistol_sup_turn_r_135" weight="cbt * sup * pistol * angle135"/>

		<anim name="cbt_shield_crh_turn_r_45" weight="shield * angle45"/>
		<anim name="cbt_shield_crh_turn_r_90" weight="shield * angle90"/>
		<anim name="cbt_shield_crh_turn_r_135" weight="shield * angle135"/>

		<anim name="hos_grenade_crh_turn_r_45" weight="( hos + ntl ) * grenade * angle45"/>
		<anim name="hos_grenade_crh_turn_r_90" weight="( hos + ntl ) * grenade * angle90"/>
		<anim name="hos_grenade_crh_turn_r_135" weight="( hos + ntl ) * grenade * angle135"/>

		<anim name="cbt_grenade_crh_turn_r_45" weight="cbt * grenade * angle45"/>
		<anim name="cbt_grenade_crh_turn_r_90" weight="cbt * grenade * angle90"/>
		<anim name="cbt_grenade_crh_turn_r_135" weight="cbt *grenade * angle135"/>
		
		<anim name="hos_melee_crh_turn_r_45" weight="( hos + ntl ) * ( melee + pick_axe ) * angle45"/>
		<anim name="hos_melee_crh_turn_r_90" weight="( hos + ntl ) * ( melee + pick_axe ) * angle90"/>
		<anim name="hos_melee_crh_turn_r_135" weight="( hos + ntl ) * ( melee + pick_axe ) * angle135"/>
		<anim name="hos_melee_crh_turn_r_45_machete" weight="( hos + ntl ) * machete * angle45"/>
		<anim name="hos_melee_crh_turn_r_90_machete" weight="( hos + ntl ) * machete * angle90"/>
		<anim name="hos_melee_crh_turn_r_135_machete" weight="( hos + ntl ) * machete * angle135"/>
		<anim name="hos_melee_crh_turn_r_45_marching_mace" weight="( hos + ntl ) * marching_mace * angle45"/>
		<anim name="hos_melee_crh_turn_r_90_marching_mace" weight="( hos + ntl ) * marching_mace * angle90"/>
		<anim name="hos_melee_crh_turn_r_135_marching_mace" weight="( hos + ntl ) * marching_mace * angle135"/>

		<anim name="cbt_melee_crh_turn_r_45" weight="cbt * ( melee + pick_axe ) * angle45"/>
		<anim name="cbt_melee_crh_turn_r_90" weight="cbt * ( melee + pick_axe ) * angle90"/>
		<anim name="cbt_melee_crh_turn_r_135" weight="cbt * ( melee + pick_axe ) * angle135"/>
		<anim name="cbt_melee_crh_turn_r_45_machete" weight="cbt * machete * angle45"/>
		<anim name="cbt_melee_crh_turn_r_90_machete" weight="cbt * machete * angle90"/>
		<anim name="cbt_melee_crh_turn_r_135_machete" weight="cbt * machete * angle135"/>
		<anim name="cbt_melee_crh_turn_r_45_marching_mace" weight="cbt * marching_mace * angle45"/>
		<anim name="cbt_melee_crh_turn_r_90_marching_mace" weight="cbt * marching_mace * angle90"/>
		<anim name="cbt_melee_crh_turn_r_135_marching_mace" weight="cbt * marching_mace * angle135"/>

		<to name="stand" redirect="std/stand/still/turn/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="turn_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="turn_r" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/still/suppressed_reaction" type="mix" segment="base">
		<param name="from_stand" value="0" />
		<default blend="10" />
		<anim name="cbt_rifle_std_to_sup" weight="cbt * rifle * from_stand"/>
		<anim name="cbt_rifle_crh_to_sup" weight="cbt * rifle * ( 1 - from_stand )"/>
		<anim name="hos_rifle_std_to_sup" weight="hos * rifle * from_stand"/>
		<anim name="hos_rifle_crh_to_sup" weight="hos * rifle * ( 1 - from_stand )"/>

		<anim name="cbt_pistol_std_to_sup" weight="cbt * pistol * from_stand"/>
		<anim name="cbt_pistol_crh_to_sup" weight="cbt * pistol * ( 1 - from_stand )"/>
		<anim name="hos_pistol_std_to_sup" weight="hos * pistol * from_stand"/>
		<anim name="hos_pistol_crh_to_sup" weight="hos * pistol * ( 1 - from_stand )"/>

		<anim name="spotter_cbt_crh_to_sup" weight="( hos + cbt ) * spotter * ( 1 - from_stand )"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act_idle" extension_value="false"/>
		</keys>

		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/still/fumble" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fumble" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fumble" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/still/fumble/suppressed_inplace" type="once" segment="base">
		<anim name="e_so_fumble_sup_still_1"/>
		<anim name="e_so_fumble_sup_still_2"/>
		<anim name="e_so_fumble_sup_still_3"/>
		<anim name="e_so_fumble_sup_still_4"/>
	</state>

	<state name="std/crouch/move" type="template_state" segment="base">
		<to name="run_stop_fwd" redirect="std/crouch/move/run/stop/fwd"/>
		<to name="run_stop_bwd" redirect="std/crouch/move/run/stop/bwd"/>
		<to name="run_stop_l" redirect="std/crouch/move/run/stop/l"/>
		<to name="run_stop_r" redirect="std/crouch/move/run/stop/r"/>
		<from_group name="std/crouch/move" blend="3"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move" extension_value="false"/>
			<key at="trigger" trigger="leftfoot" callback="anim_clbk_footstep" class_name="movement"/>
			<key at="trigger" trigger="rightfoot" callback="anim_clbk_footstep" class_name="movement"/>

			<key at="enter" set_extension="anim_data" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="player_ignore_base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="player_ignore_base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/walk" type="template_state" segment="base">
		<from_group name="std/crouch/move/run" blend="9"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="walk" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="walk" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="haste" extension_value="walk"/>
			<key at="exit" set_extension="anim_data" extension_key="haste" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/walk/fwd" type="mixloop" segment="base">
		<from_group name="std/special/to_idle" blend="8"/>
		<anim name="hos_legs_crh_walk_fwd" weight="(hos + ntl) * (1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_crh_walk_fwd_pistol" weight="(hos + ntl) * (1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_walk_fwd" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_crh_walk_fwd_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_walk_fwd" weight="( hos * sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_walk_fwd_pistol" weight="( hos * sup ) * pistol"/>
		<anim name="cbt_legs_sup_walk_fwd" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_walk_fwd_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_walk_fwd" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_walk_fwd" weight="cbt * (1 - sup) * rifle"/>

		<anim name="hos_pistol_crh_walk_fwd" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_walk_fwd" weight="cbt * (1 - sup) * pistol * (1-shield)"/>

		<anim name="hos_grenade_crh_walk_fwd" weight="( hos + ntl ) * grenade"/>
		<anim name="cbt_grenade_crh_walk_fwd" weight="cbt * grenade"/>

		<anim name="hos_melee_crh_walk_fwd" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_walk_fwd_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_crh_walk_fwd_marching_mace" weight="( hos + ntl ) * marching_mace"/>
		<anim name="cbt_melee_crh_walk_fwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_walk_fwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_walk_fwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_walk_fwd" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_walk_fwd" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_walk_fwd" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_walk_fwd" weight="cbt * sup * pistol * (1-shield)"/>

		<anim name="cbt_shield_crh_walk_fwd" weight="shield"/>

		<to name="stand" redirect="std/stand/move/walk/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/walk/bwd" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_walk_bwd" weight="(hos + ntl) * (1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_crh_walk_bwd_pistol" weight="(hos + ntl) * (1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_walk_bwd" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_crh_walk_bwd_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_walk_bwd" weight="( hos * sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_walk_bwd_pistol" weight="( hos * sup ) * pistol"/>
		<anim name="cbt_legs_sup_walk_bwd" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_walk_bwd_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_walk_bwd" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_walk_bwd" weight="cbt * (1 - sup) * rifle"/>

		<anim name="hos_pistol_crh_walk_bwd" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_walk_bwd" weight="cbt * (1 - sup) * pistol * (1-shield)"/>

		<anim name="hos_grenade_crh_walk_bwd" weight="( hos + ntl ) * grenade"/>
		<anim name="cbt_grenade_crh_walk_bwd" weight="cbt * grenade"/>

		<anim name="hos_melee_crh_walk_bwd" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_walk_bwd_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_crh_walk_bwd_marching_mace" weight="( hos + ntl ) * marching_mace"/>
		<anim name="cbt_melee_crh_walk_bwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_walk_bwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_walk_bwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_walk_bwd" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_walk_bwd" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_walk_bwd" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_walk_bwd" weight="cbt * sup * pistol * (1-shield)"/>

		<anim name="cbt_shield_crh_walk_bwd" weight="shield"/>

		<to name="stand" redirect="std/stand/move/walk/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/walk/l" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_walk_l" weight="(hos + ntl) * (1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_crh_walk_l_pistol" weight="(hos + ntl) * (1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_walk_l" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_crh_walk_l_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_walk_l" weight="( hos * sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_walk_l_pistol" weight="( hos * sup ) * pistol"/>
		<anim name="cbt_legs_sup_walk_l" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_walk_l_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_walk_l" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_walk_l" weight="cbt * (1 - sup) * rifle"/>

		<anim name="hos_pistol_crh_walk_l" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_walk_l" weight="cbt * (1 - sup) * pistol * (1-shield)"/>

		<anim name="hos_grenade_crh_walk_l" weight="( hos + ntl ) * grenade"/>
		<anim name="cbt_grenade_crh_walk_l" weight="cbt * grenade"/>

		<anim name="hos_melee_crh_walk_l" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_walk_l_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_crh_walk_l_marching_mace" weight="( hos + ntl ) * marching_mace"/>
		<anim name="cbt_melee_crh_walk_l" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_walk_l_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_walk_l_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_walk_l" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_walk_l" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_walk_l" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_walk_l" weight="cbt * sup * pistol * (1-shield)"/>

		<anim name="cbt_shield_crh_walk_l" weight="shield"/>

		<to name="stand" redirect="std/stand/move/walk/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/walk/r" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_walk_r" weight="(hos + ntl) * (1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="hos_legs_crh_walk_r_pistol" weight="(hos + ntl) * (1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_walk_r" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + sterling + sten + garand + springfield + mosin + m1912 + geco + mg42 + dp28 + m1918 + carbine + bren + thompson + mp38 + stg44 + tt33 )"/>
		<anim name="cbt_legs_crh_walk_r_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_walk_r" weight="( hos * sup ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_walk_r_pistol" weight="( hos * sup ) * pistol"/>
		<anim name="cbt_legs_sup_walk_r" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_walk_r_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_walk_r" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_walk_r" weight="cbt * (1 - sup) * rifle"/>

		<anim name="hos_pistol_crh_walk_r" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_walk_r" weight="cbt * (1 - sup) * pistol * (1-shield)"/>

		<anim name="hos_grenade_crh_walk_r" weight="( hos + ntl ) * grenade"/>
		<anim name="cbt_grenade_crh_walk_r" weight="cbt * grenade"/>

		<anim name="hos_melee_crh_walk_r" weight="( hos + ntl ) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_walk_r_machete" weight="( hos + ntl ) * machete"/>
		<anim name="hos_melee_crh_walk_r_marching_mace" weight="( hos + ntl ) * marching_mace"/>
		<anim name="cbt_melee_crh_walk_r" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_walk_r_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_walk_r_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_walk_r" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_walk_r" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_walk_r" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_walk_r" weight="cbt * sup * pistol * (1-shield)"/>

		<anim name="cbt_shield_crh_walk_r" weight="shield"/>

		<to name="stand" redirect="std/stand/move/walk/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run" type="template_state" segment="base">
		<from_group name="std/crouch/move/walk" blend="9"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="haste" extension_value="run"/>
			<key at="exit" set_extension="anim_data" extension_key="haste" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/fwd" type="mixloop" segment="base" speed="1">
		<default blend="10" />
		<anim name="hos_legs_crh_run_fwd" weight="(hos + ntl) * (1 - wnd) * (1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_fwd_pistol" weight="(hos + ntl) * (1 - wnd) * (1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_run_fwd" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_fwd_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_run_fwd" weight="hos * sup  * (1 - wnd)"/>
		<anim name="cbt_legs_sup_run_fwd" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_run_fwd_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_run_fwd" weight="(hos + ntl) * (1 - wnd) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_run_fwd" weight="cbt * (1 - sup) * rifle"/>
		<anim name="hos_pistol_crh_run_fwd" weight="(hos + ntl - wnd) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_run_fwd" weight="cbt * (1 - sup) * pistol * (1-shield)"/>
		<anim name="hos_grenade_crh_run_fwd" weight="(hos + ntl) * grenade"/>
		<anim name="cbt_grenade_crh_run_fwd" weight="cbt * grenade"/>
		<anim name="hos_melee_crh_run_fwd" weight="(hos + ntl) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_run_fwd_machete" weight="(hos + ntl) * machete"/>
		<anim name="hos_melee_crh_run_fwd_marching_mace" weight="(hos + ntl) * marching_mace"/>
		<anim name="cbt_melee_crh_run_fwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_run_fwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_run_fwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_fwd" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_run_fwd" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_run_fwd" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_run_fwd" weight="cbt * sup * pistol * (1-shield)"/>

		<anim name="cbt_shield_crh_run_fwd" weight="shield"/>

		<anim name="rifle_wounded_run_fwd_1" weight="wnd - cbt"/>

		<to name="stand" redirect="std/stand/move/run/fwd"/>
		<to name="stop" redirect="std/crouch/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/bwd" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_bwd" weight="(hos + ntl)*(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_bwd_pistol" weight="(hos + ntl)*(1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_run_bwd" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_bwd_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_run_bwd" weight="hos * sup * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="hos_legs_sup_run_bwd_pistol" weight="hos * sup * pistol"/>
		<anim name="cbt_legs_sup_run_bwd" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_run_bwd_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_run_bwd" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_run_bwd" weight="cbt * (1 - sup) * rifle"/>
		<anim name="hos_pistol_crh_run_bwd" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_run_bwd" weight="cbt * (1 - sup) * pistol * (1-shield)"/>
		<anim name="cbt_shield_crh_run_bwd" weight="shield"/>
		<anim name="hos_grenade_crh_run_bwd" weight="(hos + ntl) * grenade"/>
		<anim name="cbt_grenade_crh_run_bwd" weight="cbt * grenade"/>
		<anim name="hos_melee_crh_run_bwd" weight="(hos + ntl) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_run_bwd_machete" weight="(hos + ntl) * machete"/>
		<anim name="hos_melee_crh_run_bwd_marching_mace" weight="(hos + ntl) * marching_mace"/>
		<anim name="cbt_melee_crh_run_bwd" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_run_bwd_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_run_bwd_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_fwd" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_run_fwd" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_run_fwd" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_run_fwd" weight="cbt * sup * pistol * (1-shield)"/>

		<to name="stand" redirect="std/stand/move/run/bwd"/>
		<to name="stop" redirect="std/crouch/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/l" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_l" weight="(hos + ntl)*(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_l_pistol" weight="(hos + ntl)*(1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_run_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_l_pistol" weight="cbt * pistol"/>
		<anim name="hos_legs_sup_run_l" weight="hos * sup"/>
		<anim name="cbt_legs_sup_run_l" weight="cbt * sup * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_run_l_pistol" weight="cbt * sup * pistol"/>

		<anim name="hos_rifle_crh_run_l" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_run_l" weight="cbt * (1 - sup) * rifle"/>
		<anim name="hos_pistol_crh_run_l" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_run_l" weight="cbt * (1 - sup) * pistol"/>
		<anim name="cbt_shield_crh_run_l" weight="shield"/>
		<anim name="hos_grenade_crh_run_l" weight="(hos + ntl) * grenade"/>
		<anim name="cbt_grenade_crh_run_l" weight="cbt * grenade"/>
		<anim name="hos_melee_crh_run_l" weight="(hos + ntl) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_run_l_machete" weight="(hos + ntl) * machete"/>
		<anim name="hos_melee_crh_run_l_marching_mace" weight="(hos + ntl) * marching_mace"/>
		<anim name="cbt_melee_crh_run_l" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_run_l_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_run_l_marching_mace" weight="cbt * marching_mace"/>	

		<anim name="hos_rifle_sup_run_l" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_run_l" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_run_l" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_run_l" weight="cbt * sup * pistol"/>

		<to name="stand" redirect="std/stand/move/run/l"/>
		<to name="stop" redirect="std/crouch/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/r" type="mixloop" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_r" weight="(hos + ntl)*(1 - sup) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_r_pistol" weight="(hos + ntl)*(1 - sup) * pistol"/>
		<anim name="cbt_legs_crh_run_r" weight="cbt * (1 - sup) * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_r_pistol" weight="cbt * (1 - sup) * (1-shield) * pistol"/>
		<anim name="hos_legs_sup_run_r" weight="hos * sup"/>
		<anim name="cbt_legs_sup_run_r" weight="cbt * sup * (1-shield) * ( rifle + grenade + melee + pick_axe + machete + marching_mace )"/>
		<anim name="cbt_legs_sup_run_r_pistol" weight="cbt * sup * (1-shield) * pistol"/>

		<anim name="hos_rifle_crh_run_r" weight="( hos + ntl ) * (1 - sup) * rifle"/>
		<anim name="cbt_rifle_crh_run_r" weight="cbt * (1 - sup) * rifle"/>
		<anim name="hos_pistol_crh_run_r" weight="( hos + ntl ) * (1 - sup) * pistol"/>
		<anim name="cbt_pistol_crh_run_r" weight="cbt * (1 - sup) * pistol * (1-shield)"/>
		<anim name="cbt_shield_crh_run_r" weight="shield"/>
		<anim name="hos_grenade_crh_run_r" weight="(hos + ntl) * grenade"/>
		<anim name="cbt_grenade_crh_run_r" weight="cbt * grenade"/>
		<anim name="hos_melee_crh_run_r" weight="(hos + ntl) * ( melee + pick_axe )"/>
		<anim name="hos_melee_crh_run_r_machete" weight="(hos + ntl) * machete"/>
		<anim name="hos_melee_crh_run_r_marching_mace" weight="(hos + ntl) * marching_mace"/>
		<anim name="cbt_melee_crh_run_r" weight="cbt * ( melee + pick_axe )"/>
		<anim name="cbt_melee_crh_run_r_machete" weight="cbt * machete"/>
		<anim name="cbt_melee_crh_run_r_marching_mace" weight="cbt * marching_mace"/>

		<anim name="hos_rifle_sup_run_r" weight="(hos + ntl) * sup * (1 - wnd) * rifle"/>
		<anim name="cbt_rifle_sup_run_r" weight="cbt * sup * rifle"/>
		<anim name="hos_pistol_sup_run_r" weight="(hos + ntl) * sup * (1 - wnd) * pistol"/>
		<anim name="cbt_pistol_sup_run_r" weight="cbt * sup * pistol * (1-shield)"/>

		<to name="stand" redirect="std/stand/move/run/r"/>
		<to name="stop" redirect="std/crouch/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/fumble" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fumble" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fumble" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/move/run/fumble/suppressed_run_fwd" type="once" segment="base">
		<anim name="e_so_fumble_sup_run_fwd_1"/>
	</state>

	<state name="std/crouch/move/run/start" type="template_state" segment="base">
		<from_group name="std/crouch/still" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_start" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="run_start_full_blend" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start_full_blend" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/start/fwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_fwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_fwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_fwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_fwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_fwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_fwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_fwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_fwd" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/fwd"/>
		<to name="stop" redirect="std/crouch/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/move/run/fwd"/>
	</state>

	<state name="std/crouch/move/run/start/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_bwd" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/bwd"/>
		<to name="stop" redirect="std/crouch/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/move/run/bwd"/>
	</state>

	<state name="std/crouch/move/run/start/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_l" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_l" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/l"/>
		<to name="stop" redirect="std/crouch/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/move/run/l"/>
	</state>

	<state name="std/crouch/move/run/start/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_r" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_r" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/r"/>
		<to name="stop" redirect="std/crouch/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/move/run/r"/>
	</state>

	<state name="std/crouch/move/run/start/turn" type="template_state" segment="base">
		<from_group name="std/crouch/still" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_start_turn" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_start_turn" extension_value="false"/>
		</keys>
		<exit name="std/crouch/move/run/fwd"/>
	</state>

	<state name="std/crouch/move/run/start/turn/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_turn_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_turn_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_turn_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_turn_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_turn_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_turn_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_turn_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_turn_bwd" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/turn/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/start/turn/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_turn_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_turn_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_turn_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_turn_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_turn_l" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_turn_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_turn_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_turn_l" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/turn/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/start/turn/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_start_turn_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_start_turn_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_start_turn_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_start_turn_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_start_turn_r" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_start_turn_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_start_turn_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_start_turn_r" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/start/turn/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/stop" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="run_stop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="run_stop" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/move/run/stop/fwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_stop_fwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_stop_fwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_stop_fwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_stop_fwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_stop_fwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_stop_fwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_stop_fwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_stop_fwd" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/stop/fwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_fwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_fwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="fwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/move/run/stop/bwd" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_stop_bwd" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_stop_bwd_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_stop_bwd" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_stop_bwd_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_stop_bwd" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_stop_bwd" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_stop_bwd" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_stop_bwd" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/stop/bwd"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_bwd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_bwd" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="bwd"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/move/run/stop/l" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_stop_l" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_stop_l_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_stop_l" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_stop_l_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_stop_l" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_stop_l" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_stop_l" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_stop_l" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/stop/l"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_l" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_l" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="l"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/move/run/stop/r" type="mix" segment="base">
		<default blend="10" />
		<anim name="hos_legs_crh_run_stop_r" weight="( hos + ntl ) * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="hos_legs_crh_run_stop_r_pistol" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_legs_crh_run_stop_r" weight="cbt * ( rifle + grenade + melee + pick_axe + machete + marching_mace + tt33 )"/>
		<anim name="cbt_legs_crh_run_stop_r_pistol" weight="cbt * pistol"/>

		<anim name="hos_rifle_crh_run_stop_r" weight="( hos + ntl ) * rifle"/>
		<anim name="cbt_rifle_crh_run_stop_r" weight="cbt * rifle"/>
		<anim name="hos_pistol_crh_run_stop_r" weight="( hos + ntl ) * pistol"/>
		<anim name="cbt_pistol_crh_run_stop_r" weight="cbt * pistol"/>

		<to name="stand" redirect="std/stand/move/run/stop/r"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="move_r" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="move_r" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="move_side" extension_value="r"/>
			<key at="exit" set_extension="anim_data" extension_key="move_side" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>


	<state name="std/crouch/spawn" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/spawn/ntl" type="template_state" segment="base">
	</state>

	<state name="std/crouch/spawn/cbt" type="template_state" segment="base">
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<key at="trigger" trigger="rope_on" callback="anim_clbk_rope" class_name="movement" param1="on"/>
			<key at="trigger" trigger="rope_off" callback="anim_clbk_rope" class_name="movement" param1="off"/>

			<key at="exit" callback="anim_clbk_rope" class_name="movement" param1="off"/>
			<key at="exit" callback="anim_clbk_stance" class_name="movement" param1="cbt" param2="true"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/nav_link" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<key at="trigger" trigger="rope_on" callback="anim_clbk_rope" class_name="movement" param1="on"/>
			<key at="trigger" trigger="rope_off" callback="anim_clbk_rope" class_name="movement" param1="off"/>

			<key at="exit" callback="anim_clbk_rope" class_name="movement" param1="off"/>
			<key at="exit" callback="anim_clbk_stance" class_name="movement" param1="cbt" param2="true"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hide" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hide" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/under_car" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/under_car/enter" type="once" segment="base">
		<anim name="e_so_crh_hide_under_car_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="clk_crawl_in"/>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/so/cbt/hide/under_car/loop"/>
	</state>

	<state name="std/crouch/so/cbt/hide/under_car/loop" type="loop" segment="base">
		<to name="idle" redirect="std/crouch/so/cbt/hide/under_car/exit"/>
		<anim name="e_so_crh_hide_under_car_loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hide_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hide_loop" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/under_car/exit" type="once" segment="base">
		<anim name="e_so_crh_hide_under_car_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="clk_crawl_out"/>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/so/cbt/hide/2_5m_vent/enter" type="once" segment="base">
		<anim name="e_so_crh_hide_2_5m_vent_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/so/cbt/hide/2_5m_vent/loop"/>
	</state>

	<state name="std/crouch/so/cbt/hide/2_5m_vent/loop" type="loop" segment="base">
		<to name="idle" redirect="std/crouch/so/cbt/hide/2_5m_vent/exit"/>
		<anim name="e_so_crh_hide_2_5m_vent_loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hide_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hide_loop" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/2_5m_vent/exit" type="once" segment="base">
		<anim name="e_so_crh_hide_2_5m_vent_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/crouch/so/cbt/hide/behind_door/enter" type="once" segment="base">
		<anim name="e_so_crh_hide_behind_door_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/so/cbt/hide/behind_door/loop"/>
	</state>

	<state name="std/crouch/so/cbt/hide/behind_door/loop" type="loop" segment="base">
		<to name="idle" redirect="std/crouch/so/cbt/hide/behind_door/exit"/>
		<anim name="e_so_crh_hide_behind_door_loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hide_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hide_loop" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/behind_door/exit" type="once" segment="base">
		<anim name="e_so_crh_hide_behind_door_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/crouch/so/cbt/hide/ledge/enter" type="once" segment="base">
		<anim name="e_so_crh_hide_ledge_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/so/cbt/hide/ledge/loop"/>
	</state>

	<state name="std/crouch/so/cbt/hide/ledge/loop" type="loop" segment="base">
		<to name="idle" redirect="std/crouch/so/cbt/hide/ledge/exit"/>
		<anim name="e_so_crh_hide_ledge_loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hide_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hide_loop" extension_value="false"/>

			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/crouch/so/cbt/hide/ledge/exit" type="once" segment="base">
		<anim name="e_so_crh_hide_ledge_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<!-- Dodge -->
	<state name="std/dodge" type="mix" segment="base">
		<from_group name="std/crouch/still" blend="8"/>
		<from_group name="std/stand/still" blend="8"/>

		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<param name="side_step" value="0"/>
		<param name="dive" value="0"/>
		<param name="roll" value="0"/>
		<param name="wheel" value="0"/>


<!--	Note: enemy is in cbt state only WHILE shooting. When it starts dodging, it switches to hos.
 		<anim name="hos_dodge_side_step_fwd" weight="side_step * hos * fwd"/>
		<anim name="hos_dodge_side_step_bwd" weight="side_step * hos * bwd"/>
		<anim name="hos_dodge_side_step_l" weight="side_step * hos * l"/>
		<anim name="hos_dodge_side_step_r" weight="side_step * hos * r"/>
 -->
		<anim name="cbt_rifle_dodge_side_step_fwd" weight="side_step * hos * rifle * fwd"/>
		<anim name="cbt_rifle_dodge_cbt_side_step_bwd" weight="side_step * hos * rifle * bwd"/>
		<anim name="cbt_rifle_dodge_cbt_side_step_l" weight="side_step * hos * rifle * l"/>
		<anim name="cbt_rifle_dodge_cbt_side_step_r" weight="side_step * hos * rifle * r"/>

		<anim name="cbt_pistol_dodge_side_step_fwd" weight="side_step * hos * pistol * fwd"/>
		<anim name="cbt_pistol_dodge_cbt_side_step_bwd" weight="side_step * hos * pistol * bwd"/>
		<anim name="cbt_pistol_dodge_cbt_side_step_l" weight="side_step * hos * pistol * l"/>
		<anim name="cbt_pistol_dodge_cbt_side_step_r" weight="side_step * hos * pistol * r"/>

		<anim name="dodge_dive_fwd" weight="dive * fwd"/>
		<anim name="dodge_dive_bwd" weight="dive * bwd"/>
		<anim name="dodge_dive_l" weight="dive * l"/>
		<anim name="dodge_dive_r" weight="dive * r"/>

		<anim name="dodge_roll_fwd" weight="roll * fwd"/>
		<anim name="dodge_roll_bwd" weight="roll * bwd"/>
		<anim name="dodge_roll_l" weight="roll * l"/>
		<anim name="dodge_roll_r" weight="roll * r"/>

		<anim name="dodge_wheel_fwd" weight="wheel * fwd"/>
		<anim name="dodge_wheel_bwd" weight="wheel * bwd"/>
		<anim name="dodge_wheel_l" weight="wheel * l"/>
		<anim name="dodge_wheel_r" weight="wheel * r"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="dodge" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="dodge" extension_value="false"/>

			<key at="0.15" callback="anim_clbk_dodge_cover_grenade" class_name="brain"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>

		<exit name="std/crouch/still/idle"/>
	</state>


	<!-- Hurt -->
	<state name="std/hurt/bullet" type="mix" segment="base">
		<param name="high" value="0"/>
		<param name="low" value="0"/>
		<param name="mod" value="0"/>
		<param name="hvy" value="0"/>
		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="var6" value="0"/>
		<param name="var7" value="0"/>
		<param name="var8" value="0"/>
		<param name="var9" value="0"/>
		<param name="var10" value="0"/>
		<param name="var11" value="0"/>
		<param name="var12" value="0"/>
		<param name="var13" value="0"/>
		<param name="var14" value="0"/>
		<param name="var15" value="0"/>
		<param name="var16" value="0"/>
		<param name="var17" value="0"/>
		<param name="var18" value="0"/>

		<anim name="rifle_hurt_fwd_1" weight="mod * high * fwd * var1"/>
		<anim name="rifle_hurt_fwd_2" weight="mod * high * fwd * var2"/>
		<anim name="rifle_hurt_fwd_3" weight="mod * high * fwd * var3"/>
		<anim name="rifle_hurt_fwd_4" weight="mod * high * fwd * var4"/>
		<anim name="rifle_hurt_fwd_5" weight="mod * high * fwd * var5"/>
		<anim name="rifle_hurt_fwd_6" weight="mod * high * fwd * var6"/>
		<anim name="rifle_hurt_fwd_7" weight="mod * high * fwd * var7"/>
		<anim name="rifle_hurt_fwd_8" weight="mod * high * fwd * var8"/>
		<anim name="rifle_hurt_fwd_9" weight="mod * high * fwd * var9"/>
		<anim name="rifle_hurt_fwd_10" weight="mod * high * fwd * var10"/>
		<anim name="rifle_hurt_fwd_11" weight="mod * high * fwd * var11"/>
		<anim name="rifle_hurt_fwd_12" weight="mod * high * fwd * var12"/>
		<anim name="rifle_hurt_fwd_13" weight="mod * high * fwd * var13"/>

		<anim name="rifle_hurt_bwd_1" weight="mod * high * bwd * var1"/>
		<anim name="rifle_hurt_bwd_2" weight="mod * high * bwd * var2"/>

		<anim name="rifle_hurt_l_1" weight="mod * high * l * var1"/>
		<anim name="rifle_hurt_l_2" weight="mod * high * l * var2"/>
		<anim name="rifle_hurt_l_3" weight="mod * high * l * var3"/>

		<anim name="rifle_hurt_r_1" weight="mod * high * r * var1"/>
		<anim name="rifle_hurt_r_2" weight="mod * high * r * var2"/>
		<anim name="rifle_hurt_r_3" weight="mod * high * r * var3"/>

		<anim name="rifle_hurt_low_fwd_1" weight="mod * low * fwd * var1"/>
		<anim name="rifle_hurt_low_fwd_2" weight="mod * low * fwd * var2"/>
		<anim name="rifle_hurt_low_fwd_3" weight="mod * low * fwd * var3"/>
		<anim name="rifle_hurt_low_fwd_4" weight="mod * low * fwd * var4"/>
		<anim name="rifle_hurt_low_fwd_5" weight="mod * low * fwd * var5"/>

		<anim name="rifle_hurt_low_bwd_1" weight="mod * low * bwd"/>
		<anim name="rifle_hurt_low_l_1" weight="mod * low * l"/>
		<anim name="rifle_hurt_low_r_1" weight="mod * low * r"/>

		<!-- <anim name="rifle_hurt_hvy_fwd_1" weight="hvy * high * fwd * var1"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_2" weight="hvy * high * fwd * var2"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_3" weight="hvy * high * fwd * var3"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_4" weight="hvy * high * fwd * var4"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_5" weight="hvy * high * fwd * var5"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_6" weight="hvy * high * fwd * var6"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_7" weight="hvy * high * fwd * var7"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_8" weight="hvy * high * fwd * var8"/> -->
		<anim name="rifle_hurt_hvy_fwd_9" weight="hvy * high * fwd * var9"/>
		<anim name="rifle_hurt_hvy_fwd_10" weight="hvy * high * fwd * var10"/>
		<anim name="rifle_hurt_hvy_fwd_11" weight="hvy * high * fwd * var11"/>
		<anim name="rifle_hurt_hvy_fwd_12" weight="hvy * high * fwd * var12"/>
		<anim name="rifle_hurt_hvy_fwd_13" weight="hvy * high * fwd * var13"/>
		<anim name="rifle_hurt_hvy_fwd_14" weight="hvy * high * fwd * var14"/>
		<anim name="rifle_hurt_hvy_fwd_15" weight="hvy * high * fwd * var15"/>
		<anim name="rifle_hurt_hvy_fwd_16" weight="hvy * high * fwd * var16"/>
		<anim name="rifle_hurt_hvy_fwd_17" weight="hvy * high * fwd * var17"/>
		<anim name="rifle_hurt_hvy_fwd_18" weight="hvy * high * fwd * var18"/>

		<!-- <anim name="rifle_hurt_hvy_bwd_1" weight="hvy * high * bwd * var1"/> -->
		<!-- <anim name="rifle_hurt_hvy_bwd_2" weight="hvy * high * bwd * var2"/> -->
		<anim name="rifle_hurt_hvy_bwd_3" weight="hvy * high * bwd * var3"/>

		<anim name="rifle_hurt_hvy_l_1" weight="hvy * high * l * var1"/>
		<anim name="rifle_hurt_hvy_l_2" weight="hvy * high * l * var2"/>
		<anim name="rifle_hurt_hvy_l_3" weight="hvy * high * l * var3"/>
		<!-- <anim name="rifle_hurt_hvy_l_4" weight="hvy * high * l * var4"/> -->

		<anim name="rifle_hurt_hvy_r_1" weight="hvy * high * r * var1"/>
		<!-- <anim name="rifle_hurt_hvy_r_2" weight="hvy * high * r * var2"/> -->
		<anim name="rifle_hurt_hvy_r_3" weight="hvy * high * r * var3"/>
		<anim name="rifle_hurt_hvy_r_4" weight="hvy * high * r * var4"/>

		<!-- <anim name="rifle_hurt_hvy_low_fwd_1" weight="hvy * low * fwd * var1"/> -->
		<!-- <anim name="rifle_hurt_hvy_low_fwd_2" weight="hvy * low * fwd * var2"/> -->
		<!-- <anim name="rifle_hurt_hvy_low_fwd_3" weight="hvy * low * fwd * var3"/> -->
		<!-- <anim name="rifle_hurt_hvy_low_fwd_4" weight="hvy * low * fwd * var4"/> -->
		<anim name="rifle_hurt_hvy_low_fwd_5" weight="hvy * low * fwd * var5"/>
		<!-- <anim name="rifle_hurt_hvy_low_fwd_6" weight="hvy * low * fwd * var6"/> -->
		<anim name="rifle_hurt_hvy_low_fwd_7" weight="hvy * low * fwd * var7"/>

		<!-- <anim name="rifle_hurt_hvy_low_bwd_1" weight="hvy * low * bwd * var1"/> -->
		<anim name="rifle_hurt_hvy_low_bwd_2" weight="hvy * low * bwd * var2"/>

		<anim name="rifle_hurt_hvy_low_l_1" weight="hvy * low * l * var1"/>
		<!-- <anim name="rifle_hurt_hvy_low_l_2" weight="hvy * low * l * var2"/> -->

		<!-- <anim name="rifle_hurt_hvy_low_r_1" weight="hvy * low * r * var1"/> -->
		<anim name="rifle_hurt_hvy_low_r_2" weight="hvy * low * r * var2"/>


		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.7" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/hurt/bullet_run" type="mix" segment="base">
		<default blend="3" />

		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="var6" value="0"/>
		<param name="var7" value="0"/>
		<param name="var8" value="0"/>
		<param name="var9" value="0"/>
		<param name="var10" value="0"/>
		<param name="var11" value="0"/>
		<param name="var12" value="0"/>
		<param name="var13" value="0"/>
		<param name="var14" value="0"/>

		<!-- <anim name="gen_hrt_range_run_fwd_var1" weight="var1"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var2" weight="var2"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var3" weight="var3"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var4" weight="var4"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var5" weight="var5"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var6" weight="var6"/> -->
		<anim name="gen_hrt_range_run_fwd_var7" weight="var7"/>
		<!-- <anim name="gen_hrt_range_run_fwd_var8" weight="var8"/> -->
		<anim name="gen_hrt_range_run_fwd_var9" weight="var9"/>
		<anim name="gen_hrt_range_run_fwd_var10" weight="var10"/>
		<anim name="gen_hrt_range_run_fwd_var11" weight="var11"/>
		<!-- <anim name="gen_hrt_range_run_fwd_var12" weight="var12"/> -->
		<!-- <anim name="gen_hrt_range_run_fwd_var13" weight="var13"/> -->
		<anim name="gen_hrt_range_run_fwd_var14" weight="var14"/>

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/hurt/explosion" type="mix" segment="base">
		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>
		<param name="hvy" value="0"/>
		<param name="expl" value="0"/>
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="var6" value="0"/>
		<param name="var7" value="0"/>
		<param name="var8" value="0"/>
		<param name="var9" value="0"/>
		<param name="var10" value="0"/>
		<param name="var11" value="0"/>
		<param name="var12" value="0"/>
		<param name="var13" value="0"/>
		<param name="var14" value="0"/>
		<param name="var15" value="0"/>
		<param name="var16" value="0"/>
		<param name="var17" value="0"/>
		<param name="var18" value="0"/>

		<anim name="gen_hrt_explo_hvy_fwd_var1" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var1"/>
		<anim name="gen_hrt_explo_hvy_fwd_var2" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var2"/>
		<anim name="gen_hrt_explo_hvy_fwd_var3" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var3"/>
		<anim name="gen_hrt_explo_hvy_fwd_var4" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var4"/>
		<anim name="gen_hrt_explo_hvy_fwd_var5" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var5"/>
		<anim name="gen_hrt_explo_hvy_fwd_var6" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var6"/>
		<anim name="gen_hrt_explo_hvy_fwd_var7" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var7"/>
		<anim name="gen_hrt_explo_hvy_fwd_var8" weight="(1 - shield) * (1 - tank - flamer) * expl * fwd * var8"/>
		<anim name="gen_hrt_explo_hvy_bwd_var1" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var1"/>
		<anim name="gen_hrt_explo_hvy_bwd_var2" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var2"/>
		<anim name="gen_hrt_explo_hvy_bwd_var3" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var3"/>
		<anim name="gen_hrt_explo_hvy_bwd_var4" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var4"/>
		<anim name="gen_hrt_explo_hvy_bwd_var5" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var5"/>
		<anim name="gen_hrt_explo_hvy_bwd_var6" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var6"/>
		<anim name="gen_hrt_explo_hvy_bwd_var7" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var7"/>
		<anim name="gen_hrt_explo_hvy_bwd_var8" weight="(1 - shield) * (1 - tank - flamer) * expl * bwd * var8"/>
		<anim name="gen_hrt_explo_hvy_left_var1" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var1"/>
		<anim name="gen_hrt_explo_hvy_left_var2" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var2"/>
		<anim name="gen_hrt_explo_hvy_left_var3" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var3"/>
		<anim name="gen_hrt_explo_hvy_left_var4" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var4"/>
		<anim name="gen_hrt_explo_hvy_left_var5" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var5"/>
		<anim name="gen_hrt_explo_hvy_left_var6" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var6"/>
		<anim name="gen_hrt_explo_hvy_left_var7" weight="(1 - shield) * (1 - tank - flamer) * expl * l * var7"/>
		<anim name="gen_hrt_explo_hvy_right_var1" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var1"/>
		<anim name="gen_hrt_explo_hvy_right_var2" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var2"/>
		<anim name="gen_hrt_explo_hvy_right_var3" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var3"/>
		<anim name="gen_hrt_explo_hvy_right_var4" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var4"/>
		<anim name="gen_hrt_explo_hvy_right_var5" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var5"/>
		<anim name="gen_hrt_explo_hvy_right_var6" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var6"/>
		<anim name="gen_hrt_explo_hvy_right_var7" weight="(1 - shield) * (1 - tank - flamer) * expl * r * var7"/>

		<anim name="rifle_hurt_hvy_fwd_1" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var1"/>
		<anim name="rifle_hurt_hvy_fwd_2" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var2"/>
		<anim name="rifle_hurt_hvy_fwd_3" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var3"/>
		<anim name="rifle_hurt_hvy_fwd_4" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var4"/>
		<anim name="rifle_hurt_hvy_fwd_5" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var5"/>
		<anim name="rifle_hurt_hvy_fwd_6" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var6"/>
		<anim name="rifle_hurt_hvy_fwd_7" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var7"/>
		<anim name="rifle_hurt_hvy_fwd_8" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var8"/>
		<anim name="rifle_hurt_hvy_fwd_9" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var9"/>
		<anim name="rifle_hurt_hvy_fwd_10" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var10"/>
		<!-- <anim name="rifle_hurt_hvy_fwd_11" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var11"/> -->
		<anim name="rifle_hurt_hvy_fwd_12" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var12"/>
		<anim name="rifle_hurt_hvy_fwd_13" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var13"/>
		<!-- <anim name="rifle_hurt_hvy_fwd_14" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var14"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_15" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var15"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_16" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var16"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_17" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var17"/> -->
		<!-- <anim name="rifle_hurt_hvy_fwd_18" weight="(1 - shield) * (1 - tank - flamer) * hvy * fwd * var18"/> -->
		<anim name="rifle_hurt_hvy_bwd_1" weight="(1 - shield) * (1 - tank - flamer) * hvy * bwd * var1"/>
		<anim name="rifle_hurt_hvy_bwd_2" weight="(1 - shield) * (1 - tank - flamer) * hvy * bwd * var2"/>
		<anim name="rifle_hurt_hvy_bwd_3" weight="(1 - shield) * (1 - tank - flamer) * hvy * bwd * var3"/>
		<anim name="rifle_hurt_hvy_l_1" weight="(1 - shield) * (1 - tank - flamer) * hvy * l * var1"/>
		<!-- <anim name="rifle_hurt_hvy_l_2" weight="(1 - shield) * (1 - tank - flamer) * hvy * l * var2"/> -->
		<anim name="rifle_hurt_hvy_l_3" weight="(1 - shield) * (1 - tank - flamer) * hvy * l * var3"/>
		<anim name="rifle_hurt_hvy_l_4" weight="(1 - shield) * (1 - tank - flamer) * hvy * l * var4"/>
		<anim name="rifle_hurt_hvy_r_1" weight="(1 - shield) * (1 - tank - flamer) * hvy * r * var1"/>
		<anim name="rifle_hurt_hvy_r_2" weight="(1 - shield) * (1 - tank - flamer) * hvy * r * var2"/>
		<anim name="rifle_hurt_hvy_r_3" weight="(1 - shield) * (1 - tank - flamer) * hvy * r * var3"/>
		<!-- <anim name="rifle_hurt_hvy_r_4" weight="(1 - shield) * (1 - tank - flamer) * hvy * r * var4"/> -->

		<anim name="shield_hrt_explo_hvy_fwd_var1" weight="shield * fwd * var1"/>
		<anim name="shield_hrt_explo_hvy_fwd_var2" weight="shield * fwd * var2"/>
		<anim name="shield_hrt_explo_hvy_bwd_var1" weight="shield * bwd * var1"/>
		<anim name="shield_hrt_explo_hvy_bwd_var2" weight="shield * bwd * var2"/>
		<anim name="shield_hrt_explo_hvy_left_var1" weight="shield * l * var1"/>
		<anim name="shield_hrt_explo_hvy_left_var2" weight="shield * l * var2"/>
		<anim name="shield_hrt_explo_hvy_right_var1" weight="shield * r * var1"/>
		<anim name="shield_hrt_explo_hvy_right_var2" weight="shield * r * var2"/>

		<anim name="bulldozer_hrt_explo_hvy" weight="tank"/> 
		<anim name="flamer_hrt_explo_hvy" weight="flamer"/> <!-- Marac definition??? -->

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.7" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle" />
	</state>

	<state name="std/hurt/fire" type="mix" segment="base">
		<!--<default blend="3" />-->

		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<anim name="gen_hrt_fire_hvy_bwd_var1" weight="bwd"/>
		<anim name="gen_hrt_fire_hvy_fwd_var1" weight="fwd"/>
		<anim name="gen_hrt_fire_hvy_left_var1" weight="l"/>
		<anim name="gen_hrt_fire_hvy_right_var1" weight="r"/>

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>

			<!--<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>-->
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle" />
	</state>

	<state name="std/hurt/shield_knock" type="once" segment="base">
		<param name="high" value="0"/>
		<param name="low" value="0"/>
		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<anim name="cbt_crh_surprised_fwd"/>
		<anim name="cbt_crh_surprised_fwd2"/>
		<anim name="cbt_crh_surprised_fwd3"/>
		<anim name="cbt_crh_surprised_fwd4"/>
		<anim name="cbt_crh_surprised_fwd5"/>

		<keys timebase="relative">
			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.7" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>


	<state name="std/hurt/sick" type="template_state" segment="base">
		<to name="idle" redirect="std/hurt/sick/exit"/>
		<keys>
			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
		</keys>
	</state>

	<state name="std/hurt/sick/enter" type="mix" segment="base">
		<anim name="cough_enter"				weight="cough"/>
		<anim name="ears_enter"					weight="ears"/>
		<exit name="std/hurt/sick/loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
		</keys>
	</state>

	<state name="std/hurt/sick/loop" type="mixloop" segment="base">
		<anim name="cough_loop"					weight="cough"/>
		<anim name="ears_loop"					weight="ears"/>
	</state>

	<state name="std/hurt/sick/exit" type="mix" segment="base">
		<to name="idle" redirect="std/crouch/still/idle"/>
		<anim name="cough_exit"					weight="cough"/>
		<anim name="ears_exit"					weight="ears"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.7" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>


			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/hurt/poison" type="template_state" segment="base">
		<to name="idle" redirect="std/hurt/poison/exit"/>
		<keys>
			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
		</keys>
	</state>
		
	<state name="std/hurt/poison/enter" type="mix" segment="base">
		<anim name="cough_enter"/>
		
		<!-- <exit name="std/hurt/poison/loop"/> -->
		<exit name="std/hurt/poison/exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
						
			<key at="enter" callback="anim_clbk_spawn_effect" class_name="movement" param1="effects/vanilla/character/hurt_poison" param2="Head"/>
			<key at="enter" callback="anim_clbk_play_sound" class_name="sound" param1="law_enf_puke"/>
		</keys>
	</state>
	
	<!--
	<state name="std/hurt/poison/loop" type="mixloop" segment="base">
		<anim name="cough_loop"/>
		<keys>
		</keys>
	</state>
	-->
	
	<state name="std/hurt/poison/exit" type="mix" segment="base">
		<to name="idle" redirect="std/crouch/still/idle"/>
		<anim name="cough_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.7" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>

			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/hurt/counter_tased" type="once" segment="base">
		<anim name="gen_hrt_electrocuted_var2"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="counter_tased" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="counter_tased" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="0.8" set_extension="anim_data" extension_key="hurt_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt_exit" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/hurt/taser" type="mix" segment="base">
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>

		<anim name="gen_hrt_tased_var1" weight="var1"/> <!-- left hand down -->
		<anim name="gen_hrt_tased_var2" weight="var2"/> <!-- left hand up -->
		<anim name="gen_hrt_tased_var3" weight="var3"/> <!-- both hands down -->
		<anim name="gen_hrt_tased_var4" weight="var4"/> <!-- both hands up -->

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle" />
	</state>

	<!-- Death -->
	<state name="std/death" type="template_state" segment="base">
		<keys timebase="relative">
			<key at="trigger" trigger="drop1" callback="anim_clbk_death_drop" class_name="movement" param1="1"/>
			<key at="trigger" trigger="drop2" callback="anim_clbk_death_drop" class_name="movement" param1="2"/> <!-- param1 ="2" stop autofire drop weapon -->
			<key at="trigger" trigger="body" callback="anim_body_thud_sound" class_name="sound" param1="body_fall"/>
			<key at="trigger" trigger="limb" callback="anim_body_thud_sound" class_name="sound" param1="limb_fall"/>
			<key at="enter" set_extension="anim_data" extension_key="death" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="death" extension_value="false"/>
			<key at="enter" callback="anim_clbk_drop_held_items" class_name="movement"/><!-- This is for civilians -->
			<key at="trigger" trigger="force_ragdoll" callback="anim_clbk_force_ragdoll" class_name="movement"/>
			<key at="exit" callback="anim_clbk_force_ragdoll" class_name="movement"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

		</keys>
		<exit name="death_exit"/>
	</state>

	<state name="std/death/bullet/still" type="mix" segment="base">
		<param name="fwd" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>
		<param name="var0" value="0"/>
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="var6" value="0"/>
		<param name="var7" value="0"/>
		<param name="var8" value="0"/>
		<param name="var9" value="0"/>
		<param name="var10" value="0"/>
		<param name="var11" value="0"/>
		<param name="var12" value="0"/>
		<param name="var13" value="0"/>
		<param name="var14" value="0"/>
		<param name="var15" value="0"/>
		<param name="var16" value="0"/>
		<param name="var17" value="0"/>
		<param name="var18" value="0"/>
		<param name="high" value="0"/>
		<param name="low" value="0"/>
		<param name="crh" value="0"/>
		<param name="heavy" value="0"/>
		<param name="flamer" value="0"/>


	<!-- STD -->
		<!-- forward upper body -->
		<anim name="rifle_death_up_fwd_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var1"/>
		<anim name="rifle_death_up_fwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var2"/>
		<anim name="rifle_death_up_fwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var3"/>
		<anim name="rifle_death_up_fwd_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var4"/>
		<anim name="rifle_death_up_fwd_5" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var5"/>
		<anim name="rifle_death_up_fwd_6" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var6"/>
		<anim name="rifle_death_up_fwd_7" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var7"/>
		<anim name="rifle_death_up_fwd_12" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var8"/>
		<anim name="rifle_death_up_fwd_15" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var9"/>
		<anim name="rifle_death_up_fwd_16" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var10"/>
		<anim name="rifle_death_up_fwd_17" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var11"/>
		<anim name="rifle_death_up_fwd_18" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var12"/>
		<anim name="rifle_death_up_fwd_19" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var13"/>
		<anim name="rifle_death_up_fwd_20" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * high * var14"/>
			<!-- Heavy -->
		<anim name="rifle_death_up_fwd_8" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var1"/>
		<anim name="rifle_death_up_fwd_9" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var2"/>
		<anim name="rifle_death_up_fwd_10" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var3"/>
		<anim name="rifle_death_up_fwd_11" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var4"/>
		<anim name="rifle_death_up_fwd_13" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var5"/>
		<anim name="rifle_death_up_fwd_14" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * high * var6"/>

			<!-- Female -->
		<anim name="rifle_fe_death_up_fwd_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var1"/>
		<anim name="rifle_fe_death_up_fwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var2"/>
		<anim name="rifle_fe_death_up_fwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var3"/>
		<anim name="rifle_fe_death_up_fwd_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var4"/>
		<anim name="rifle_fe_death_up_fwd_5" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var5"/>
		<anim name="rifle_fe_death_up_fwd_6" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * high * var6"/>


		<!-- forward lower body -->
		<anim name="rifle_death_low_fwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * low * var1"/>
		<anim name="rifle_death_low_fwd_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * low * var2"/>
		<!-- <anim name="rifle_death_low_fwd_5" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * low * var3"/> -->
		<!-- <anim name="rifle_death_low_fwd_6" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * low * var4"/> -->
		<anim name="rifle_death_low_fwd_7" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * fwd * low * var5"/>
			<!-- Heavy -->
		<anim name="rifle_death_low_fwd_1" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * low * var1"/>
		<!-- <anim name="rifle_death_low_fwd_2" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * fwd * low * var2"/> -->

			<!-- Female -->
		<anim name="rifle_fe_death_low_fwd_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * low * var1"/>
		<anim name="rifle_fe_death_low_fwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * fwd * low * var2"/>


		<!-- backward lower body -->
		<anim name="rifle_death_low_bwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * bwd * low * var1"/>
		<anim name="rifle_death_low_bwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * bwd * low * var2"/>
			<!-- Heavy -->
		<anim name="rifle_death_low_bwd_1" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * bwd * low"/>


		<!-- backward upper body -->
		<anim name="rifle_death_up_bwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * bwd * high * var1"/>
		<anim name="rifle_death_up_bwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * bwd * high * var2"/>
		<anim name="rifle_death_up_bwd_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * bwd * high * var3"/>
			<!-- Heavy -->
		<anim name="rifle_death_up_bwd_1" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * bwd * high"/>

			<!-- Female -->
		<anim name="rifle_fe_death_up_bwd_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * bwd * high * var1"/>
		<anim name="rifle_fe_death_up_bwd_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * bwd * high * var2"/>
		<anim name="rifle_fe_death_up_bwd_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * bwd * high * var3"/>



		<!-- Left lower body -->
		<!-- <anim name="rifle_death_low_l_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * l * low"/> -->
			<!-- Heavy -->
		<!-- <anim name="rifle_death_low_l_1" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * l * low"/> -->


		<!-- Left upper body -->
		<anim name="rifle_death_up_l_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * l * high * var1"/>
		<anim name="rifle_death_up_l_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * l * high * var2"/>
		<anim name="rifle_death_up_l_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * l * high * var3"/>
			<!-- Heavy -->
		<anim name="rifle_death_up_l_2" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * l * high"/>

			<!-- Female -->
		<anim name="rifle_fe_death_up_left_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * l * high * var1"/>
		<anim name="rifle_fe_death_up_left_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * l * high * var2"/>


		<!-- right lower body -->
		<anim name="rifle_death_low_r_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * r * low"/>
			<!-- Heavy -->
		<anim name="rifle_death_low_r_1" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * r * low"/>


		<!-- right upper body -->
		<anim name="rifle_death_up_r_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * r * high * var1"/>
		<anim name="rifle_death_up_r_3" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * r * high * var2"/>
		<anim name="rifle_death_up_r_4" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( 1-female ) * r * high * var3"/>
			<!-- Heavy -->
		<!-- <anim name="rifle_death_up_r_2" weight="(1 - flamer) * heavy * (1 - crh) * ( 1-female ) * r * high"/> -->

			<!-- Female -->
		<anim name="rifle_fe_death_up_right_1" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * r * high * var1"/>
		<anim name="rifle_fe_death_up_right_2" weight="(1 - flamer) * (1 - heavy) * (1 - crh) * ( female ) * r * high * var2"/>


	<!-- CRH -->

		<!-- forward upper body -->
		<anim name="rifle_death_crouch_up_fwd_1" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var1"/>
		<anim name="rifle_death_crouch_up_fwd_2" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var2"/>
		<anim name="rifle_death_crouch_up_fwd_3" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var3"/>
		<anim name="rifle_death_crouch_up_fwd_4" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var4"/>
		<anim name="rifle_death_crouch_up_fwd_9" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var5"/>
		<anim name="rifle_death_crouch_up_fwd_10" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var6"/>
		<anim name="rifle_death_crouch_up_fwd_11" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var7"/>
		<anim name="rifle_death_crouch_up_fwd_14" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var8"/>
		<anim name="rifle_death_crouch_up_fwd_15" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var9"/>
		<anim name="rifle_death_crouch_up_fwd_16" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var10"/>
		<anim name="rifle_death_crouch_up_fwd_17" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var11"/>
		<anim name="rifle_death_crouch_up_fwd_18" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var12"/>
		<anim name="rifle_death_crouch_up_fwd_19" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var13"/>
		<anim name="rifle_death_crouch_up_fwd_20" weight="(1 - heavy) * crh * ( 1-female ) * fwd * high * var14"/>
			<!-- Heavy -->
		<anim name="rifle_death_crouch_up_fwd_5" weight="heavy * crh * ( 1-female ) * fwd * high * var1"/>
		<anim name="rifle_death_crouch_up_fwd_6" weight="heavy * crh * ( 1-female ) * fwd * high * var2"/>
		<anim name="rifle_death_crouch_up_fwd_7" weight="heavy * crh * ( 1-female ) * fwd * high * var3"/>
		<anim name="rifle_death_crouch_up_fwd_8" weight="heavy * crh * ( 1-female ) * fwd * high * var4"/>
		<anim name="rifle_death_crouch_up_fwd_12" weight="heavy * crh * ( 1-female ) * fwd * high * var5"/>
		<anim name="rifle_death_crouch_up_fwd_13" weight="heavy * crh * ( 1-female ) * fwd * high * var6"/>
		<anim name="rifle_death_crouch_up_fwd_21" weight="heavy * crh * ( 1-female ) * fwd * high * var7"/>

			<!-- Female -->
		<anim name="rifle_fe_death_crouch_up_fwd_1" weight="(1 - heavy) * crh * ( female ) * fwd * high * var1"/>
		<anim name="rifle_fe_death_crouch_up_fwd_2" weight="(1 - heavy) * crh * ( female ) * fwd * high * var2"/>
		<anim name="rifle_fe_death_crouch_up_fwd_3" weight="(1 - heavy) * crh * ( female ) * fwd * high * var3"/>
		<anim name="rifle_fe_death_crouch_up_fwd_4" weight="(1 - heavy) * crh * ( female ) * fwd * high * var4"/>
		<anim name="rifle_fe_death_crouch_up_fwd_5" weight="(1 - heavy) * crh * ( female ) * fwd * high * var5"/>


		<!-- forward lower body -->
		<anim name="rifle_death_crouch_low_fwd_2" weight="(1 - heavy) * crh * ( 1-female ) * fwd * low * var1"/>
		<anim name="rifle_death_crouch_low_fwd_3" weight="(1 - heavy) * crh * ( 1-female ) * fwd * low * var2"/>
		<anim name="rifle_death_crouch_low_fwd_4" weight="(1 - heavy) * crh * ( 1-female ) * fwd * low * var3"/>
		<anim name="rifle_death_crouch_low_fwd_6" weight="(1 - heavy) * crh * ( 1-female ) * fwd * low * var4"/>
		<anim name="rifle_death_crouch_low_fwd_7" weight="(1 - heavy) * crh * ( 1-female ) * fwd * low * var5"/>
			<!-- Heavy -->
		<anim name="rifle_death_crouch_low_fwd_1" weight="heavy * crh * ( 1-female ) * fwd * low * var1"/>
		<anim name="rifle_death_crouch_low_fwd_5" weight="heavy * crh * ( 1-female ) * fwd * low * var2"/>

			<!-- Female -->
		<anim name="rifle_fe_death_crouch_low_fwd_1" weight="(1 - heavy) * crh * ( female ) * fwd * low * var1"/>
		<anim name="rifle_fe_death_crouch_low_fwd_2" weight="(1 - heavy) * crh * ( female ) * fwd * low * var2"/>


		<!-- backward lower body -->
		<anim name="rifle_death_crouch_low_bwd_1" weight="crh * ( 1-female ) * bwd * low"/>


		<!-- backward upper body -->
		<anim name="rifle_death_crouch_up_bwd_1" weight="crh * ( 1-female ) * bwd * high * var1"/>
		<anim name="rifle_death_crouch_up_bwd_2" weight="crh * ( 1-female ) * bwd * high * var2"/>
		<anim name="rifle_death_crouch_up_bwd_3" weight="crh * ( 1-female ) * bwd * high * var3"/>
			<!-- Female -->
		<anim name="rifle_fe_death_crouch_up_bwd_1" weight="crh * ( 1-female ) * bwd * high * var1"/>
		<anim name="rifle_fe_death_crouch_up_bwd_2" weight="crh * ( 1-female ) * bwd * high * var2"/>



		<!-- Left lower body -->
		<anim name="rifle_death_crouch_low_left_2" weight="(1 - heavy) * crh * ( 1-female ) * l * low"/>

		<!-- <anim name="rifle_death_crouch_low_left_1" weight="heavy * crh * ( 1-female ) * l * low"/> -->


		<!-- Left upper body -->
		<anim name="rifle_death_crouch_up_left_1" weight="crh * ( 1-female ) * l * high * var1"/>
		<anim name="rifle_death_crouch_up_left_2" weight="crh * ( 1-female ) * l * high * var2"/>
		<anim name="rifle_death_crouch_up_left_3" weight="crh * ( 1-female ) * l * high * var3"/>
			<!-- Female -->
		<anim name="rifle_fe_death_crouch_up_left_1" weight="crh * ( female ) * l * high * ( 1-var3)"/>
		<anim name="rifle_fe_death_crouch_up_left_2" weight="crh * ( female ) * l * high * ( 1-var1) * ( 1-var2)"/>


		<!-- right lower body -->
		<anim name="rifle_death_crouch_low_right_2" weight="(1 - heavy) * crh * ( 1-female ) * r * low"/>

		<anim name="rifle_death_crouch_low_right_1" weight="heavy * crh * ( 1-female ) * r * low"/>


		<!-- right upper body -->
		<anim name="rifle_death_crouch_up_right_1" weight="crh * ( 1-female ) * r * high * var1"/>
		<anim name="rifle_death_crouch_up_right_2" weight="crh * ( 1-female ) * r * high * var2"/>
		<anim name="rifle_death_crouch_up_right_3" weight="crh * ( 1-female ) * r * high * var3"/>
			<!-- Female -->
		<anim name="rifle_fe_death_crouch_up_right_1" weight="crh * ( female ) * r * high * var1"/>
		<anim name="rifle_fe_death_crouch_up_right_2" weight="crh * ( female ) * r * high * var2"/>

		<anim name="rifle_death_fe_var1" weight="female * high * var0"/>
		<anim name="rifle_death_fe_var2" weight="female * low * var0"/>
		<anim name="rifle_death_fe_var3" weight="female * ( 1 - low - high ) * var0"/>
	</state>

	<state name="std/death/bullet/run" type="mix" segment="base">
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="var6" value="0"/>
		<param name="var7" value="0"/>
		<param name="var8" value="0"/>
		<param name="var9" value="0"/>
		<param name="var10" value="0"/>
		<param name="var11" value="0"/>
		<param name="var12" value="0"/>
		<param name="var13" value="0"/>
		<param name="var14" value="0"/>
		<param name="var15" value="0"/>
		<param name="var16" value="0"/>
		<param name="var17" value="0"/>
		<param name="var18" value="0"/>
		<param name="var19" value="0"/>
		<param name="var20" value="0"/>
		<param name="var21" value="0"/>
		<param name="var22" value="0"/>
		<param name="var23" value="0"/>
		<param name="var24" value="0"/>
		<param name="var25" value="0"/>
		<param name="var26" value="0"/>

		<!-- <anim name="rifle_death_run_fwd_1" weight="( 1-female ) * var1"/> -->
		<!-- <anim name="rifle_death_run_fwd_2" weight="( 1-female ) * var2"/> -->
		<!-- <anim name="rifle_death_run_fwd_3" weight="( 1-female ) * var3"/> -->
		<!-- <anim name="rifle_death_run_fwd_4" weight="( 1-female ) * var4"/> -->
		<anim name="rifle_death_run_fwd_5" weight="( 1-female ) * var5"/>
	<!-- 	<anim name="rifle_death_run_fwd_6" weight="( 1-female ) * var6"/> -->
		<anim name="rifle_death_run_fwd_7" weight="( 1-female ) * var7"/>
		<anim name="rifle_death_run_fwd_8" weight="( 1-female ) * var8"/>
		<anim name="rifle_death_run_fwd_9" weight="( 1-female ) * var9"/>
		<anim name="rifle_death_run_fwd_10" weight="( 1-female ) * var10"/>
		<anim name="rifle_death_run_fwd_11" weight="( 1-female ) * var11"/>
		<anim name="rifle_death_run_fwd_12" weight="( 1-female ) * var12"/>
		<anim name="rifle_death_run_fwd_13" weight="( 1-female ) * var13"/>
		<anim name="rifle_death_run_fwd_14" weight="( 1-female ) * var14"/>
		<anim name="rifle_death_run_fwd_15" weight="( 1-female ) * var15"/>
		<anim name="rifle_death_run_fwd_16" weight="( 1-female ) * var16"/>
		<anim name="rifle_death_run_fwd_17" weight="( 1-female ) * var17"/>
		<anim name="rifle_death_run_fwd_18" weight="( 1-female ) * var18"/>
		<anim name="rifle_death_run_fwd_19" weight="( 1-female ) * var19"/>
		<anim name="rifle_death_run_fwd_20" weight="( 1-female ) * var20"/>
		<anim name="rifle_death_run_fwd_21" weight="( 1-female ) * var21"/>
		<anim name="rifle_death_run_fwd_22" weight="( 1-female ) * var22"/>
		<anim name="rifle_death_run_fwd_23" weight="( 1-female ) * var23"/>
		<anim name="rifle_death_run_fwd_24" weight="( 1-female ) * var24"/>
		<anim name="rifle_death_run_fwd_25" weight="( 1-female ) * var25"/>
		<anim name="rifle_death_run_fwd_26" weight="( 1-female ) * var26"/>

		<anim name="rifle_fe_death_run_fwd_1" weight="( female ) * var1"/>
		<anim name="rifle_fe_death_run_fwd_2" weight="( female ) * var2"/>
		<anim name="rifle_fe_death_run_fwd_3" weight="( female ) * var3"/>
		<anim name="rifle_fe_death_run_fwd_4" weight="( female ) * var4"/>
		<anim name="rifle_fe_death_run_fwd_5" weight="( female ) * var5"/>
	</state>

	<state name="std/death/fire" type="mix" segment="base">
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>
		<param name="var5" value="0"/>
		<param name="flamer" value="0"/>

		<anim name="gen_death_fire_var1" weight="flamer"/>
		<anim name="gen_death_fire_var2" weight="var2"/>
		<anim name="gen_death_fire_var3" weight="var3"/>
		<anim name="gen_death_fire_var4" weight="var4"/>
		<anim name="gen_death_fire_var5" weight="var5"/>

	</state>

	<state name="enemy_death_dummy" type="once" segment="base">
		<anim name="rifle_death_up_fwd_6"/>
		<anim name="rifle_death_up_bwd_3"/>
		<anim name="rifle_death_run_fwd_11"/>

		<exit name="dummy_death_exit"/>
	</state>

	<state name="std/interact" type="template_state" segment="base">
		<to name="idle" redirect="std/interact/revive/exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/revive" type="template_state" segment="base">
		<to name="idle" redirect="std/interact/revive/exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="revive" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="revive" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/revive/enter" type="once" segment="base">
		<anim name="revive_enter"/>
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="needle" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>

			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="0.5" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/interact/revive/loop"/>
	</state>

	<state name="std/interact/revive/loop" type="loop" segment="base">
		<anim name="revive_loop"/>
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="needle" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>

			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/revive/exit" type="once" segment="base">
		<to name="idle" redirect="std/crouch/still/idle"/>
		<anim name="revive_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="0.5" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/interact/untie" type="template_state" segment="base">
		<to name="idle" redirect="std/interact/untie/exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/untie/enter" type="once" segment="base">
		<anim name="untie_enter"/>
		<exit name="std/interact/untie/loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="0.5" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/untie/loop" type="loop" segment="base">
		<anim name="untie_loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/interact/untie/exit" type="once" segment="base">
		<anim name="untie_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="crouch"/>
			<key at="0.5" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/surrender" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="surrender" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="surrender" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" callback="anim_clbk_mover_collision_state" class_name="character_damage" param1="false"/>
			<key at="exit" callback="anim_clbk_mover_collision_state" class_name="character_damage" param1="true"/>
		</keys>
	</state>

	<state name="std/surrender/hands_up" type="template_state" segment="base">
		<to name="surrender" redirect="std/surrender/hands_back/enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hands_up" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hands_up" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_up/enter" type="once" segment="base">
		<anim name="hands_up_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/surrender/hands_up/idle"/>
	</state>

	<state name="std/surrender/hands_up/idle" type="loop" segment="base">
		<anim name="hands_up_loop"/>
	</state>

	<state name="std/surrender/hands_back" type="template_state" segment="base">
		<to name="surrender" redirect="std/surrender/hands_tied/enter/from_hands_back"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hands_back" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hands_back" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_back/enter" type="once" segment="base">
		<anim name="hands_back_enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/surrender/hands_back/idle"/>
	</state>

	<state name="std/surrender/hands_back/idle" type="loop" segment="base">
		<anim name="hands_back_loop"/>
		<keys>
			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_tied" type="template_state" segment="base">
		<to name="stand" redirect="std/crouch/still/idle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="hands_tied" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hands_tied" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_tied/enter" type="template_state" segment="base">
		<to name="stand" redirect="std/crouch/still/idle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_tied/enter/all_in_one/from_stand" type="once" segment="base">
		<anim name="hands_tied_enter_all_in_one_from_stand"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/surrender/hands_tied/idle"/>
	</state>

	<state name="std/surrender/hands_tied/enter/from_hands_back" type="once" segment="base">
		<anim name="hands_tied_enter_v1"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/surrender/hands_tied/idle"/>
	</state>

	<state name="std/surrender/hands_tied/idle" type="loop" segment="base">
		<anim name="hands_tied_loop_v1"/>
		<keys>
			<key at="full_blend" set_extension="anim_data" extension_key="can_freeze" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="can_freeze" extension_value="false"/>
		</keys>
	</state>

	<state name="std/surrender/hands_tied/harassed/kicked_from_behind" type="once" segment="base">
		<anim name="rifle_hurt_bwd_1"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
			<key at="exit" callback="anim_clbk" class_name="brain" param1="harass_end"/>
		</keys>
		<exit name="std/surrender/hands_tied/idle"/>
	</state>


	<state name="std/stand/still/surprised" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="surprised" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="surprised" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/still/surprised/enter" type="mix" segment="base">
		<anim name="surprised_rifle" weight="rifle"/>
		<anim name="surprised_pistol" weight="pistol"/>
		<anim name="surprised_shield" weight="shield"/>
		<exit name="std/stand/still/idle/look" weight="1 - shield"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle" weight="shield"/>
	</state>


	<state name="std/stand/spawn" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/spawn/ntl" type="template_state" segment="base">
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/spawn/ntl/e_sp_ss_dropbag" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_ss_dropbag"/>
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="loot_bag" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/ntl/e_sp_ss_exitcar_right" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_ss_exitcar_right"/>
		<keys>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/spawn/cbt" type="template_state" segment="base">
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<!-- <key at="trigger" trigger="rope_on" callback="anim_clbk_rope" class_name="movement" param1="on"/>
			<key at="trigger" trigger="rope_off" callback="anim_clbk_rope" class_name="movement" param1="off"/> -->

			<!-- <key at="exit" callback="anim_clbk_rope" class_name="movement" param1="off"/>
			<key at="exit" callback="anim_clbk_stance" class_name="movement" param1="hos" param2="true"/> -->

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_l" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_r" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_l_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_l_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_r_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_r_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_l_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_l_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/exit_car_front_r_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_car_exit_pistol_front_r_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_run_jump_far" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_run_jump_far"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/kick_enter" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_kick_enter"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_kick_enter_bulldozer" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>

		</keys>
		<anim name="e_sp_kick_enter_bulldozer"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_roll" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>

		</keys>
		<anim name="e_sp_up_1m_dwn_4_5m_roll"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>

		</keys>
		<anim name="e_sp_up_1m_dwn_4_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/down_12m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_12m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/down_16m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_16m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/down_17m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_17m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/down_17m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_17m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_up_1_down_9m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_down_9m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_5_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_5_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_6m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1_down_13m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_down_13m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/spawn/cbt/e_sp_down_8m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_8m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_12m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_12m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<!-- Raid Spawn Start -->

	<state name="std/stand/spawn/cbt/e_sp_para_jump_100m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			
			<key at="trigger" trigger="open_parashoot" callback="anim_clbk_open_parachute" class_name="movement"/>			
			<key at="trigger" trigger="close_parashoot" callback="anim_clbk_close_parachute" class_name="movement"/>
			<key at="exit" callback="anim_clbk_close_parachute" class_name="movement"/>				
		
		</keys>
		<anim name="e_sp_para_jump_100m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_freefall_150m_para_jump_50m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			
			<key at="trigger" trigger="open_parashoot" callback="anim_clbk_open_parachute" class_name="movement"/>
			<key at="trigger" trigger="close_parashoot" callback="anim_clbk_close_parachute" class_name="movement"/>
			<key at="exit" callback="anim_clbk_close_parachute" class_name="movement"/>				
		</keys>
		<anim name="e_sp_freefall_150m_para_jump_50m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_down_tiger_tank" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_down_tiger_tank"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_up_tiger_tank" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_up_tiger_tank"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_6m_drop" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			
			<key at="trigger" trigger="open_parashoot" callback="anim_clbk_open_parachute" class_name="movement"/>			
			<key at="exit" callback="anim_clbk_close_parachute" class_name="movement"/>
		
		</keys>
		<anim name="e_sp_down_6m_drop"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>

			
			<key at="trigger" trigger="open_parashoot" callback="anim_clbk_open_parachute" class_name="movement"/>			
			<key at="exit" callback="anim_clbk_close_parachute" class_name="movement"/>
		
		</keys>
		<anim name="e_sp_up_1m_dwn_4_5m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1m_dwn_4_5m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_1m_dwn_4_5m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_6m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_dwn_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_6m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_dwn_6m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fall_back" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fall_back"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_death_stairs" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_death_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_door_tackle" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_door_tackle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_hurt_stairs" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_hurt_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_wall_down_3_7m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_wall_down_3_7m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_wall_down_3_7m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_wall_down_1m_fwd_2m_down_3_3m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_wall_down_1m_fwd_2m_down_3_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_out_truck_l" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_out_truck_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_exit_crawl_sommelier" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="cvy_npc_anim_crawl"/>
			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="cvy_npc_anim_land"/>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="cvy_npc_anim_rise"/>
 		</keys>
		<anim name="e_sp_exit_crawl_sommelier"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_wall_down_3_7m_var4" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_wall_down_3_7m_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_up_1_down_4m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_1_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_1_30m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_down_1_30m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_1_30m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_down_1_30m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_2_50m_fwd_1_30m_down" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_2_50m_fwd_1_30m_down"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_2_50m_fwd_1_30m_down_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_2_50m_fwd_1_30m_down_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_10m_turn_r_2m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_10m_turn_r_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_10m_turn_r_2m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_10m_turn_r_2m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m_var4" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_9m_var5" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_fwd_9m_var5"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3m_down_1m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3m_down_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3m_down_1m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3m_down_1m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3m_down_1m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3m_down_1m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3_down_1_2m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3_down_1_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_3_down_1_7m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_up_3_down_1_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_1_75m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_1_75m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_1_75m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_1_75m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_1_75m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_1_75m_var4" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_1_75m_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_3m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_3m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_3m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_3m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_3m_var4" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_3m_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2_30m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2_30m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2_30m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2_30m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_climb_over_2_30m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_climb_over_2_30m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_turn_up_1m_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_turn_up_1m_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_turn_up_1m_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_up_1m_down_4m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_sp_turn_up_1m_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m" type="once" segment="base">
		<anim name="e_sp_turn_r_2m_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var1" type="once" segment="base">
		<anim name="e_sp_turn_r_2m_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var2" type="once" segment="base">
		<anim name="e_sp_turn_r_2m_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_2m_down_4m_var3" type="once" segment="base">
		<anim name="e_sp_turn_r_2m_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m" type="once" segment="base">
		<anim name="e_sp_turn_l_3m_fwd_up_1m_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var1" type="once" segment="base">
		<anim name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var2" type="once" segment="base">
		<anim name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_3m_fwd_up_1m_down_4m_var3" type="once" segment="base">
		<anim name="e_sp_turn_l_3m_fwd_up_1m_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m" type="once" segment="base">
		<anim name="e_sp_turn_l_8m_fwd_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var1" type="once" segment="base">
		<anim name="e_sp_turn_l_8m_fwd_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var2" type="once" segment="base">
		<anim name="e_sp_turn_l_8m_fwd_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_8m_fwd_down_4m_var3" type="once" segment="base">
		<anim name="e_sp_turn_l_8m_fwd_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m" type="once" segment="base">
		<anim name="e_sp_turn_r_up_1m_down_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var1" type="once" segment="base">
		<anim name="e_sp_turn_r_up_1m_down_5m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var2" type="once" segment="base">
		<anim name="e_sp_turn_r_up_1m_down_5m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_r_up_1m_down_5m_var3" type="once" segment="base">
		<anim name="e_sp_turn_r_up_1m_down_5m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_2m_up_1m_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var1" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var2" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_2m_up_1m_down_4m_var3" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_2m_up_1m_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_up_1m_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var1" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_up_1m_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var2" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_up_1m_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_turn_l_fwd_up_1m_down_4m_var3" type="once" segment="base">
		<anim name="e_sp_turn_l_fwd_up_1m_down_4m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var1" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var2" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var3" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var4" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_turn_l_over_1m_var5" type="once" segment="base">
		<anim name="e_sp_fwd_turn_l_over_1m_var5"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_run_fwd_on_fire_die_var1" type="once" segment="base">
		<anim name="e_sp_run_fwd_on_fire_die_var1"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_run_fwd_on_fire_die_var2" type="once" segment="base">
		<anim name="e_sp_run_fwd_on_fire_die_var2"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fall_out_of_bunker_fire_dth_var1" type="once" segment="base">
		<anim name="e_sp_fall_out_of_bunker_fire_dth_var1"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fall_out_of_bunker_fire_dth_var2" type="once" segment="base">
		<anim name="e_sp_fall_out_of_bunker_fire_dth_var2"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<!-- Raid Spawn End -->

	<!--NOT IMPLEMENTED -->

	<state name="std/stand/spawn/cbt/e_sp_dwn_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_10m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_10m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_11m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_11m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_5m_dwn_11m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_fwd_5m_dwn_11m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<!--NOT IMPLEMENTED -->

	<state name="std/stand/spawn/cbt/e_sp_down_16m_right" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_16m_right"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_16m_left" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_16m_left"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1_down_9m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_down_9m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_1_down_9m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_down_9m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_up_1_5_down_9m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_5_down_9m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_down_4m_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_4m_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_4m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_4m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_9_6m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_9_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_8m_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_8m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_down_8m_var3" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_down_8m_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_repel_into_window" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_repel_into_window"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_over_1m_swing_dwn_7m_window" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_05" callback="anim_act_clbk" class_name="base" param1="anim_act_05" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_over_1m_swing_dwn_7m_window"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_over_1m_dwn_12m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_05" callback="anim_act_clbk" class_name="base" param1="anim_act_05" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_over_1m_dwn_12m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	
	<state name="std/stand/spawn/cbt/e_sp_over_1m_dwn_7m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_over_1m_dwn_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_swing_dwn_7m_window" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_05" callback="anim_act_clbk" class_name="base" param1="anim_act_05" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_swing_dwn_7m_window"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_22m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_05" callback="anim_act_clbk" class_name="base" param1="anim_act_05" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_22m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_dwn_21m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_05" callback="anim_act_clbk" class_name="base" param1="anim_act_05" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_21m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/up_2_75_down_1_25m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_up_2_75_down_1_25m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_ 2_75_fwd_2_7_dwn_2_75m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_up_ 2_75_fwd_2_7_dwn_2_75m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_climb_over_4m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_climb_over_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_over_3_35m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_over_3_35m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_fwd_4m_jump_dwn_4_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_fwd_4m_jump_dwn_4_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_over_3m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_over_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_over_3m_fwd_2m_roll" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_over_3m_fwd_2m_roll"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_over_3m_fwd_4m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_over_3m_fwd_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_run_2m_turn_r_10m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_run_2m_turn_r_10m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_run_2m_turn_l_10m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_run_2m_turn_l_10m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_run_2m_turn_r_14m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_run_2m_turn_r_14m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_run_2m_turn_l_14m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_run_2m_turn_l_14m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_barn_door_open_r" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_barn_door_open_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_barn_door_open_l" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_barn_door_open_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/spawn/cbt/e_sp_climb_over_2m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
			<!-- <key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/> -->
		</keys>
		<anim name="e_sp_climb_over_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_armored_truck_1st" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_armored_truck_1st"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_armored_truck_2nd" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_armored_truck_2nd"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_armored_truck_3rd" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_armored_truck_3rd"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_stand" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_stand"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_get_up" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_get_up"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_walk_left" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_walk_left"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_walk_right" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_walk_right"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_fall_get_up" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_fall_get_up"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_stand_v2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_stand_v2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_bulldozer_turn_chair" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_bulldozer_turn_chair"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_look_around" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_look_around"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dizzy_walk_inplace" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_dizzy_walk_inplace"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_3m_dwn_vent" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_3m_dwn_vent"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_exit_vent_1_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_exit_vent_1_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_3_5m_dwn_vent" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_3_5m_dwn_vent"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_3_5m_dwn_vent_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_3_5m_dwn_vent_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_up_manhole" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_up_manhole"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_up_water" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_up_water"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_over_2_5m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_over_2_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_jump_dwn_5m_heli_l" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_jump_dwn_5m_heli_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_clk_4_5m_dwn_vent" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
		</keys>
		<anim name="e_sp_clk_4_5m_dwn_vent"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/e_sp_unarmed_helicopter_step_out1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<anim name="e_sp_unarmed_helicopter_step_out1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/e_sp_unarmed_helicopter_step_out2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<anim name="e_sp_unarmed_helicopter_step_out2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/e_sp_elevator_escape" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>
		</keys>
		<anim name="e_sp_elevator_escape"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/up_1_down_9_25m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_up_1_down_9_25m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_10_25m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_10_25m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_dwn_11m" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->
			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<anim name="e_sp_dwn_11m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/spawn/cbt/e_sp_jump_down_heli_right" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_jump_down_heli_right"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_car_exit_ntrl_front_r" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_car_exit_ntrl_front_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_car_exit_ntrl_front_l" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_car_exit_ntrl_front_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_up_ledge" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_up_ledge"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_stumble_var2" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_stumble_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_stumble_var1" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_stumble_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_jump_down_heli_left" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_jump_down_heli_left"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_aim_rifle_std" type="loop" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act_idle" extension_value="false"/>
		</keys>
		<anim name="e_sp_aim_rifle_std"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_aim_rifle_crh" type="loop" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act_idle" extension_value="false"/>
		</keys>
		<anim name="e_sp_aim_rifle_crh"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_hurt_from_truck" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_hurt_from_truck"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/spawn/cbt/e_sp_crh_to_std_rifle" type="once" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<anim name="e_sp_crh_to_std_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<from_group name="std/stand/still/idle" blend="4"/>
		<keys>
			<!-- <key at="trigger" trigger="rope_on" callback="anim_clbk_rope" class_name="movement" param1="on"/>
			<key at="trigger" trigger="rope_off" callback="anim_clbk_rope" class_name="movement" param1="off"/> -->

			<key at="exit" callback="anim_clbk_rope" class_name="movement" param1="off"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/nav_link/climb_over_2m" type="once" segment="base">
		<anim name="e_nl_climb_over_2m"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/jump_over_1m_var1" type="once" segment="base">
		<anim name="e_nl_jump_over_1m_var1"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_ss_run_dunk_hood" type="once" segment="base">
		<anim name="e_nl_ss_run_dunk_hood"/>
		<keys>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="test/animation_test" type="loop" segment="base" speed="2"> 
		<anim name="animation_test"/>
		<keys>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_3m" type="once" segment="base">
		<anim name="e_nl_down_3m"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_dwn_3m_fwd_7m_dwn_0_5m" type="once" segment="base">
		<anim name="e_nl_jump_dwn_3m_fwd_7m_dwn_0_5m"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_pool_jump" type="once" segment="base">
		<anim name="e_nl_pool_jump"/>
		<keys>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_4_4m_dwn_0_5m" type="once" segment="base">
		<anim name="e_nl_up_4_4m_dwn_0_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_3_3m" type="once" segment="base">
		<anim name="e_nl_up_3_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_3_5m" type="once" segment="base">
		<anim name="e_nl_up_3_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_4_4m_hang" type="once" segment="base">
		<anim name="e_nl_dwn_4_4m_hang"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_4_4m_jump" type="once" segment="base">
		<anim name="e_nl_dwn_4_4m_jump"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_ladder_up_3m" type="once" segment="base">
		<anim name="e_nl_ladder_up_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_ladder_up_16m" type="once" segment="base">
		<anim name="e_nl_ladder_up_16m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_ladder_dwn_16m" type="once" segment="base">
		<anim name="e_nl_ladder_dwn_16m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_ladder_up_4_4m" type="once" segment="base">
		<anim name="e_nl_ladder_up_4_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_4_5m_slide_cliff" type="once" segment="base">
		<anim name="e_nl_dwn_4_5m_slide_cliff"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_3_5m_slide_cliff" type="once" segment="base">
		<anim name="e_nl_dwn_3_5m_slide_cliff"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_0_9m_window_in" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_0_9m_window_in"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_0_5m_window_in" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_0_5m_window_in"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_0_9m_dwn_1m_window_out" type="once" segment="base">
		<anim name="e_nl_up_0_9m_dwn_1m_window_out"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_0_5m_dwn_1m_window_out" type="once" segment="base">
		<anim name="e_nl_up_0_5m_dwn_1m_window_out"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_0_5m_window_in" type="once" segment="base">
		<anim name="e_nl_dwn_0_5m_window_in"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_0_5m_window_out" type="once" segment="base">
		<anim name="e_nl_dwn_0_5m_window_out"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_3m_dwn_0_5m" type="once" segment="base">
		<anim name="e_nl_up_3m_dwn_0_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_enter_wall_hole" type="once" segment="base">
		<anim name="e_nl_enter_wall_hole"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_0_5m_window_out" type="once" segment="base">
		<anim name="e_nl_up_0_5m_window_out"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_2_5m_right_2m_jump" type="once" segment="base">
		<anim name="e_nl_up_2_5m_right_2m_jump"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/e_nl_button_slide_under" type="once" segment="base">
		<anim name="e_nl_button_slide_under"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_swing_dwn_3_5m" type="once" segment="base">
		<anim name="e_nl_up_1m_swing_dwn_3_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_1m" type="once" segment="base">
		<anim name="e_nl_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m" type="once" segment="base">
		<anim name="e_nl_up_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_3m" type="once" segment="base">
		<anim name="e_nl_up_1_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_slide_4m_dwn_2m" type="once" segment="base">
		<anim name="e_nl_slide_4m_dwn_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_4_5m" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_4_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_4_5m_roll" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_4_5m_roll"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_run_jump_far_var1" type="once" segment="base">
		<anim name="e_nl_run_jump_far_var1"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_run_jump_far_var2" type="once" segment="base">
		<anim name="e_nl_run_jump_far_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_run_jump_far_var3" type="once" segment="base">
		<anim name="e_nl_run_jump_far_var3"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_4m_long_2m_dwn" type="once" segment="base">
		<anim name="e_nl_4m_long_2m_dwn"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_over_4_25m" type="once" segment="base">
		<anim name="e_nl_over_4_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_over_3m_fwd_4m" type="once" segment="base">
		<anim name="e_nl_over_3m_fwd_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_over_3m_fwd_2m_roll" type="once" segment="base">
		<anim name="e_nl_over_3m_fwd_2m_roll"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_jump_2m_long" type="once" segment="base">
		<anim name="e_nl_jump_2m_long"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/e_nl_actionjump_2m_forward" type="once" segment="base">
		<anim name="e_nl_actionjump_2m_forward"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_actionjump_2m_forward_var2" type="once" segment="base">
		<anim name="e_nl_actionjump_2m_forward_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/jump_over_1m_var2" type="once" segment="base">
		<anim name="e_nl_jump_over_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_over_and_fwd_1m_var2" type="once" segment="base">
		<anim name="e_nl_over_and_fwd_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_over_and_fwd_1m" type="once" segment="base">
		<anim name="e_nl_over_and_fwd_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/jump_down_2_5m" type="once" segment="base">
		<anim name="e_nl_jump_down_2_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_25_down_0_8m" type="once" segment="base">
		<anim name="e_nl_up_1_25_down_0_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_75m" type="once" segment="base">
		<anim name="e_nl_up_1_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

		<state name="std/stand/nav_link/up_1_75m_var1" type="once" segment="base">
		<anim name="e_nl_up_1_75m_var1"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_5m_dwn_1m" type="once" segment="base">
		<anim name="e_nl_up_1_5m_dwn_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_crawl_3_5m" type="once" segment="base">
		<anim name="e_nl_crawl_3_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_1_75m" type="once" segment="base">
		<anim name="e_nl_down_1_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_1_25m" type="once" segment="base">
		<anim name="e_nl_down_1_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_1_5m" type="once" segment="base">
		<anim name="e_nl_down_1_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_0_5_down_5_5m" type="once" segment="base">
		<anim name="e_nl_up_0_5_down_5_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_2_75_down_1m" type="once" segment="base">
		<anim name="e_nl_up_2_75_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_5m" type="once" segment="base">
		<anim name="e_nl_up_1_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_5m_var1" type="once" segment="base">
		<anim name="e_nl_up_1_5m_var1"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->	</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_fwd_4m_down_6_25m" type="once" segment="base">
		<anim name="e_nl_jump_fwd_4m_down_6_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->	</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_2m" type="once" segment="base">
		<anim name="e_nl_down_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_jump_desk" type="once" segment="base">
		<anim name="e_nl_cs_jump_desk"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_jump_window" type="once" segment="base">
		<anim name="e_nl_cs_jump_window"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_over_0_5m" type="once" segment="base">
		<anim name="e_nl_jump_over_0_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_over_2_5m" type="once" segment="base">
		<anim name="e_nl_jump_over_2_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_under_0_7m" type="once" segment="base">
		<anim name="e_nl_under_0_7m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_climb_up_2_2m" type="once" segment="base">
		<anim name="e_nl_climb_up_2_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_climb_up_4_75m" type="once" segment="base">
		<anim name="e_nl_climb_up_4_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_cs_dwn_front" type="once" segment="base">
		<anim name="e_nl_cs_dwn_front"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_door_open_hack_code" type="once" segment="base">
		<anim name="e_nl_door_open_hack_code"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_dwn_back" type="once" segment="base">
		<anim name="e_nl_cs_dwn_back"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_short_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_short_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_long_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_long_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_front_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_front_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_11m" type="once" segment="base">
		<anim name="e_nl_dwn_11m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_back_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_back_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_sewer_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_sewer_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_dwn_sewer" type="once" segment="base">
		<anim name="e_nl_cs_dwn_sewer"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_down_4_5m_drill" type="once" segment="base">
		<anim name="e_nl_up_1_down_4_5m_drill"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_dwn_jump_4_5m" type="once" segment="base">
		<anim name="e_nl_dwn_jump_4_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_dwn_jump_5_25m" type="once" segment="base">
		<anim name="e_nl_dwn_jump_5_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_dwn_repel_11_25m" type="once" segment="base">
		<anim name="e_nl_dwn_repel_11_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up_7m_ladder" type="once" segment="base">
		<anim name="e_nl_up_7m_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_cs_up_8m_ladder" type="once" segment="base">
		<anim name="e_nl_cs_up_8m_ladder"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_stairs_4m" type="mix" segment="base">
		<anim name="e_nl_down_stairs_4m_hos_legs" weight="1"/>
		<anim name="e_nl_down_stairs_4m_hos_pis" weight="( ntl + hos ) * pistol"/>
		<anim name="e_nl_down_stairs_4m_hos_rif" weight="( ntl + hos ) * rifle"/>
		<anim name="e_nl_down_stairs_4m_cbt_pis" weight="cbt * pistol"/>
		<anim name="e_nl_down_stairs_4m_cbt_rif" weight="cbt * rifle"/>
		<keys>
			<key at="0.1" callback="anim_clbk_block_info" class_name="movement" param1="block_lower" param2="true"/>
			<key at="exit" callback="anim_clbk_block_info" class_name="movement" param1="block_all" param2="true"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_over_1m_shoot" type="mix" segment="base">
		<anim name="e_nl_jump_over_1m_shoot_hos_legs" weight="1"/>
		<anim name="e_nl_jump_over_1m_shoot_hos_pis" weight="( ntl + hos ) * pistol"/>
		<anim name="e_nl_jump_over_1m_shoot_hos_rifle" weight="( ntl + hos ) * rifle"/>
		<anim name="e_nl_jump_over_1m_shoot_cbt_pis" weight="cbt * pistol"/>
		<anim name="e_nl_jump_over_1m_shoot_cbt_rifle" weight="cbt * rifle"/>
		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="base_aim_ik" extension_value="spine"/>
			<key at="enter" callback="anim_clbk_ik_change" class_name="movement"/>

			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>

			<key at="trigger" trigger="start_shoot" callback="anim_clbk_block_info" class_name="movement" param1="block_lower" param2="true"/>
			<key at="trigger" trigger="stop_shoot" callback="anim_clbk_block_info" class_name="movement" param1="block_all" param2="true"/>

			<key at="enter" set_extension="anim_data" extension_key="pose" extension_value="stand"/>
			<key at="exit" set_extension="anim_data" extension_key="pose" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_5_down_1m" type="once" segment="base">
		<anim name="e_nl_up_5_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_3_35m" type="once" segment="base">
		<anim name="e_nl_down_3_35m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_5m" type="once" segment="base">
		<anim name="e_nl_up_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_ladder_4m" type="once" segment="base">
		<anim name="e_nl_up_ladder_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_5m_var2" type="once" segment="base">
		<anim name="e_nl_down_5m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_5_down_1m_var2" type="once" segment="base">
		<anim name="e_nl_up_5_down_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_5_down_1m_right" type="once" segment="base">
		<anim name="e_nl_up_5_down_1m_right"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
 -->			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
			<key at="trigger" trigger="anim_act_05" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_heavy_noequipment"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/kick_enter" type="once" segment="base">
		<anim name="e_nl_kick_enter"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_climb_over_3m" type="once" segment="base">
		<anim name="e_nl_climb_over_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/kick_enter_special" type="once" segment="base">
		<anim name="e_nl_kick_enter_special"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_press_button_enter" type="once" segment="base">
		<anim name="e_nl_press_button_enter"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	

	<state name="std/stand/nav_link/plant_run_through" type="once" segment="base">
		<anim name="e_nl_plant_run_through"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_0_8_down_1_25m" type="once" segment="base">
		<anim name="e_nl_up_0_8_down_1_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_down_5m" type="once" segment="base">
		<anim name="e_nl_up_1_down_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_down_3m" type="once" segment="base">
		<anim name="e_nl_up_1_down_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_4_6_down_0_6m" type="once" segment="base">
		<anim name="e_nl_up_4_6_down_0_6m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_6m" type="once" segment="base">
		<anim name="e_nl_up_6m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_6m_var2" type="once" segment="base">
		<anim name="e_nl_up_6m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_6m_var3" type="once" segment="base">
		<anim name="e_nl_up_6m_var3"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_12m" type="once" segment="base">
		<anim name="e_nl_up_12m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_rats_roof" type="once" segment="base">
		<anim name="e_nl_up_rats_roof"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/over_3_35m" type="once" segment="base">
		<anim name="e_nl_over_3_35m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_10m_turn_r_2m" type="once" segment="base">
		<anim name="e_nl_10m_turn_r_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_10" callback="anim_act_clbk" class_name="base" param1="anim_act_10" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_10m_turn_l_2m" type="once" segment="base">
		<anim name="e_nl_10m_turn_l_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_10" callback="anim_act_clbk" class_name="base" param1="anim_act_10" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/down_2_7_fwd_2m" type="once" segment="base">
		<anim name="e_nl_down_2_7_fwd_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_3_down_1m" type="once" segment="base">
		<anim name="e_nl_up_3_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_4_fwd_4m" type="once" segment="base">
		<anim name="e_nl_down_4_fwd_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_fwd_1_5m" type="once" segment="base">
		<anim name="e_nl_up_1_fwd_1_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_fwd_1_5m_var2" type="once" segment="base">
		<anim name="e_nl_up_1_fwd_1_5m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_4m" type="once" segment="base">
		<anim name="e_nl_up_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_4m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_4m_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/e_nl_slide_fwd_4m" type="once" segment="base">
		<anim name="e_nl_slide_fwd_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_2_2_down_1m" type="once" segment="base">
		<anim name="e_nl_up_2_2_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_6_2_down_1m_var2" type="once" segment="base">
		<anim name="e_nl_up_6_2_down_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_6_2_down_1m" type="once" segment="base">
		<anim name="e_nl_up_6_2_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_7_down_1m" type="once" segment="base">
		<anim name="e_nl_up_7_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_7_down_1m_var2" type="once" segment="base">
		<anim name="e_nl_up_7_down_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_4m_roll" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_4m_roll"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_4m_jump" type="once" segment="base">
		<anim name="e_nl_down_4m_jump"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_dwn_4_75m" type="once" segment="base">
		<anim name="e_nl_dwn_4_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_2_2m_down_2m" type="once" segment="base">
		<anim name="e_nl_up_2_2m_down_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_slope_climb_3_3m" type="once" segment="base">
		<anim name="e_nl_slope_climb_3_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_slope_climb_3_7m" type="once" segment="base">
		<anim name="e_nl_slope_climb_3_7m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_slope_climb_2_4m" type="once" segment="base">
		<anim name="e_nl_slope_climb_2_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	
	<state name="std/stand/nav_link/e_nl_up_2_2m_down_2_2m" type="once" segment="base">
		<anim name="e_nl_up_2_2m_down_2_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_4m" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_9_down_1m" type="once" segment="base">
		<anim name="e_nl_up_9_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_2_75m" type="once" segment="base">
		<anim name="e_nl_down_2_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_2_75m" type="once" segment="base">
		<anim name="e_nl_up_2_75m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/fwd_4m" type="once" segment="base">
		<anim name="e_nl_fwd_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/fwd_2m" type="once" segment="base">
		<anim name="e_nl_fwd_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_hox_enter_car" type="once" segment="base">
		<anim name="e_nl_hox_enter_car"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_act_clbk" class_name="base" param1="anim_act_02" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="hoxton_car_hide"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_5_5m" type="once" segment="base">
		<anim name="e_nl_down_5_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_5_5m_var2" type="once" segment="base">
		<anim name="e_nl_down_5_5m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_down_8m_var2" type="once" segment="base">
		<anim name="e_nl_down_8m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_8m_var3" type="once" segment="base">
		<anim name="e_nl_down_8m_var3"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up_8m_right_2m_over_1m" type="once" segment="base">
		<anim name="e_nl_up_8m_right_2m_over_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up_8m_left_2m_over_1m" type="once" segment="base">
		<anim name="e_nl_up_8m_left_2m_over_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_down_5m_var3" type="once" segment="base">
		<anim name="e_nl_down_5m_var3"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_down_7_1m" type="once" segment="base">
		<anim name="e_nl_up_1_down_7_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_dwn_1_4m_fwd_2_35m" type="once" segment="base">
		<anim name="e_nl_jump_dwn_1_4m_fwd_2_35m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up_1_down_6m" type="once" segment="base">
		<anim name="e_nl_up_1_down_6m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_5m_1m_dwn_right_stairs" type="once" segment="base">
		<anim name="e_nl_up_5m_1m_dwn_right_stairs"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_5m_1m_dwn_left_stairs" type="once" segment="base">
		<anim name="e_nl_up_5m_1m_dwn_left_stairs"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/e_nl_up_1_down_6m_v2" type="once" segment="base">
		<anim name="e_nl_up_1_down_6m_v2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_4m_long" type="once" segment="base">
		<anim name="e_nl_jump_4m_long"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_jump_5m_long" type="once" segment="base">
		<anim name="e_nl_jump_5m_long"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_4m_var2" type="once" segment="base">
		<anim name="e_nl_down_4m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/down_4_25m" type="once" segment="base">
		<anim name="e_nl_down_4_25m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_4m" type="once" segment="base">
		<anim name="e_nl_down_4m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/down_7m" type="once" segment="base">
		<anim name="e_nl_down_7m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_8m" type="once" segment="base">
		<anim name="e_nl_down_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_12m" type="once" segment="base">
		<anim name="e_nl_down_12m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_19m" type="once" segment="base">
		<anim name="e_nl_down_19m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_dwn_9m" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_9m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/down_5m" type="once" segment="base">
		<anim name="e_nl_down_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_down_13m" type="once" segment="base">
		<anim name="e_nl_up_1_down_13m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_down_15_50m" type="once" segment="base">
		<anim name="e_nl_up_1_down_15_50m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_down_8m" type="once" segment="base">
		<anim name="e_nl_up_1_down_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_2_down_8_2m" type="once" segment="base">
		<anim name="e_nl_up_2_down_8_2m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/up_1_down_9m" type="once" segment="base">
		<anim name="e_nl_up_1_down_9m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/open_door" type="once" segment="base">
		<anim name="e_nl_open_door"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_clk_over_1_8m" type="once" segment="base">
		<anim name="e_nl_clk_over_1_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	---
	<state name="std/stand/nav_link/e_nl_up_7_5m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_7_5m_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_11_5m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_11_5m_down_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_down_4_3m_swing" type="once" segment="base">
		<anim name="e_nl_up_1m_down_4_3m_swing"/>
		<keys>

			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_8m_dwn_0_8m_left" type="once" segment="base">
		<anim name="e_nl_up_8m_dwn_0_8m_left"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_4_3m_dwn_1m" type="once" segment="base">
		<anim name="e_nl_up_4_3m_dwn_1m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/nav_link/e_nl_up_4_3m_dwn_1m_var2" type="once" segment="base">
		<anim name="e_nl_up_4_3m_dwn_1m_var2"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1_5m_dwn_0_8m" type="once" segment="base">
		<anim name="e_nl_up_1_5m_dwn_0_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_up_1m_down_3m" type="once" segment="base">
		<anim name="e_up_1m_down_3m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_down_5m_swing" type="once" segment="base">
		<anim name="e_nl_up_1m_down_5m_swing"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_1m_down_4_5m_swing" type="once" segment="base">
		<anim name="e_nl_up_1m_down_4_5m_swing"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>



	<state name="std/stand/nav_link/e_nl_up_1m_dwn_18m" type="once" segment="base">
		<anim name="e_nl_up_1m_dwn_18m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_4_75m_swing" type="once" segment="base">
		<anim name="e_nl_down_4_75m_swing"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_over_1m_dwn_8m" type="once" segment="base">
		<anim name="e_nl_over_1m_dwn_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_over_1m_dwn_11_5m" type="once" segment="base">
		<anim name="e_nl_over_1m_dwn_11_5m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_over_1m_dwn_12m" type="once" segment="base">
		<anim name="e_nl_over_1m_dwn_12m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up_1_down_4_8m" type="once" segment="base">
		<anim name="e_nl_up_1_down_4_8m"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/nav_link/e_nl_up1m_fwd2m_through_window" type="once" segment="base">
		<anim name="e_nl_up1m_fwd2m_through_window"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_elevator_shaft" type="once" segment="base">
		<anim name="e_nl_down_elevator_shaft"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_up_elevator_shaft" type="once" segment="base">
		<anim name="e_nl_up_elevator_shaft"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/nav_link/e_nl_down_thermite_hole" type="once" segment="base">
		<anim name="e_nl_down_thermite_hole"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
<!-- 			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_play_sound" class_name="sound" param1="foley_flap_light"/>
 -->		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<keys>
			<key at="trigger" trigger="rope_on" callback="anim_clbk_rope" class_name="movement" param1="on"/>
			<key at="trigger" trigger="rope_off" callback="anim_clbk_rope" class_name="movement" param1="off"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="trigger" trigger="enable_ragdoll" set_extension="anim_data" extension_key="ragdoll" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="ragdoll" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_reload" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle" type="template_state" segment="base">
		<from_group name="std/spawn" blend="4"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/idle_tired" type="once" segment="base">
		<anim name="e_so_ntl_idle_tired"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	

	<!-- RAID -->

	<!-- husk stealth idle start -->

	<state name="std/stand/so/idle/husk_stealth_crh_var1" type="loop" segment="base">
		<anim name="husk_stealth_crh_var1"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_crh_var2" type="loop" segment="base">
		<anim name="husk_stealth_crh_var2"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_crh_var3" type="loop" segment="base">
		<anim name="husk_stealth_crh_var3"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_crh_var4" type="loop" segment="base">
		<anim name="husk_stealth_crh_var4"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_std_var1" type="loop" segment="base">
		<anim name="husk_stealth_std_var1"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_std_var2" type="loop" segment="base">
		<anim name="husk_stealth_std_var2"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_std_var3" type="loop" segment="base">
		<anim name="husk_stealth_std_var3"/>
	</state>

	<state name="std/stand/so/idle/husk_stealth_std_var4" type="loop" segment="base">
		<anim name="husk_stealth_std_var4"/>
	</state>

	<!-- husk stealth idle end -->

	<state name="std/stand/so/idle/player_select_screen" type="loop" segment="base">
		<anim name="player_select_screen"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_ntl_crouch_investigate_v01" type="once" segment="base">
		<anim name="e_so_ntl_crouch_investigate_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_ntl_crouch_investigate_v02" type="once" segment="base">
		<anim name="e_so_ntl_crouch_investigate_v02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_ntl_crouch_investigate_v03" type="once" segment="base">
		<anim name="e_so_ntl_crouch_investigate_v03"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_enter" type="once" segment="base">
		<anim name="e_so_mg34_enter"/>
		<keys>
			<key at="exit" callback="on_anim_turret_enter_finished" class_name="movement"/>
		</keys>
		<exit name="std/stand/so/idle/e_so_mg34_idle"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_exit" type="once" segment="base">
		<anim name="e_so_mg34_exit"/>
		<keys>
			<key at="exit" callback="on_anim_turret_mg34_exit_finished" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_idle" type="loop" segment="base">
		<anim name="e_so_mg34_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_aiming" type="loop" segment="base">
		<anim name="e_so_mg34_aiming"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_aim_right" type="timeblend" segment="base" speed="1">
		<anim name="e_so_mg34_aim_right" time="1" />
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_aim_left" type="timeblend" segment="base" speed="1">
		<anim name="e_so_mg34_aim_left" time="1" />
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_mg34_recoil_v01" type="loop" segment="base">
		<anim name="e_so_mg34_recoil_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_death_flakvierling_var1" type="once" segment="base">
		<anim name="ntl_death_flakvierling_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_flak_88_idle" type="loop" segment="base">
		<anim name="e_so_flak_88_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_flak_88_sit_exit" type="once" segment="base">
		<anim name="e_so_flak_88_sit_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_flak_88_sit_enter" type="once" segment="base">
		<anim name="e_so_flak_88_sit_enter"/>
		<keys>
			<key at="exit" callback="on_anim_turret_enter_finished" class_name="movement"/>
		</keys>

		<exit name="std/stand/so/idle/e_so_flak_88_idle"/>
	</state>

	<state name="std/stand/so/idle/so_enter_flakvierling_20mm_quad" type="once" segment="base">
		<anim name="so_enter_flakvierling_20mm_quad"/>
		<keys>
			<key at="exit" callback="on_anim_turret_enter_finished" class_name="movement"/>
		</keys>

		<exit name="std/stand/so/idle/so_idle_flakvierling_20mm_quad"/>
	</state>

	<state name="std/stand/so/idle/ntl_enter_flakvierling" type="once" segment="base">
		<anim name="ntl_enter_flakvierling"/>
		<keys>
			<key at="exit" callback="on_anim_turret_enter_finished" class_name="movement"/>
		</keys>

		<exit name="std/stand/so/idle/ntl_idle_flakvierling"/>
	</state>

	<state name="std/stand/so/idle/so_exit_flakvierling_20mm_quad" type="once" segment="base">
		<anim name="so_exit_flakvierling_20mm_quad"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_idle_flakvierling_20mm_quad" type="once" segment="base">
		<anim name="so_idle_flakvierling_20mm_quad"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_exit_flakvierling" type="once" segment="base">
		<anim name="ntl_exit_flakvierling"/>
		<keys>
			<key at="exit" callback="on_anim_turret_flakvierling_exit_finished" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_idle_flakvierling" type="loop" segment="base">
		<anim name="ntl_idle_flakvierling"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_enter_flakvierling_v01" type="once" segment="base">
		<anim name="ntl_enter_flakvierling_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_para_jump_flakturm" type="once" segment="base">
		<anim name="so_para_jump_flakturm"/>
		
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="forced" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="forced" extension_value="false"/>
			
			<key at="trigger" trigger="open_parashoot" callback="anim_clbk_open_parachute" class_name="movement"/>
			<key at="trigger" trigger="close_parashoot" callback="anim_clbk_close_parachute" class_name="movement"/>
			<key at="exit" callback="anim_clbk_close_parachute" class_name="movement"/>				
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_suspicious_pistol_v01" type="once" segment="base">
		<anim name="e_so_suspicious_pistol_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_suspicious_pistol_v02" type="once" segment="base">
		<anim name="e_so_suspicious_pistol_v02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_suspicious_rifle_v01" type="once" segment="base">
		<anim name="e_so_suspicious_rifle_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_suspicious_rifle_v02" type="once" segment="base">
		<anim name="e_so_suspicious_rifle_v02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_6m_ladder_v01" type="once" segment="base">
		<anim name="e_nl_up_6m_ladder_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_up_19m" type="once" segment="base">
		<anim name="e_nl_ladder_up_19m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_radio_tower_up_idle" type="loop" segment="base">
		<anim name="so_radio_tower_up_idle"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_down_19m" type="once" segment="base">
		<anim name="e_nl_ladder_down_19m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_6m_ladder_v01" type="once" segment="base">
		<anim name="e_nl_down_6m_ladder_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_coin_charge" type="once" segment="base">
		<anim name="ntl_std_coin_charge"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_coin_idle" type="once" segment="base">
		<anim name="ntl_std_coin_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_coin_throw" type="once" segment="base">
		<anim name="ntl_std_coin_throw"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_grenade_charge" type="once" segment="base">
		<anim name="ntl_std_grenade_charge"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_grenade_idle" type="once" segment="base">
		<anim name="ntl_std_grenade_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/ntl_std_grenade_throw" type="once" segment="base">
		<anim name="ntl_std_grenade_throw"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_adjust_boot" type="once" segment="base">
		<anim name="e_so_idle_adjust_boot"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_adjust_boot_rifle" type="once" segment="base">
		<anim name="e_so_idle_adjust_boot_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_bored_rifle" type="loop" segment="base">
		<anim name="e_so_bored_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_bored_pistol" type="once" segment="base">
		<anim name="e_so_bored_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_over_pistol" type="once" segment="base">
		<anim name="e_so_look_over_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_over_rifle" type="once" segment="base">
		<anim name="e_so_look_over_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_excited_pistol" type="once" segment="base">
		<anim name="e_so_excited_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_excited_rifle" type="once" segment="base">
		<anim name="e_so_excited_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_enter_pistol" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_enter_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_exit_pistol" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_exit_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_lean_pistol" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_lean_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_pistol" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_pistol" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_turn_pistol"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_enter_rifle" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_enter_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_exit_rifle" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_exit_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_lean_rifle" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_lean_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_rifle" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_rifle" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_turn_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_armed_leanwall_enter_rifle" type="once" segment="base">
		<anim name="e_so_armed_leanwall_enter_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_armed_leanwall_exit_rifle" type="once" segment="base">
		<anim name="e_so_armed_leanwall_exit_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_armed_leanwall_loop_clock_rifle" type="once" segment="base">
		<anim name="e_so_armed_leanwall_loop_clock_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_armed_leanwall_loop_kickpebble_rifle" type="once" segment="base">
		<anim name="e_so_armed_leanwall_loop_kickpebble_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_armed_leanwall_loop_look_rifle" type="once" segment="base">
		<anim name="e_so_armed_leanwall_loop_look_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<!-- <state name="std/stand/so/idle/e_so_adjust_collar" type="once" segment="base">
		<anim name="e_so_adjust_collar"/>
		<exit name="std/stand/still/idle/look"/>
	</state> -->

	<!-- <state name="std/stand/so/idle/e_so_adjust_sleves" type="once" segment="base">
		<anim name="e_so_adjust_sleves"/>
		<exit name="std/stand/still/idle/look"/>
	</state> -->

	<state name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle_var1" type="once" segment="base">
		<anim name="e_so_idle_std_to_crh_idle_crh_to_std_idle_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner_unarmed" type="once" segment="base">
		<anim name="e_so_look_corner_unarmed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_looking_in_distance" type="once" segment="base">
		<anim name="e_so_looking_in_distance"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_looking_in_distance_var1" type="once" segment="base">
		<anim name="e_so_looking_in_distance_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_under_caranimation" type="once" segment="base">
		<anim name="e_so_look_under_caranimation"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_partol_circle" type="loop" segment="base">
		<anim name="e_so_partol_circle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_patrol_front_back" type="once" segment="base">
		<anim name="e_so_patrol_front_back"/>
		<exit name="std/stand/so/idle/e_so_patrol_front_back" weight="4"/>
		<exit name="std/stand/still/idle/look" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_patrol_left_right" type="once" segment="base">
		<anim name="e_so_patrol_left_right"/>
		<exit name="std/stand/so/idle/e_so_patrol_left_right" weight="4"/>
		<exit name="std/stand/still/idle/look" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_pick_nose" type="once" segment="base">
		<anim name="e_so_pick_nose"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_pickup_stuff_floor_dustoff_hands" type="once" segment="base">
		<anim name="e_so_pickup_stuff_floor_dustoff_hands"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_point_at_enter" type="once" segment="base">
		<anim name="e_so_point_at_enter"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_polish_boots" type="once" segment="base">
		<anim name="e_so_polish_boots"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_push_button_table" type="once" segment="base">
		<anim name="e_so_push_button_table"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_push_button_wall" type="once" segment="base">
		<anim name="e_so_push_button_wall"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_repair" type="once" segment="base">
		<anim name="e_so_repair"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_shoo_away_mosquito" type="once" segment="base">
		<anim name="e_so_shoo_away_mosquito"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_to_point_at_enter" type="once" segment="base">
		<anim name="e_so_sit_to_point_at_enter"/>
		<exit name="std/stand/so/idle/e_so_sit_to_point_at_idle"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_to_point_at_exit" type="once" segment="base">
		<anim name="e_so_sit_to_point_at_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_to_point_at_idle" type="once" segment="base">
		<anim name="e_so_sit_to_point_at_idle"/>
		<exit name="std/stand/so/idle/e_so_sit_to_point_at_exit"/>
	</state>

	<state name="std/stand/so/idle/e_so_stretch_arms" type="once" segment="base">
		<anim name="e_so_stretch_arms"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_stretch_legs" type="once" segment="base">
		<anim name="e_so_stretch_legs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_swat_mosquito" type="once" segment="base">
		<anim name="e_so_swat_mosquito"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_yawn" type="once" segment="base">
		<anim name="e_so_yawn"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_yawn_var1" type="once" segment="base">
		<anim name="e_so_yawn_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_cover_var2" type="loop" segment="base">
		<anim name="e_so_cover_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_door_tackle" type="once" segment="base">
		<anim name="e_so_door_tackle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_hurt_stairs" type="once" segment="base">
		<anim name="e_so_hurt_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_death_stairs" type="once" segment="base">
		<anim name="e_so_death_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_pushups_exit" type="once" segment="base">
		<anim name="e_so_pushups_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
		
	<state name="std/stand/so/idle/e_so_situps_exit" type="once" segment="base">
		<anim name="e_so_situps_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_sit_on_object_idle" type="loop" segment="base">
		<anim name="e_so_ntl_sit_on_object_idle"/>
		<exit name="std/stand/so/idle/e_so_ntl_sit_on_object_idle_exit"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_sit_on_object_idle_exit" type="once" segment="base">
		<anim name="e_so_ntl_sit_on_object_idle_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_sit_ground_lean_back" type="loop" segment="base">
		<anim name="e_so_ntl_sit_ground_lean_back"/>
		<exit name="std/stand/so/idle/e_so_ntl_sit_ground_lean_back_exit"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_sit_ground_lean_back_exit" type="once" segment="base">
		<anim name="e_so_ntl_sit_ground_lean_back_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_rest" type="loop" segment="base">
		<anim name="e_so_ntl_rest"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="hun_npc_anim_snoar_loop"/>
			
 		</keys>
		<exit name="std/stand/so/idle/e_so_ntl_rest_exit"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_rest_exit" type="once" segment="base">
		<anim name="e_so_ntl_rest_exit"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="hun_npc_anim_snoar_loop_stop"/>
			<key at="trigger" trigger="anim_act_03" callback="anim_clbk_play_sound" class_name="sound" param1="hun_npc_anim_wake_up"/>
 		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_ntl_pissing" type="once" segment="base">
		<anim name="e_so_ntl_pissing"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="hun_npc_anim_peeing"/>
			
 		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_foxhole_idle" type="loop" segment="base">
		<anim name="e_so_foxhole_idle"/>
		<exit name="std/stand/so/idle/e_so_foxhole_exit"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_foxhole_enter" type="once" segment="base">
		<anim name="e_so_foxhole_enter"/>
		<exit name="std/stand/so/idle/e_so_foxhole_idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_foxhole_exit" type="once" segment="base">
		<anim name="e_so_foxhole_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_boxing_exit" type="once" segment="base">
		<anim name="e_so_boxing_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_pushups" type="loop" segment="base">
		<anim name="e_so_pushups"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_situps" type="loop" segment="base">
		<anim name="e_so_situps"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_boxing" type="loop" segment="base">
		<anim name="e_so_boxing"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	
	
	<state name="std/stand/so/idle/e_so_cover" type="loop" segment="base">
		<anim name="e_so_cover"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_cover_exit" type="once" segment="base">
		<anim name="e_so_cover_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_cover_exit_var2" type="once" segment="base">
		<anim name="e_so_cover_exit_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_low_cover_var2" type="loop" segment="base">
		<anim name="e_so_low_cover_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_low_cover" type="loop" segment="base">
		<anim name="e_so_low_cover"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_low_cover_exit" type="once" segment="base">
		<anim name="e_so_low_cover_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_low_cover_exit_var2" type="once" segment="base">
		<anim name="e_so_low_cover_exit_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_armed_idle" type="loop" segment="base">
		<anim name="e_so_armed_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle" type="loop" segment="base">
		<anim name="e_so_unarmed_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_pull_lever_towards" type="once" segment="base">
		<anim name="e_so_pull_lever_towards"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_pull_lever_away" type="once" segment="base">
		<anim name="e_so_pull_lever_away"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_tank_hood_enter" type="once" segment="base">
		<anim name="e_so_sit_on_tank_hood_enter"/>
		<exit name="std/stand/so/idle/e_so_sit_on_tank_hood_idle"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_tank_hood_exit" type="once" segment="base">
		<anim name="e_so_sit_on_tank_hood_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_tank_hood_idle" type="once" segment="base">
		<anim name="e_so_sit_on_tank_hood_idle"/>
		<exit name="std/stand/so/idle/e_so_sit_on_tank_hood_exit"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_l" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_turn_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_loop_turn_r" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_loop_turn_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_lean_l" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_lean_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_smoke_lean_r" type="once" segment="base">
		<anim name="e_so_unarmed_smoke_lean_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_up_wall" type="once" segment="base">
		<anim name="e_so_look_up_wall"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_under_table" type="once" segment="base">
		<anim name="e_so_look_under_table"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_ledge_up" type="once" segment="base">
		<anim name="e_so_look_ledge_up"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner" type="once" segment="base">
		<anim name="e_so_look_corner"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_commander_chair_sit_enter" type="once" segment="base">
		<anim name="so_commander_chair_sit_enter"/>
		<exit name="std/stand/so/idle/so_commander_chair_sit_idle"/>
	</state>

	<state name="std/stand/so/idle/so_commander_chair_sit_idle" type="loop" segment="base">
		<anim name="so_commander_chair_sit_idle"/>
		<exit name="std/stand/so/idle/so_commander_chair_sit_exit"/>
	</state>

	<state name="std/stand/so/idle/so_commander_chair_sit_exit" type="once" segment="base">
		<anim name="so_commander_chair_sit_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_commander_sofa_sit_enter" type="once" segment="base">
		<anim name="so_commander_sofa_sit_enter"/>
		<exit name="std/stand/so/idle/so_commander_sofa_sit_idle"/>
	</state>

	<state name="std/stand/so/idle/so_commander_sofa_sit_idle" type="loop" segment="base">
		<anim name="so_commander_sofa_sit_idle"/>
		<exit name="std/stand/so/idle/so_commander_sofa_sit_exit"/>
	</state>

	<state name="std/stand/so/idle/so_commander_sofa_sit_exit" type="once" segment="base">
		<anim name="so_commander_sofa_sit_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_commander_couch_enter" type="once" segment="base">
		<anim name="so_commander_couch_enter"/>
		<exit name="std/stand/so/idle/so_commander_couch_idle"/>
	</state>

	<state name="std/stand/so/idle/so_commander_couch_idle" type="loop" segment="base">
		<anim name="so_commander_couch_idle"/>
		<exit name="std/stand/so/idle/so_commander_couch_exit"/>
	</state>

	<state name="std/stand/so/idle/so_commander_couch_exit" type="once" segment="base">
		<anim name="so_commander_couch_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_commander_look_table_enter" type="once" segment="base">
		<anim name="so_commander_look_table_enter"/>
		<exit name="std/stand/so/idle/so_commander_look_table_idle"/>
	</state>

	<state name="std/stand/so/idle/so_commander_look_table_idle" type="loop" segment="base">
		<anim name="so_commander_look_table_idle"/>
		<exit name="std/stand/so/idle/so_commander_look_table_exit"/>
	</state>

	<state name="std/stand/so/idle/so_commander_look_table_exit" type="once" segment="base">
		<anim name="so_commander_look_table_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_commander_look_idle" type="loop" segment="base">
		<anim name="so_commander_look_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_team_ai_stand_idle_look_around" type="once" segment="base">
		<anim name="so_team_ai_stand_idle_look_around"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_look_around"/>
	</state>
	<state name="std/stand/so/idle/so_team_ai_stand_look_around" type="once" segment="base">
		<anim name="so_team_ai_stand_look_around"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_idle_look_around"/>
	</state>

	<state name="std/stand/so/idle/so_team_ai_stand_idle_look_l_r" type="once" segment="base">
		<anim name="so_team_ai_stand_idle_look_l_r"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_look_l_r"/>
	</state>
	<state name="std/stand/so/idle/so_team_ai_stand_look_l_r" type="once" segment="base">
		<anim name="so_team_ai_stand_look_l_r"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_idle_look_l_r"/>
	</state>

	<state name="std/stand/so/idle/so_team_ai_stand_idle_look_l_r_var1" type="once" segment="base">
		<anim name="so_team_ai_stand_idle_look_l_r_var1"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_look_l_r_var1"/>
	</state>
	<state name="std/stand/so/idle/so_team_ai_stand_look_l_r_var1" type="once" segment="base">
		<anim name="so_team_ai_stand_look_l_r_var1"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_idle_look_l_r_var1"/>
	</state>

	<state name="std/stand/so/idle/so_team_ai_stand_idle_stretch_arms" type="once" segment="base">
		<anim name="so_team_ai_stand_idle_stretch_arms"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_stretch_arms"/>
	</state>
	<state name="std/stand/so/idle/so_team_ai_stand_stretch_arms" type="once" segment="base">
		<anim name="so_team_ai_stand_stretch_arms"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_idle_stretch_arms"/>
	</state>

	<state name="std/stand/so/idle/so_team_ai_stand_idle_scratch_head" type="once" segment="base">
		<anim name="so_team_ai_stand_idle_scratch_head"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_scratch_head"/>
	</state>
	<state name="std/stand/so/idle/so_team_ai_stand_scratch_head" type="once" segment="base">
		<anim name="so_team_ai_stand_scratch_head"/>
		<exit name="std/stand/so/idle/so_team_ai_stand_idle_scratch_head"/>
	</state>

	<state name="std/stand/so/idle/e_nl_cbt_crh_blind_shot_r" type="once" segment="base">
		<anim name="e_nl_cbt_crh_blind_shot_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_nl_cbt_crh_blind_shot_l" type="once" segment="base">
		<anim name="e_nl_cbt_crh_blind_shot_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_nl_cbt_crh_blind_shot_top_r" type="once" segment="base">
		<anim name="e_nl_cbt_crh_blind_shot_top_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_nl_cbt_crh_blind_shot_top_l" type="once" segment="base">
		<anim name="e_nl_cbt_crh_blind_shot_top_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_nl_cbt_std_blind_shot_r" type="once" segment="base">
		<anim name="e_nl_cbt_std_blind_shot_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_nl_cbt_std_blind_shot_l" type="once" segment="base">
		<anim name="e_nl_cbt_std_blind_shot_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_shout_orders_l_arm_var1" type="once" segment="base">
		<anim name="e_so_shout_orders_l_arm_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_so_shout_orders_l_arm_var2" type="once" segment="base">
		<anim name="e_so_shout_orders_l_arm_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_yell_alarm_var1" type="once" segment="base">
		<anim name="e_so_yell_alarm_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_so_yell_alarm_var2" type="once" segment="base">
		<anim name="e_so_yell_alarm_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	<state name="std/stand/so/idle/e_so_yell_alarm_var3" type="once" segment="base">
		<anim name="e_so_yell_alarm_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_valve_turn" type="once" segment="base">
		<anim name="e_so_valve_turn"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_fall_out_of_bunker_fire_dth_var1" type="once" segment="base">
		<anim name="e_so_fall_out_of_bunker_fire_dth_var1"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_fall_out_of_bunker_fire_dth_var2" type="once" segment="base">
		<anim name="e_so_fall_out_of_bunker_fire_dth_var2"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_run_fwd_on_fire_die_var2" type="once" segment="base">
		<anim name="e_so_run_fwd_on_fire_die_var2"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_fall_out_of_zepelin_fire_dth_var1" type="once" segment="base">
		<anim name="e_so_fall_out_of_zepelin_fire_dth_var1"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_fall_out_of_zepelin_fire_dth_var2" type="once" segment="base">
		<anim name="e_so_fall_out_of_zepelin_fire_dth_var2"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_run_fwd_on_fire_die_var1" type="once" segment="base">
		<anim name="e_so_run_fwd_on_fire_die_var1"/>
		<keys>
			
			<key at="trigger" trigger="death_scream_3s_ph" callback="anim_clbk_play_sound" class_name="sound" param1="death_scream_3s_ph"/>
			
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_actionjump_2m_fwd_1m_up" type="once" segment="base">
		<anim name="e_nl_actionjump_2m_fwd_1m_up"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_actionjump_2m_fwd_1m_down" type="once" segment="base">
		<anim name="e_nl_actionjump_2m_fwd_1m_down"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_jump_over_4m" type="once" segment="base">
		<anim name="e_nl_jump_over_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_flak_bunker_fwd_2m_down_6m" type="once" segment="base">
		<anim name="e_nl_flak_bunker_fwd_2m_down_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_train_wagon_var3" type="loop" segment="base">
		<anim name="so_train_wagon_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_train_wagon_var4" type="loop" segment="base">
		<anim name="so_train_wagon_var4"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/spotter_cbt_sup_throw_flare" type="once" segment="base">
		<anim name="spotter_cbt_sup_throw_flare"/>
		<exit name="std/stand/still/idle/look"/>
		<keys>
			<key at="trigger" trigger="spawn_flare" callback="anim_clbk_throw_flare" class_name="brain"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_wave_camera" type="once" segment="base">
		<anim name="e_so_unarmed_wave_camera"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_truck_bumper_enter" type="once" segment="base">
		<anim name="e_so_sit_truck_bumper_enter"/>
		<exit name="std/stand/so/idle/e_so_sit_truck_bumper_loop"/> 
	</state>

	<state name="std/stand/so/idle/e_so_sit_truck_bumper_loop" type="once" segment="base">
		<anim name="e_so_sit_truck_bumper_loop"/>
		<exit name="std/stand/so/idle/e_so_sit_truck_bumper_loop" weight="4"/>
		<exit name="std/stand/so/idle/e_so_sit_truck_bumper_exit" weight="2"/>  
	</state>

	<state name="std/stand/so/idle/e_so_sit_truck_bumper_exit" type="once" segment="base">
		<anim name="e_so_sit_truck_bumper_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_leg_on_sandbags_enter" type="once" segment="base">
		<anim name="e_so_leg_on_sandbags_enter"/>
		<exit name="std/stand/so/idle/e_so_leg_on_sandbags_loop"/> 
	</state>

	<state name="std/stand/so/idle/e_so_leg_on_sandbags_loop" type="once" segment="base">
		<anim name="e_so_leg_on_sandbags_loop"/>
		<exit name="std/stand/so/idle/e_so_leg_on_sandbags_loop" weight="4"/>
		<exit name="std/stand/so/idle/e_so_leg_on_sandbags_exit" weight="2"/>  
	</state>

	<state name="std/stand/so/idle/e_so_leg_on_sandbags_exit" type="once" segment="base">
		<anim name="e_so_leg_on_sandbags_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_lean_on_crate_enter" type="once" segment="base">
		<anim name="e_so_lean_on_crate_enter"/>
		<exit name="std/stand/so/idle/e_so_lean_on_crate_loop"/>
	</state>

	<state name="std/stand/so/idle/e_so_lean_on_crate_loop" type="once" segment="base">
		<anim name="e_so_lean_on_crate_loop"/>
		<exit name="std/stand/so/idle/e_so_lean_on_crate_loop" weight="4"/>
		<exit name="std/stand/so/idle/e_so_lean_on_crate_exit" weight="2"/>  
	</state>

	<state name="std/stand/so/idle/e_so_lean_on_crate_exit" type="once" segment="base">
		<anim name="e_so_lean_on_crate_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_arm_lean_enter" type="once" segment="base">
		<anim name="e_so_arm_lean_enter"/>
		<exit name="std/stand/so/idle/e_so_arm_lean_loop"/>
	</state>

	<state name="std/stand/so/idle/e_so_arm_lean_loop" type="once" segment="base">
		<anim name="e_so_arm_lean_loop"/>
		<exit name="std/stand/so/idle/e_so_arm_lean_loop" weight="4"/>
		<exit name="std/stand/so/idle/e_so_arm_lean_exit" weight="2"/>
	</state>

	<state name="std/stand/so/idle/e_so_arm_lean_exit" type="once" segment="base">
		<anim name="e_so_arm_lean_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_barrel_enter" type="once" segment="base">
		<anim name="e_so_sit_on_barrel_enter"/>
		<exit name="std/stand/so/idle/e_so_sit_on_barrel_loop"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_barrel_loop" type="once" segment="base">
		<anim name="e_so_sit_on_barrel_loop"/>
		<exit name="std/stand/so/idle/e_so_sit_on_barrel_loop" weight="4"/>
		<exit name="std/stand/so/idle/e_so_sit_on_barrel_exit" weight="2"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_barrel_exit" type="once" segment="base">
		<anim name="e_so_sit_on_barrel_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/so/idle/e_so_unarmed_idle_enter_corner" type="once" segment="base">
		<anim name="e_so_unarmed_idle_enter_corner"/>
		<exit name="std/stand/so/idle/e_so_look_corner_unarmed_left" weight="4"/>
		<exit name="std/stand/so/idle/e_so_look_corner_var2_unarmed_right" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="1"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner_unarmed_left" type="once" segment="base">
		<anim name="e_so_look_corner_unarmed"/>
		<exit name="std/stand/so/idle/e_so_look_corner_unarmed_left" weight="3"/>
		<exit name="std/stand/so/idle/e_so_look_corner_var2_unarmed_right" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner_var2_unarmed_right" type="once" segment="base">
		<anim name="e_so_look_corner_var2_unarmed"/>
		<exit name="std/stand/so/idle/e_so_look_corner_unarmed_left" weight="4"/>
		<exit name="std/stand/so/idle/e_so_look_corner_var2_unarmed_right" weight="3"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/crazy_russian_idle" type="once" segment="base">
		<anim name="crazy_russian_idle"/>
		<exit name="std/stand/so/idle/crazy_russian_arm_wave" weight="4"/>
		<exit name="std/stand/so/idle/crazy_russian_arm_hit" weight="2"/>
	</state>

	<state name="std/stand/so/idle/crazy_russian_arm_wave" type="once" segment="base">
		<anim name="crazy_russian_arm_wave"/>
		<exit name="std/stand/so/idle/crazy_russian_idle" weight="2"/>
		<exit name="std/stand/so/idle/crazy_russian_arm_hit" weight="3"/>
	</state>

	<state name="std/stand/so/idle/crazy_russian_arm_hit" type="once" segment="base">
		<anim name="crazy_russian_arm_hit"/>
		<exit name="std/stand/so/idle/crazy_russian_idle" weight="2"/>
		<exit name="std/stand/so/idle/crazy_russian_arm_wave" weight="4"/>
	</state>

	<state name="std/stand/so/idle/scared_russian_idle" type="once" segment="base">
		<anim name="scared_russian_idle"/>
		<exit name="std/stand/so/idle/scared_russian_look_r_corner" weight="0"/>
		<exit name="std/stand/so/idle/scared_russian_puke" weight="1"/>
		<exit name="std/stand/so/idle/scared_russian_look_l_corner" weight="0"/>
	</state>

	<state name="std/stand/so/idle/scared_russian_look_r_corner" type="once" segment="base">
		<anim name="scared_russian_look_r_corner"/>
		<exit name="std/stand/so/idle/scared_russian_idle" weight="3"/>
		<exit name="std/stand/so/idle/scared_russian_puke" weight="1"/>
		<exit name="std/stand/so/idle/scared_russian_look_l_corner" weight="5"/>
	</state>

	<state name="std/stand/so/idle/scared_russian_puke" type="loop" segment="base">
		<anim name="scared_russian_puke"/>
		<exit name="std/stand/so/idle/scared_russian_idle" weight="0"/>
		<exit name="std/stand/so/idle/scared_russian_look_r_corner" weight="0"/>
		<exit name="std/stand/so/idle/scared_russian_look_l_corner" weight="0"/>
	</state>

	<state name="std/stand/so/idle/scared_russian_look_l_corner" type="once" segment="base">
		<anim name="scared_russian_look_l_corner"/>
		<exit name="std/stand/so/idle/scared_russian_idle" weight="1"/>
		<exit name="std/stand/so/idle/scared_russian_look_r_corner" weight="0"/>
		<exit name="std/stand/so/idle/scared_russian_puke" weight="0"/>
	</state>

	<state name="std/stand/so/idle/aggressive_russian_punching_idle" type="once" segment="base">
		<anim name="aggressive_russian_punching_idle"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching_idle" weight="1"/>
		<exit name="std/stand/so/idle/aggressive_russian_punch_table" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_patrol_left_right" weight="2"/>
	</state>

	<state name="std/stand/so/idle/aggressive_russian_punch_table" type="once" segment="base">
		<anim name="aggressive_russian_punch_table"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching_idle" weight="2"/>
		<exit name="std/stand/so/idle/aggressive_russian_punch_table" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_patrol_left_right" weight="2"/>
	</state>

	<state name="std/stand/so/idle/aggressive_russian_punching" type="once" segment="base">
		<anim name="aggressive_russian_punching"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching_idle" weight="1"/>
		<exit name="std/stand/so/idle/aggressive_russian_punch_table" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching" weight="2"/>
		<exit name="std/stand/so/idle/aggressive_russian_patrol_left_right" weight="2"/>
	</state>

	<state name="std/stand/so/idle/aggressive_russian_patrol_left_right" type="once" segment="base">
		<anim name="aggressive_russian_patrol_left_right"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching_idle" weight="1"/>
		<exit name="std/stand/so/idle/aggressive_russian_punch_table" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_punching" weight="4"/>
		<exit name="std/stand/so/idle/aggressive_russian_patrol_left_right" weight="2"/>
	</state>

	<state name="std/stand/so/idle/beaten_calm_russian" type="loop" segment="base">
		<anim name="beaten_calm_russian"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/drugged_dying_russian" type="loop" segment="base">
		<anim name="drugged_dying_russian"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_enter" type="once" segment="base">
		<anim name="e_so_unarmed_idle_enter"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="1"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_tired" type="once" segment="base">
		<anim name="e_so_unarmed_idle_tired"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_stickygum" type="once" segment="base">
		<anim name="e_so_unarmed_idle_stickygum"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_look2" type="once" segment="base">
		<anim name="e_so_unarmed_idle_look2"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_look" type="once" segment="base">
		<anim name="e_so_unarmed_idle_look"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" type="once" segment="base">
		<anim name="e_so_unarmed_idle_kickpebble"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_clock" type="once" segment="base">
		<anim name="e_so_unarmed_idle_clock"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_brush" type="once" segment="base">
		<anim name="e_so_unarmed_idle_brush"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="1"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_adjust_collar" type="once" segment="base">
		<anim name="e_so_adjust_collar"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="1"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_adjust_sleves" type="once" segment="base">
		<anim name="e_so_adjust_sleves"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="1"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" type="once" segment="base">
		<anim name="e_so_idle_std_to_crh_idle_crh_to_std_idle"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_tired" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_stickygum" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look2" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_brush" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_collar" weight="4"/>
		<exit name="std/stand/so/idle/e_so_adjust_sleves" weight="4"/>
		<exit name="std/stand/so/idle/e_so_idle_std_to_crh_idle_crh_to_std_idle" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_idle_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_idle_exit" type="once" segment="base">
		<anim name="e_so_unarmed_idle_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_enter" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_enter"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_exit" weight="1"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_loop_look"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_loop_kickpebble"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_loop_fingers"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_loop_clock"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_look" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_kickpebble" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_fingers" weight="4"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_loop_clock" weight="1"/>
		<exit name="std/stand/so/idle/e_so_unarmed_leanwall_exit" weight="4"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_leanwall_exit" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/so/idle/ntl_std_idle_var1" type="loop" segment="base">
		<anim name="ntl_std_idle_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/husk_hos_std_idle" type="loop" segment="base">
		<anim name="husk_hos_std_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_v01" type="loop" segment="base">
		<anim name="e_so_idle_v01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_v02" type="loop" segment="base">
		<anim name="e_so_idle_v02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/husk_hos_std_idle_rifle" type="loop" segment="base">
		<anim name="husk_hos_std_idle_rifle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/husk_lvl_start_std_idle" type="loop" segment="base">
		<anim name="husk_lvl_start_std_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/husk_lvl_start_crh_idle" type="loop" segment="base">
		<anim name="husk_lvl_start_crh_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_inspect_armory" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_inspect_armory"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->

		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_inspect_piano" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_inspect_piano"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_look_at_maps" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_look_at_maps"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_look_at_statue" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_look_at_statue"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_sit_idle_get_up" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_sit_idle_get_up"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_sit_lean_on_crate_get_up" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_sit_lean_on_crate_get_up"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_small_table_sit" type="once" segment="base">
		<default blend="10" />
		<anim name="so_camp_small_table_sit"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_small_table_sit_spy" type="loop" segment="base">
		<default blend="10" />
		<anim name="so_camp_small_table_sit_spy"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_spy_idle" type="loop" segment="base">
		<default blend="10" />
		<anim name="so_spy_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_camp_use_radio" type="once" segment="base">
		<anim name="so_camp_use_radio"/>

		<!-- <keys>
		<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="footstep_land"/>
		</keys> -->
		
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_punching_idle" type="once" segment="base">
		<anim name="e_so_punching_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_l_hand_punch" type="once" segment="base">
		<anim name="e_so_l_hand_punch"/>
		<keys>
			<key at="trigger" trigger="franz_punch" callback="anim_clbk_play_sound" class_name="sound" param1="franz_punch"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_r_hand_punch" type="once" segment="base">
		<anim name="e_so_r_hand_punch"/>
		<keys>
			<key at="trigger" trigger="franz_punch" callback="anim_clbk_play_sound" class_name="sound" param1="franz_punch"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_run_to_radio_tower" type="once" segment="base">
		<anim name="so_run_to_radio_tower"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_chair_sitting_hands_tied_to_stand_idle" type="once" segment="base">
		<anim name="so_chair_sitting_hands_tied_to_stand_idle"/>
		<exit name="std/stand/so/idle/so_chair_stand_idle"/>
	</state>

	<state name="std/stand/so/idle/so_chair_stand_idle" type="loop" segment="base">
		<anim name="so_chair_stand_idle"/>
	</state>

	<state name="std/stand/so/idle/so_chair_sitting_hands_tied" type="once" segment="base">
		<anim name="so_chair_sitting_hands_tied"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_chair_sitting_punched_l" type="once" segment="base">
		<anim name="so_chair_sitting_punched_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_chair_sitting_punched_r" type="once" segment="base">
		<anim name="so_chair_sitting_punched_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_climbing_rope" type="once" segment="base">
		<anim name="e_so_climbing_rope"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_climbing_rope_var1" type="once" segment="base">
		<anim name="e_so_climbing_rope_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_plant_dynamite_low" type="once" segment="base">
		<anim name="e_so_plant_dynamite_low"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_plant_dynamite_hi" type="once" segment="base">
		<anim name="e_so_plant_dynamite_hi"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_plant_dynamite_floor" type="once" segment="base">
		<anim name="e_so_plant_dynamite_floor"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_climb_over_rocks_dwn_2_5m" type="once" segment="base">
		<anim name="e_nl_climb_over_rocks_dwn_2_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_over_rubble_to_inside" type="once" segment="base">
		<anim name="e_nl_over_rubble_to_inside"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_over_rubble_to_outside" type="once" segment="base">
		<anim name="e_nl_over_rubble_to_outside"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_down_4_3m" type="once" segment="base">
		<anim name="e_nl_down_4_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_4_3m" type="once" segment="base">
		<anim name="e_nl_up_4_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_radio_tower_idle" type="once" segment="base">
		<anim name="so_radio_tower_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_run_to_hide" type="once" segment="base">
		<anim name="so_run_to_hide"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_hide_idle" type="once" segment="base">
		<anim name="so_hide_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_radio_tower_escape" type="once" segment="base">
		<anim name="so_radio_tower_escape"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/so_radio_tower_escape_idle" type="once" segment="base">
		<anim name="so_radio_tower_escape_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_radio_tower_fall" type="once" segment="base">
		<anim name="e_nl_radio_tower_fall"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_climb_down_tiger_tank" type="once" segment="base">
		<anim name="e_so_climb_down_tiger_tank"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_climb_up_tiger_tank" type="once" segment="base">
		<anim name="e_so_climb_up_tiger_tank"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_startled_while_eating_snack" type="loop" segment="base">
		<anim name="e_so_startled_while_eating_snack"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_idle_walk_in_place_worried" type="loop" segment="base">
		<anim name="e_so_idle_walk_in_place_worried"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_idle_walk_in_place_startled_rifle" type="loop" segment="base">
		<anim name="e_so_idle_walk_in_place_startled_rifle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_idle_walk_inplace_look_back_rifle" type="loop" segment="base">
		<anim name="e_so_idle_walk_inplace_look_back_rifle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_idle_walk_around_rifle" type="loop" segment="base">
		<anim name="e_so_idle_walk_around_rifle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_idle_look_around_startled_rifle" type="loop" segment="base">
		<anim name="e_so_idle_look_around_startled_rifle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_3m_fwd_2m_dwn" type="once" segment="base">
		<anim name="e_nl_3m_fwd_2m_dwn"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_3m_up_2m" type="once" segment="base">
		<anim name="e_nl_3m_up_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_crawl_4m" type="once" segment="base">
		<anim name="e_nl_crawl_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_dwn_6m" type="once" segment="base">
		<anim name="e_nl_dwn_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_down_7_5m" type="once" segment="base">
		<anim name="e_nl_ladder_down_7_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_down_9_7m" type="once" segment="base">
		<anim name="e_nl_ladder_down_9_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_4m" type="once" segment="base">
		<anim name="e_nl_ladder_up_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_5m_down_1m" type="once" segment="base">
		<anim name="e_nl_ladder_up_5m_down_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_7_5m" type="once" segment="base">
		<anim name="e_nl_ladder_up_7_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_9_7m" type="once" segment="base">
		<anim name="e_nl_ladder_up_9_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_up_2m" type="once" segment="base">
		<anim name="e_nl_up_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_up_13_7m" type="once" segment="base">
		<anim name="e_nl_ladder_up_13_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	
	<state name="std/stand/so/idle/e_nl_ladder_down_13_7m" type="once" segment="base">
		<anim name="e_nl_ladder_down_13_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_14_5m" type="once" segment="base">
		<anim name="e_nl_ladder_up_14_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_slide_cover_3m" type="once" segment="base">
		<anim name="e_so_slide_cover_3m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_jump_over_cover" type="once" segment="base">
		<anim name="e_so_jump_over_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_jump_over_cover_var2" type="once" segment="base">
		<anim name="e_so_jump_over_cover_var2"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_between_door_cover_3m" type="once" segment="base">
		<anim name="e_so_between_door_cover_3m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_between_single_door_cover" type="once" segment="base">
		<anim name="e_so_between_single_door_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_slide_cover_4m" type="once" segment="base">
		<anim name="e_so_slide_cover_4m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_slide_cover_5m" type="once" segment="base">
		<anim name="e_so_slide_cover_5m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_cover_3m" type="once" segment="base">
		<anim name="e_so_run_cover_3m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_cover_4m" type="once" segment="base">
		<anim name="e_so_run_cover_4m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_cover_5m" type="once" segment="base">
		<anim name="e_so_run_cover_5m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_cover_3m" type="once" segment="base">
		<anim name="e_so_roll_cover_3m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_cover_4m" type="once" segment="base">
		<anim name="e_so_roll_cover_4m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_cover_5m" type="once" segment="base">
		<anim name="e_so_roll_cover_5m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_crawl_cover_3m" type="once" segment="base">
		<anim name="e_so_crawl_cover_3m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_crawl_cover_4m" type="once" segment="base">
		<anim name="e_so_crawl_cover_4m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_crawl_cover_5m" type="once" segment="base">
		<anim name="e_so_crawl_cover_5m"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_crawl_to_cover" type="once" segment="base">
		<anim name="e_so_crawl_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_chr_walk_to_cover" type="once" segment="base">
		<anim name="e_so_chr_walk_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_to_cover_var3" type="once" segment="base">
		<anim name="e_so_roll_to_cover_var3"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_to_cover_var2" type="once" segment="base">
		<anim name="e_so_roll_to_cover_var2"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_roll_to_cover" type="once" segment="base">
		<anim name="e_so_roll_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_to_cover_var3" type="once" segment="base">
		<anim name="e_so_run_to_cover_var3"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_to_cover_var2" type="once" segment="base">
		<anim name="e_so_run_to_cover_var2"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_run_to_cover" type="once" segment="base">
		<anim name="e_so_run_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_slide_to_cover_var3" type="once" segment="base">
		<anim name="e_so_slide_to_cover_var3"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_slide_to_cover_var2" type="once" segment="base">
		<anim name="e_so_slide_to_cover_var2"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_slide_to_cover" type="once" segment="base">
		<anim name="e_so_slide_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_dive_to_cover_var3" type="once" segment="base">
		<anim name="e_so_dive_to_cover_var3"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_dive_to_cover_var2" type="once" segment="base">
		<anim name="e_so_dive_to_cover_var2"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_dive_to_cover" type="once" segment="base">
		<anim name="e_so_dive_to_cover"/>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_barbwires_jump_var2" type="once" segment="base">
		<anim name="e_nl_barbwires_jump_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_slope_var1" type="once" segment="base">
		<anim name="e_nl_slide_down_slope_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_slope_var2" type="once" segment="base">
		<anim name="e_nl_slide_down_slope_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_slope_var3" type="once" segment="base">
		<anim name="e_nl_slide_down_slope_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_low_slope_var1" type="once" segment="base">
		<anim name="e_nl_slide_down_low_slope_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_low_slope_var2" type="once" segment="base">
		<anim name="e_nl_slide_down_low_slope_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_slide_down_low_slope_var3" type="once" segment="base">
		<anim name="e_nl_slide_down_low_slope_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_barbwires_jump_var1" type="once" segment="base">
		<anim name="e_nl_barbwires_jump_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_down_14_5m" type="once" segment="base">
		<anim name="e_nl_ladder_down_14_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_up_5_5m_climb_arc" type="once" segment="base">
		<anim name="e_nl_up_5_5m_climb_arc"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_down_5_5m_climb_arc" type="once" segment="base">
		<anim name="e_nl_down_5_5m_climb_arc"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_over_vault_1_1m" type="once" segment="base">
		<anim name="e_nl_over_vault_1_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_jump_2_25m" type="once" segment="base">
		<anim name="e_nl_down_jump_2_25m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	
	<state name="std/stand/so/idle/e_nl_over_0_75_down_4m" type="once" segment="base">
		<anim name="e_nl_over_0_75_down_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_over_1m_down_3_3m" type="once" segment="base">
		<anim name="e_nl_over_1m_down_3_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_0_75m_down_1_75m" type="once" segment="base">
		<anim name="e_nl_up_0_75m_down_1_75m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_climb_over_4m" type="once" segment="base">
		<anim name="e_nl_climb_over_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_5m_1m_down_left_stairs" type="once" segment="base">
		<anim name="e_nl_up_5m_1m_down_left_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_5m_1m_down_right_stairs" type="once" segment="base">
		<anim name="e_nl_up_5m_1m_down_right_stairs"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_4_4m_down_0_5m" type="once" segment="base">
		<anim name="e_nl_up_4_4m_down_0_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_4_3m_down_1m_var2" type="once" segment="base">
		<anim name="e_nl_up_4_3m_down_1m_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_4_3m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_4_3m_down_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_3_down_0_5m" type="once" segment="base">
		<anim name="e_nl_up_3_down_0_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_over_1m_down_8m" type="once" segment="base">
		<anim name="e_nl_over_1m_down_8m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_cs_up_front_ladder_down_loop_and_exit_var2" type="once" segment="base">
		<anim name="e_nl_cs_up_front_ladder_down_loop_and_exit_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_cs_up_front_ladder_down_loop_and_exit_var1" type="once" segment="base">
		<anim name="e_nl_cs_up_front_ladder_down_loop_and_exit_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_4m_long_2m_down" type="once" segment="base">
		<anim name="e_nl_4m_long_2m_down"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_over_1m_down_11_5m" type="once" segment="base">
		<anim name="e_nl_over_1m_down_11_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_runjump_far_var1" type="once" segment="base">
		<anim name="e_nl_runjump_far_var1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_runjump_far_var2" type="once" segment="base">
		<anim name="e_nl_runjump_far_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_runjump_far_var3" type="once" segment="base">
		<anim name="e_nl_runjump_far_var3"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_slide_4m_down_2m" type="once" segment="base">
		<anim name="e_nl_slide_4m_down_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_5m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_1_5m_down_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_5m_down_0_8m" type="once" segment="base">
		<anim name="e_nl_up_1_5m_down_0_8m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_down_4_3m" type="once" segment="base">
		<anim name="e_nl_ladder_down_4_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_up_4_3m" type="once" segment="base">
		<anim name="e_nl_ladder_up_4_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_15m" type="once" segment="base">
		<anim name="e_nl_up_1_15m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_4m_jump" type="once" segment="base">
		<anim name="e_nl_up_1_down_4m_jump"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_ladder_4m_train_cabin" type="once" segment="base">
		<anim name="e_nl_up_ladder_4m_train_cabin"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_1_15m" type="once" segment="base">
		<anim name="e_nl_down_1_15m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_1_75m_trainyard" type="once" segment="base">
		<anim name="e_nl_down_1_75m_trainyard"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_jump_over_0_5m_train_cabin" type="once" segment="base">
		<anim name="e_nl_jump_over_0_5m_train_cabin"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_4m_jump_train_cabin" type="once" segment="base">
		<anim name="e_nl_down_4m_jump_train_cabin"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_ladder_3_7m" type="once" segment="base">
		<anim name="e_nl_up_ladder_3_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_dwn_7m" type="once" segment="base">
		<anim name="e_nl_dwn_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_3_3m" type="once" segment="base">
		<anim name="e_nl_up_1_down_3_3m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_5_5m" type="once" segment="base">
		<anim name="e_nl_up_1_down_5_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_down_3_7m" type="once" segment="base">
		<anim name="e_nl_ladder_down_3_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_4_6m" type="once" segment="base">
		<anim name="e_nl_up_1_down_4_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_4_2m" type="once" segment="base">
		<anim name="e_nl_up_1_down_4_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_5_6m" type="once" segment="base">
		<anim name="e_nl_up_1_down_5_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_down_3_6m" type="once" segment="base">
		<anim name="e_nl_up_1_down_3_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_1_85m" type="once" segment="base">
		<anim name="e_nl_down_1_85m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_2_25m" type="once" segment="base">
		<anim name="e_nl_down_2_25m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_4_25m_down_1m" type="once" segment="base">
		<anim name="e_nl_up_4_25m_down_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_0_6_down_4_6m" type="once" segment="base">
		<anim name="e_nl_up_0_6_down_4_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_0_75_down_3_6m" type="once" segment="base">
		<anim name="e_nl_up_0_75_down_3_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_0_75_down_5_6m" type="once" segment="base">
		<anim name="e_nl_up_0_75_down_5_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1m_fwd_3_5m_dwn_4m" type="once" segment="base">
		<anim name="e_nl_up_1m_fwd_3_5m_dwn_4m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_ladder_down_8m" type="once" segment="base">
		<anim name="e_nl_ladder_down_8m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_climb_over_2_30m" type="once" segment="base">
		<anim name="e_nl_climb_over_2_30m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_1_35m_down_1_35m" type="once" segment="base">
		<anim name="e_nl_up_1_35m_down_1_35m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/nl_train_start_01" type="once" segment="base">
		<anim name="nl_train_start_01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/nl_train_start_02" type="once" segment="base">
		<anim name="nl_train_start_02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/nl_train_start_03" type="once" segment="base">
		<anim name="nl_train_start_03"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_30m" type="once" segment="base">
		<anim name="e_nl_30m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_down_0_75" type="once" segment="base">
		<anim name="e_nl_down_0_75"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_2_5m_down_2_5m" type="once" segment="base">
		<anim name="e_nl_up_2_5m_down_2_5m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_climb_over_3_15m" type="once" segment="base">
		<anim name="e_nl_climb_over_3_15m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_up_2m_down_2m" type="once" segment="base">
		<anim name="e_nl_up_2m_down_2m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_climb_over_3_75m" type="once" segment="base">
		<anim name="e_nl_climb_over_3_75m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_nl_over_1m_down_6m" type="once" segment="base">
		<anim name="e_nl_over_1m_down_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_down_jump_1_8m" type="once" segment="base">
		<anim name="e_nl_down_jump_1_8m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_over_0_75_down_3_7m" type="once" segment="base">
		<anim name="e_nl_over_0_75_down_3_7m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_over_0_75_down_4_6m" type="once" segment="base">
		<anim name="e_nl_over_0_75_down_4_6m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_nl_ladder_up_4m_fwd_1m" type="once" segment="base">
		<anim name="e_nl_ladder_up_4m_fwd_1m"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	

	<!-- RAID END -->

	<state name="std/stand/so/idle/e_so_ntl_vendingmachine" type="once" segment="base">
		<anim name="e_so_ntl_vendingmachine"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_barn_door_open_r" type="once" segment="base">
		<anim name="e_so_barn_door_open_r"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_barn_door_open_l" type="once" segment="base">
		<anim name="e_so_barn_door_open_l"/>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_unarmed_shake_fence" type="once" segment="base">
		<anim name="e_so_unarmed_shake_fence"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_unarmed_scrape_foot_truck" type="once" segment="base">
		<anim name="e_so_unarmed_scrape_foot_truck"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/sick_puke_sink" type="template_state" segment="upper_body">
		<to name="exit" redirect="std/stand/so/idle/sick_puke_sink_exit"/>
		<to name="idle" redirect="std/stand/still/idle/look"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/sick_puke_sink/enter" type="once" segment="base">
		<anim name="e_so_unarmed_sick_puke_sink_enter"/>
		<exit name="std/stand/so/idle/sick_puke_sink/loop/default"/>
	</state>

	<state name="std/stand/so/idle/sick_puke_sink/loop/default" type="loop" segment="base">
		<anim name="e_so_unarmed_sick_puke_sink"/>
	</state>

	<state name="std/stand/so/idle/sick_puke_sink_exit" type="once" segment="base">
		<anim name="e_so_unarmed_sick_puke_sink_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_r" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/talking_in_megaphone" type="template_state" segment="upper_body">
		<to name="exit" redirect="std/stand/so/idle/talking_in_megaphone_exit"/>
		<to name="idle" redirect="std/stand/still/idle/look"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/talking_in_megaphone/enter" type="once" segment="base">
		<anim name="e_so_talking_in_megaphone_enter"/>
		<exit name="std/stand/so/idle/talking_in_megaphone/loop/default"/>
	</state>

	<state name="std/stand/so/idle/talking_in_megaphone/loop/default" type="loop" segment="base">
		<anim name="e_so_talking_in_megaphone"/>
	</state>

	<state name="std/stand/so/idle/talking_in_megaphone_exit" type="once" segment="base">
		<anim name="e_so_talking_in_megaphone_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_r" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_kickpebble" type="once" segment="base">
		<anim name="e_so_ntl_idle_kickpebble"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_look" type="once" segment="base">
		<anim name="e_so_ntl_idle_look"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_walk_investigate" type="once" segment="base">
		<anim name="e_so_walk_investigate"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_walk_investigate_unarmed" type="once" segment="base">
		<anim name="e_so_walk_investigate_unarmed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_investigate_window" type="once" segment="base">
		<anim name="e_so_investigate_window"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_investigate_window_unarmed" type="once" segment="base">
		<anim name="e_so_investigate_window_unarmed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_ledge_down_var2" type="once" segment="base">
		<anim name="e_so_look_ledge_down_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner_var2" type="once" segment="base">
		<anim name="e_so_look_corner_var2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_look_corner_var2_unarmed" type="once" segment="base">
		<anim name="e_so_look_corner_var2_unarmed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_investigate_object_unarmed" type="once" segment="base">
		<anim name="e_so_investigate_object_unarmed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_investigate_object_armed" type="once" segment="base">
		<anim name="e_so_investigate_object_armed"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_look2" type="once" segment="base">
		<anim name="e_so_ntl_idle_look2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_clock" type="once" segment="base">
		<anim name="e_so_ntl_idle_clock"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_brush" type="once" segment="base">
		<anim name="e_so_ntl_idle_brush"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_stickygum" type="once" segment="base">
		<anim name="e_so_ntl_idle_stickygum"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/idle_backoff" type="once" segment="base">
		<anim name="e_so_ntl_idle_backoff"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/piss" type="once" segment="base">
		<anim name="e_so_ntl_piss"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/wave_camera" type="once" segment="base">
		<anim name="e_so_ntl_wave_camera"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/investigate_truck" type="once" segment="base">
		<anim name="e_so_investigate_truck"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/investigate_truck_slope" type="once" segment="base">
		<anim name="e_so_investigate_truck_slope"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/so/idle/lean_wall" type="template_state" segment="upper_body">
		<to name="exit" redirect="std/stand/so/idle/lean_wall_exit"/>
		<to name="idle" redirect="std/stand/still/idle/look"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/so/idle/lean_wall/loop/smoke/enter" weight="2"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/enter" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_enter"/>
		<exit name="std/stand/so/idle/lean_wall/loop/look" weight="4"/>
		<exit name="std/stand/so/idle/lean_wall/loop/kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/clock" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/fingers" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/look" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_loop_look"/>
		<exit name="std/stand/so/idle/lean_wall/loop/look" weight="4"/>
		<exit name="std/stand/so/idle/lean_wall/loop/kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/clock" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/fingers" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/kickpebble" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_loop_kickpebble"/>
		<exit name="std/stand/so/idle/lean_wall/loop/look" weight="4"/>
		<exit name="std/stand/so/idle/lean_wall/loop/kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/clock" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/fingers" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/clock" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_loop_clock"/>
		<exit name="std/stand/so/idle/lean_wall/loop/look" weight="4"/>
		<exit name="std/stand/so/idle/lean_wall/loop/kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/clock" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/fingers" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/fingers" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_loop_fingers"/>
		<exit name="std/stand/so/idle/lean_wall/loop/look" weight="4"/>
		<exit name="std/stand/so/idle/lean_wall/loop/kickpebble" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/clock" weight="1"/>
		<exit name="std/stand/so/idle/lean_wall/loop/fingers" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/smoke" type="template_state" segment="base">
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_r" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/smoke/enter" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_smoke_enter"/>
		<exit name="std/stand/so/idle/lean_wall/loop/smoke/loop"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/smoke/loop" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_smoke_loop"/>
		<exit name="std/stand/so/idle/lean_wall/loop/smoke/loop" weight="5"/>
		<exit name="std/stand/so/idle/lean_wall/loop/smoke/exit" weight="1"/>
	</state>

	<state name="std/stand/so/idle/lean_wall/loop/smoke/exit" type="once" segment="base">
		<anim name="e_so_unarmed_leanwall_smoke_exit"/>
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_r" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/so/idle/lean_wall/loop/look"/>
	</state>

	<state name="std/stand/so/idle/lean_wall_exit" type="once" segment="base">
		<anim name="e_so_ntl_leanwall_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/talk_phone" type="once" segment="base">
		<anim name="e_so_ntl_talk_phone"/>
		<keys>
			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="iphone" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_up_wall" type="once" segment="base">
		<anim name="e_so_ntl_look_up_wall"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_corner" type="once" segment="base">
		<anim name="e_so_ntl_look_corner"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_ledge_down" type="once" segment="base">
		<anim name="e_so_ntl_look_ledge_down"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_ledge_up" type="once" segment="base">
		<anim name="e_so_ntl_look_ledge_up"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_under_table" type="once" segment="base">
		<anim name="e_so_ntl_look_under_table"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/look_under_car" type="once" segment="base">
		<anim name="e_so_ntl_look_under_car"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_ntl_boxing_bag_hold" type="loop" segment="base">
		<anim name="e_so_ntl_boxing_bag_hold"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_ntl_boxing" type="loop" segment="base">
		<anim name="e_so_ntl_boxing"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_checkbag_short" type="once" segment="base">
		<anim name="e_so_checkbag_short"/>
		<exit name="std/stand/so/idle/e_so_idle_to_door_or_point"/>
	</state>

	<state name="std/stand/so/idle/e_so_idle_to_door_or_point" type="loop" segment="base">
		<anim name="e_so_idle_to_door_or_point"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_door_knock" type="once" segment="base">
		<anim name="e_so_door_knock"/>
		<exit name="std/stand/so/idle/e_so_idle_to_door_or_point"/>
	</state>

	<state name="std/stand/so/idle/e_so_door_open" type="once" segment="base">
		<anim name="e_so_door_open"/>
		<exit name="std/stand/so/idle/e_so_idle_to_door_or_point"/>
	</state>

	<state name="std/stand/so/idle/e_so_point_right" type="once" segment="base">
		<anim name="e_so_point_right"/>
		<exit name="std/stand/so/idle/e_so_idle_to_door_or_point"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_to_point_at" type="loop" segment="base">
		<anim name="e_so_sit_to_point_at"/>
		<exit name="std/stand/so/idle/e_so_sit_to_point_at"/>
	</state>

	<state name="std/stand/so/idle/e_so_point_at" type="once" segment="base">
		<anim name="e_so_point_at"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_point_at_exit_idle" type="loop" segment="base">
		<anim name="e_so_point_at_exit_idle"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_car_hood_exit" type="once" segment="base">
		<anim name="e_so_sit_on_car_hood_exit"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_on_car_hood_idle" type="loop" segment="base">
		<anim name="e_so_sit_on_car_hood_idle"/>
		<exit name="std/stand/so/idle/e_so_sit_on_car_hood_idle"/>
	</state>
	
	<state name="std/stand/so/e_so_enter_speech" type="once" segment="base">
		<to name="exit" redirect="std/stand/so/e_so_exit_speech"/>
		
		<anim name="e_so_enter_speech"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_play_sound" class_name="sound" param1="drunk_pilot_sit_down"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
			
			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
			
			<key at="enter" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="false"/>
		</keys>
		<exit name="std/stand/so/e_so_loop_speech"/>
	</state>

	<state name="std/stand/so/e_so_loop_speech" type="loop" segment="base">
		<to name="exit" redirect="std/stand/so/e_so_exit_speech"/>
		
		<anim name="e_so_loop_speech"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
			
			<key at="enter" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="false"/>
		</keys>
		
	</state>
	
	<state name="std/stand/so/e_so_exit_speech" type="once" segment="base">
		<anim name="e_so_exit_speech"/>
		<keys>
			
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
			
			<key at="enter" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="long_dis_interact_disabled" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/idle/e_so_sit_stair1" type="once" segment="base">
		<anim name="e_so_sit_stair1"/>
		<exit name="std/stand/so/idle/e_so_stair_idle1"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_stair_exit1" type="once" segment="base">
		<anim name="e_so_sit_stair_exit1"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_stair_idle1" type="once" segment="base">
		<anim name="e_so_stair_idle1"/>
		<exit name="std/stand/so/idle/e_so_sit_stair_exit1"/>
	</state>

	<state name="std/stand/so/idle/e_so_stair_idle1_pose" type="once" segment="base">
		<anim name="e_so_stair_idle1_pose"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_stair2" type="once" segment="base">
		<anim name="e_so_sit_stair2"/>
		<exit name="std/stand/so/idle/e_so_stair_idle2"/>
	</state>

	<state name="std/stand/so/idle/e_so_sit_stair_exit2" type="once" segment="base">
		<anim name="e_so_sit_stair_exit2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_stair_idle2" type="once" segment="base">
		<anim name="e_so_stair_idle2"/>
		<exit name="std/stand/so/idle/e_so_sit_stair_exit2"/>
	</state>

	<state name="std/stand/so/idle/e_so_stair_idle2_pose" type="once" segment="base">
		<anim name="e_so_stair_idle2_pose"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_bouncer_idle" type="loop" segment="base">
		<from_group name="std/spawn" blend="0"/>
		<anim name="e_so_ntl_bouncer_idle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="ik_type" extension_value="head"/>
			<key at="exit" set_extension="anim_data" extension_key="ik_type" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/e_so_use_key" type="once" segment="base">
		
		<anim name="e_so_use_key"/>
		<exit name="std/stand/still/idle/look"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_act_clbk" class_name="base" param1="anim_act_02" param2="true"/>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			
		</keys>
	</state>
	
	<state name="std/stand/so/idle/e_so_insert_keycard_ntl" type="once" segment="base">
		
		<anim name="e_so_insert_keycard_ntl"/>
		<exit name="std/stand/still/idle/look"/>
		<keys>
			<key at="trigger" trigger="anim_act_02" callback="anim_act_clbk" class_name="base" param1="anim_act_02" param2="true"/>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			
		</keys>
	</state>
	
	<state name="std/stand/so/idle/bouncer_step_right" type="once" segment="base">
		<anim name="e_so_ntl_bouncer_step_right"/>
		<exit name="std/stand/so/idle/e_so_bouncer_idle"/>
	</state>

	<state name="std/stand/so/idle/e_so_bouncer_stop" type="once" segment="base">
		<anim name="e_so_ntl_bouncer_stop"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/smoke_stand" type="template_state" segment="upper_body">
		<to name="exit" redirect="std/stand/so/idle/smoke_stand_exit"/>
		<to name="idle" redirect="std/stand/still/idle/look"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_l" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/smoke_stand/enter" type="once" segment="base">
		<anim name="e_so_ntl_smoke_enter"/>
		<exit name="std/stand/so/idle/smoke_stand/loop/default"/>
		<exit name="std/stand/so/idle/smoke_stand/loop/lean"/>
		<exit name="std/stand/so/idle/smoke_stand/loop/turn"/>
	</state>

	<state name="std/stand/so/idle/smoke_stand/loop/default" type="loop" segment="base">
		<anim name="e_so_ntl_smoke_loop"/>
	</state>

	<state name="std/stand/so/idle/smoke_stand/loop/lean" type="loop" segment="base">
		<anim name="e_so_ntl_smoke_loop_lean"/>
	</state>

	<state name="std/stand/so/idle/smoke_stand/loop/turn" type="loop" segment="base">
		<anim name="e_so_ntl_smoke_loop_turn"/>
	</state>

	<state name="std/stand/so/idle/smoke_stand_exit" type="once" segment="base">
		<anim name="e_so_ntl_smoke_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>

			<key at="enter" callback="anim_clbk_wanted_item" class_name="movement" param1="cigarette" param2="hand_r" param3="true"/>
			<key at="exit" callback="anim_clbk_flush_wanted_items" class_name="movement"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_container_impact_01" type="once" segment="base">
		<anim name="e_so_container_impact_01"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_container_impact_02" type="once" segment="base">
		<anim name="e_so_container_impact_02"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_container_impact_03" type="once" segment="base">
		<anim name="e_so_container_impact_03"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/e_so_container_kick" type="once" segment="base">
		<anim name="e_so_container_kick"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/cbt/e_so_not_dizzy_look" type="once" segment="base">
		<anim name="e_so_not_dizzy_look"/>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/cbt/e_so_not_dizzy_look_v2" type="once" segment="base">
		<anim name="e_so_not_dizzy_look_v2"/>
		<exit name="std/stand/still/idle/look"/>
	</state>


	<state name="std/stand/so/idle/e_so_keyboard_type_loop" type="template_state" segment="upper_body">
		<to name="idle" redirect="std/stand/so/idle/e_so_keyboard_type_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>
	<state name="std/stand/so/idle/e_so_keyboard_type_enter" type="once" segment="base">
		<anim name="e_so_keyboard_type_enter"/>
		<exit name="std/stand/so/idle/e_so_keyboard_type_loop"/>
	</state>

	<state name="std/stand/so/idle/e_so_keyboard_type_loop" type="loop" segment="base">
		<anim name="e_so_keyboard_type_loop"/>
	</state>

	<state name="std/stand/so/idle/e_so_keyboard_type_exit" type="once" segment="base">
		<anim name="e_so_keyboard_type_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait" type="template_state" segment="upper_body">
		<to name="idle" redirect="std/stand/so/idle/sneak_wait_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>
	<state name="std/stand/so/idle/sneak_wait_enter" type="once" segment="base">
		<anim name="e_so_std_sneak_wait_enter"/>
		<exit name="std/stand/so/idle/sneak_wait_loop"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait_loop" type="loop" segment="base">
		<anim name="e_so_std_sneak_wait_loop"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait_exit" type="once" segment="base">
		<anim name="e_so_std_sneak_wait_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait2" type="template_state" segment="upper_body">
		<to name="idle" redirect="std/stand/so/idle/sneak_wait2_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="needs_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="needs_idle" extension_value="false"/>
		</keys>
	</state>

	<state name="std/stand/so/idle/sneak_wait2_enter" type="once" segment="base">
		<anim name="e_so_crh_sneak_wait_enter"/>
		<exit name="std/stand/so/idle/sneak_wait2_loop"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait2_loop" type="loop" segment="base">
		<anim name="e_so_crh_sneak_wait_loop"/>
	</state>

	<state name="std/stand/so/idle/sneak_wait2_exit" type="once" segment="base">
		<anim name="e_so_crh_sneak_wait_exit"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="to_idle" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="to_idle" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
	
	<state name="std/stand/so/cbt" type="template_state" segment="base">
		<from_group name="std/spawn" blend="0"/>
	</state>

	<state name="std/stand/so/cbt/plant_c4_low" type="once" segment="base">
		<anim name="e_so_plant_c4_low"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/plant_c4_hi" type="once" segment="base">
		<anim name="e_so_plant_c4_hi"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/plant_c4_floor" type="once" segment="base">
		<anim name="e_so_plant_c4_floor"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/e_so_throw_grenade" type="once" segment="base">
		<anim name="e_so_throw_grenade"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/e_so_shield_throw_grenade" type="once" segment="base">
		<anim name="e_so_shield_throw_grenade"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/cbt/e_so_push_button" type="once" segment="base">
		<anim name="e_so_push_button"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/e_so_push_button_low" type="once" segment="base">
		<anim name="e_so_push_button_low"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/cbt/e_so_try_kick_door" type="once" segment="base">
		<anim name="e_so_try_kick_door"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/e_so_try_kick_door_loop" type="loop" segment="base">
		<anim name="e_so_try_kick_door_loop"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_clbk_play_sound" class_name="sound" param1="foley_impact_heavy_equipment"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>
	
	<state name="std/stand/so/cbt/e_so_interact_mid" type="once" segment="base">
		<anim name="e_so_interact_mid"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/stand/so/cbt/alarm_under_table" type="once" segment="base">
		<anim name="e_so_alarm_under_table"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/cbt/std_alarm" type="once" segment="base">
		<anim name="e_so_std_alarm"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="std/stand/so/cbt/e_so_pull_lever" type="once" segment="base">
		<anim name="e_so_pull_lever"/>
		<keys>
			<key at="trigger" trigger="anim_act_04" callback="anim_act_clbk" class_name="base" param1="anim_act_04" param2="true"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>

	<state name="upper_body" type="template_state" segment="upper_body">
		<to name="up_idle" redirect="upper_body/empty"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="upper_body_active" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="upper_body_active" extension_value="false"/>
		</keys>
	</state>

	<state name="upper_body/cmd" type="template_state" segment="upper_body">
		<default blend="5" />
	</state>

	<state name="upper_body/melee" type="mix" segment="upper_body">
		<default blend="3" />

		<anim name="cbt_melee_melee" weight="rifle*(1-tank - flamer)"/>
		<anim name="cbt_melee_melee_machete" weight="machete"/>
		<anim name="cbt_melee_melee_marching_mace" weight="marching_mace"/>
		<anim name="cbt_pistol_melee" weight="pistol"/>
		<anim name="cbt_pistol_melee_tt33" weight="tt33"/>
		<anim name="cbt_grenade_melee" weight="grenade"/>
		<anim name="cbt_melee_stab" weight="melee"/>
		<anim name="tank_melee" weight="tank"/>
		<anim name="flamer_melee" weight="flamer"/>
		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="melee" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="melee" extension_value="false"/>
			<key at="0.25" callback="anim_clbk_melee_strike" class_name="movement"/>
		</keys>

		<exit name="upper_body/empty"/>
	</state>
	
	<state name="upper_body/melee_husk" type="mix" segment="upper_body">
		<default blend="3" />

		<anim name="cbt_melee_rifle" weight="rifle"/>
		<anim name="cbt_melee_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="cbt_melee_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="cbt_melee_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="cbt_melee_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="cbt_melee_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="cbt_melee_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="cbt_melee_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="cbt_melee_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="cbt_melee_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="cbt_melee_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="cbt_melee_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="cbt_melee_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="cbt_melee_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="cbt_melee_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="cbt_melee_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="cbt_melee_grenade" weight="grenade"/>
		<anim name="cbt_melee_stab" weight="melee"/>
		<anim name="cbt_melee_stab_pick_axe" weight="pick_axe"/>
		<anim name="cbt_melee_stab_machete" weight="machete"/>
		<anim name="cbt_melee_stab_marching_mace" weight="marching_mace"/>
		<anim name="cbt_melee_pistol" weight="pistol"/>
		<anim name="cbt_pistol_melee_tt33" weight="tt33"/>

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="melee" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="melee" extension_value="false"/>
			<!--
			<key at="0.25" callback="anim_clbk_melee_strike" class_name="movement"/>
			-->
		</keys>

		<exit name="upper_body/empty"/>
	</state>	

	<state name="upper_body/melee_bayonet" type="mix" segment="upper_body">
		<default blend="3" />

		<anim name="cbt_rifle_melee_bayonet" weight="(1 - pistol)"/>
		<anim name="cbt_pistol_melee" weight="pistol"/>

		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="melee" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="melee" extension_value="false"/>
			<key at="0.25" callback="anim_clbk_melee_strike" class_name="movement"/>
		</keys>

		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/throw_grenade_charge" type="mix" segment="upper_body">
		<anim name="cbt_grenade_charge" weight="grenade"/>				
		<keys timebase="relative">
		</keys>
		<exit name="upper_body/throw_grenade"/>
	</state>

	<state name="upper_body/throw_grenade" type="mix" segment="upper_body">
		<default blend="3" />
		
		<anim name="cbt_grenade_throw" weight="grenade"/>
		
		<keys timebase="relative">
		</keys>
		<exit name="upper_body/empty"/>
	</state>


	<state name="upper_body/cmd/melee_item" type="mix" segment="upper_body">
		<default blend="3" />

		<param name="melee_knife" value="0"/>
		<param name="melee_fist" value="0"/>
		<param name="melee_baton" value="0"/>
		<param name="melee_axe" value="0"/>
		<param name="melee_fireaxe" value="0"/>
		<param name="melee_baseballbat" value="0"/>
		<param name="melee_cleaver" value="0"/>
		<param name="melee_machete" value="0"/>
		<param name="melee_briefcase" value="0"/>
		<param name="melee_baseballbat_miami" value="0"/>
		<param name="melee_freedom" value="0"/>
		<param name="melee_boxing" value="0"/>
		<param name="melee_pickaxe" value="0"/>
		<param name="melee_sandsteel" value="0"/>
		<param name="melee_great" value="0"/>
		<param name="melee_beardy" value="0"/>
		<param name="melee_buck" value="0"/>
		<param name="var1" value="0"/>
		<param name="var2" value="0"/>
		<param name="var3" value="0"/>
		<param name="var4" value="0"/>

		<anim name="cbt_pistol_melee_knife_var1" weight="pistol * melee_knife * var1"/>
		<anim name="cbt_pistol_melee_knife_var2" weight="pistol * melee_knife * var2"/>
		<anim name="cbt_rifle_melee_knife_var1" weight="(1 - pistol) * melee_knife * var1"/>
		<anim name="cbt_rifle_melee_knife_var2" weight="(1 - pistol) * melee_knife * var2"/>
		<anim name="cbt_pistol_melee_fist_var1" weight="pistol * ( melee_fist + melee_boxing ) * var1"/>
		<anim name="cbt_pistol_melee_fist_var2" weight="pistol * ( melee_fist + melee_boxing ) * var2"/>
		<anim name="cbt_rifle_melee_fist_var1" weight="(1 - pistol) * ( melee_fist + melee_boxing ) * var1"/>
		<anim name="cbt_rifle_melee_fist_var2" weight="(1 - pistol) * ( melee_fist + melee_boxing ) * var2"/>

		<anim name="cbt_rifle_melee_flag_var1" weight="melee_freedom * var1"/>
		<anim name="cbt_rifle_melee_flag_var2" weight="melee_freedom * var2"/>

		<anim name="cbt_rifle_melee_baton_var1" weight="(melee_baton + melee_buck ) * var1"/>
		<anim name="cbt_rifle_melee_baton_var2" weight="(melee_baton + melee_buck ) * var2"/>

		<anim name="cbt_rifle_melee_axe_var1" weight="(melee_axe + melee_cleaver + melee_machete + melee_fireaxe + melee_pickaxe + melee_sandsteel + melee_great + melee_beardy) * var1"/>
		<anim name="cbt_rifle_melee_axe_var2" weight="(melee_axe + melee_cleaver + melee_machete + melee_fireaxe + melee_pickaxe + melee_sandsteel + melee_great + melee_beardy) * var2"/>

		<anim name="cbt_rifle_melee_baseballbat_var1" weight="(melee_baseballbat + melee_baseballbat_miami) * var1"/>
		<anim name="cbt_rifle_melee_baseballbat_var2" weight="(melee_baseballbat + melee_baseballbat_miami) * var2"/>

		<anim name="cbt_rifle_melee_briefcase_var1" weight="melee_briefcase * var1"/>
		<anim name="cbt_rifle_melee_briefcase_var2" weight="melee_briefcase * var2"/>

		<keys timebase="relative">
			<!-- <key at="enter" callback="anim_clbk_enemy_spawn_melee_item" class_name="movement"/> -->
			<key at="trigger" trigger="anim_act_01" callback="anim_clbk_enemy_spawn_melee_item" class_name="movement"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_clbk_enemy_unspawn_melee_item" class_name="movement"/>
			<key at="exit" callback="anim_clbk_enemy_unspawn_melee_item" class_name="movement"/>
			<key at="0.35" callback="anim_clbk_melee_strike" class_name="movement"/>

			<key at="enter" callback="anim_cbk_set_melee_item_state_vars" class_name="movement"/>
			<key at="enter" set_extension="anim_data" extension_key="melee" extension_value="true"/>
			<key at="trigger" trigger="anim_act_01" callback="anim_cbk_spawn_melee_item" class_name="movement" param1="a_weapon_left"/>
			<key at="trigger" trigger="anim_act_01b" callback="anim_cbk_spawn_melee_item" class_name="movement" param1="a_weapon_right"/>
			<key at="trigger" trigger="anim_act_02" callback="anim_cbk_unspawn_melee_item" class_name="movement"/>
			<key at="exit" set_extension="anim_data" extension_key="melee" extension_value="false"/>
			<key at="exit" callback="anim_cbk_unspawn_melee_item" class_name="movement"/> <!-- Safety removal if the animation is interupted -->
		</keys>

		<exit name="upper_body/empty"/>
	</state>


	<state name="upper_body/stand_reload" type="mix" segment="upper_body">
		<anim name="stand_reload_beretta" weight="beretta92 + c45 + raging_bull + glock18"/>
		<anim name="stand_reload_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * tt33"/>
		<anim name="stand_reload_m4" weight="( 1 - tank - flamer) * ( m4 + mp5 + ak47 )"/>
		<anim name="stand_reload_r870" weight="( 1 - tank - flamer) * ( r870 + mossberg )"/>

		<anim name="tank_reload_saiga" weight="tank * saiga"/>
		<anim name="tank_reload_shotgun" weight="tank * r870"/>
		<anim name="tank_reload_lmg" weight="tank * ak47"/>

		<anim name="stand_ger_geco_npc_reload" weight="ger_geco_npc"/>
		<anim name="stand_ger_kar98_npc_reload" weight="ger_kar98_npc"/>

		<anim name="stand_reload_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="stand_reload_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="stand_reload_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="stand_reload_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="stand_reload_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="stand_reload_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="stand_reload_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="stand_reload_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="stand_reload_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="stand_reload_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<anim name="stand_reload_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="stand_reload_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="stand_reload_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="stand_reload_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="stand_reload_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="stand_grenade_reload" weight="grenade"/>
		<anim name="stand_melee_reload" weight="melee"/>
		<anim name="stand_melee_reload_machete" weight="machete"/>
		<anim name="stand_melee_reload_marching_mace" weight="marching_mace"/>

		<default blend="5" />
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="reload" extension_value="false"/>
			<key at="exit" callback="anim_clbk_reload_exit" class_name="movement"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/crouch_reload" type="mix" segment="upper_body">
		<default blend="5" />
		<anim name="crh_reload_beretta" weight="( beretta92 + c45 + raging_bull + glock18 ) * (1-shield) * ( 1 - sup )"/>
		<anim name="crh_reload_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * tt33"/>
		<anim name="crh_reload_m4" weight="( m4 + ak47 ) * ( 1 - sup )" />
		<anim name="crh_reload_sterling" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * sterling" />
		<anim name="crh_reload_sten" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * sten" />
		<anim name="crh_reload_thompson" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * thompson" />
		<anim name="crh_reload_mp38" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * mp38" />
		<anim name="crh_reload_stg44" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * stg44" />
		<anim name="crh_reload_garand" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * garand" />
		<anim name="crh_reload_springfield" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * springfield" />
		<anim name="crh_reload_mosin" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * mosin" />
		<anim name="crh_reload_m1912" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1912" />
		<anim name="crh_reload_geco" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * geco" />
		<anim name="crh_reload_mg42" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * mg42" />
		<anim name="crh_reload_dp28" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * dp28" />
		<anim name="crh_reload_m1918" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * m1918" />
		<anim name="crh_reload_carbine" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * carbine" />
		<anim name="crh_reload_bren" weight="( 1 - sup ) * ( husk1 + husk2 + husk3 + husk4 ) * bren" />
		<anim name="crh_reload_r870" weight="( r870 + mossberg )  * ( 1 - sup )" />
		<anim name="crh_reload_mp5" weight="mp5 * ( 1 - sup ) * (1-shield)" />
		<anim name="crh_reload_shield" weight="shield" />
		<anim name="sup_reload_beretta" weight="( beretta92 + c45 + raging_bull + glock18 ) * sup" />
		<anim name="sup_reload_m4" weight="( m4 + ak47 ) * sup" />
		<anim name="sup_reload_mp5" weight="mp5 * sup" />
		<anim name="sup_reload_shotgun" weight="( r870 + mossberg ) * sup" />

		<anim name="crh_reload_ger_geco_npc" weight="ger_geco_npc" />
		<anim name="sup_reload_ger_geco_npc" weight="ger_geco_npc" />
		<anim name="crh_reload_ger_kar98_npc" weight="ger_kar98_npc" />
		<anim name="sup_reload_ger_kar98_npc" weight="ger_kar98_npc" />
		<anim name="crh_grenade_reload" weight="grenade"/>
		<anim name="crh_melee_reload" weight="melee"/>
		<anim name="crh_melee_reload_machete" weight="machete"/>
		<anim name="crh_melee_reload_marching_mace" weight="marching_mace"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="reload" extension_value="false"/>
			<key at="exit" callback="anim_clbk_reload_exit" class_name="movement"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/std/recoil" type="template_state" segment="upper_body">
		<default blend="3" />
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="recoil" extension_value="false"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/std/recoil/auto" type="mixloop" segment="upper_body">
		<anim name="stand_rifle_recoil_auto" weight="( 1 - tank - flamer ) * ( 1 - sterling - sten - mg42 - dp28 - m1918 - carbine - bren - thompson - mp38 - stg44 )"/>
		<anim name="stand_shoot_aut_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="stand_shoot_aut_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="stand_shoot_aut_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="stand_shoot_aut_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="stand_shoot_aut_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="stand_shoot_aut_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="stand_shoot_aut_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="stand_shoot_aut_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="stand_shoot_aut_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="stand_shoot_aut_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="tank_recoil_saiga" weight="tank"/>
		<anim name="flamer_recoil_auto" weight="flamer"/>
		
	</state>

	<state name="upper_body/std/recoil/single" type="mix" segment="upper_body">
		<anim name="stand_rifle_recoil" weight="rifle * (1-r870) * (1-tank)"/>
		<anim name="stand_pistol_recoil" weight="pistol"/>
		<anim name="stand_pistol_recoil_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * tt33"/>
		<anim name="stand_grenade_recoil" weight="grenade"/>
		<anim name="stand_melee_recoil" weight="melee"/>
		<anim name="stand_melee_recoil_machete" weight="machete"/>
		<anim name="stand_melee_recoil_marching_mace" weight="marching_mace"/>
		<anim name="stand_r870_recoil" weight="(1-tank)*r870"/>
		<anim name="tank_recoil_saiga" weight="tank*(saiga+ak47)"/>
		<anim name="tank_recoil_shotgun" weight="tank*r870"/>

		<anim name="stand_ger_geco_npc_recoil" weight="ger_geco_npc"/>
		<anim name="stand_ger_kar98_npc_recoil" weight="ger_kar98_npc"/>

		<anim name="stand_shoot_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="stand_shoot_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="stand_shoot_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="stand_shoot_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="stand_shoot_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="stand_shoot_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="stand_shoot_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="stand_shoot_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="stand_shoot_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="stand_shoot_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="stand_shoot_recoil_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="stand_shoot_recoil_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="stand_shoot_recoil_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="stand_shoot_recoil_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="stand_shoot_recoil_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * geco"/>

	</state>

	<state name="upper_body/crh/recoil" type="template_state" segment="upper_body">
		<default blend="3" />
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="recoil" extension_value="false"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/crh/recoil/auto" type="mixloop" segment="upper_body">
		<anim name="crh_pistol_recoil_auto" weight="pistol * ( 1 - sup ) * ( 1 - shield )"/>
		<anim name="crh_pistol_recoil_auto" weight="( husk1 + husk2 + husk3 + husk4 ) * tt33"/>
		<anim name="crh_rifle_recoil_auto" weight="rifle * ( 1 - sup ) * ( 1 - shield )"/>
		<anim name="crh_shield_recoil_auto" weight="shield"/>
		<anim name="sup_pistol_recoil_auto" weight="pistol * sup * ( 1 - shield )"/>
		<anim name="sup_rifle_recoil_auto" weight="rifle * sup"/>
		<anim name="crh_rifle_recoil_auto_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="crh_rifle_recoil_auto_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="crh_rifle_recoil_auto_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="crh_rifle_recoil_auto_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="crh_rifle_recoil_auto_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="crh_rifle_recoil_auto_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="crh_rifle_recoil_auto_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="crh_rifle_recoil_auto_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/crh/recoil/single" type="mix" segment="upper_body">
		<default blend="3" />
		<anim name="crh_rifle_recoil" weight="rifle * ( 1 - ( r870 + mossberg ) ) * ( 1 - sup )"/>
		<anim name="crh_pistol_recoil" weight="pistol * ( 1 - sup ) * (1-shield)"/>
		<anim name="crh_pistol_recoil_tt33" weight="( husk1 + husk2 + husk3 + husk4 ) * tt33"/>
		<anim name="crh_r870_recoil" weight="( r870 + mossberg ) * ( 1 - sup )"/>
		<anim name="crh_shield_recoil" weight="shield"/>
		<anim name="sup_pistol_recoil" weight="pistol * sup * ( 1 - shield )"/>
		<anim name="sup_rifle_recoil" weight="rifle * ( 1 - ( r870 + mossberg ) ) * sup"/>
		<anim name="sup_shotgun_recoil" weight="r870 * sup"/>
		<anim name="crh_grenade_recoil" weight="grenade"/>
		<anim name="crh_melee_recoil" weight="melee"/>
		<anim name="crh_melee_recoil_machete" weight="machete"/>
		<anim name="crh_melee_recoil_marching_mace" weight="marching_mace"/>
		<anim name="sup_ger_geco_npc_recoil" weight="ger_geco_npc"/>
		<anim name="crh_ger_geco_npc_recoil" weight="ger_geco_npc"/>
		<anim name="sup_ger_kar98_npc_recoil" weight="ger_kar98_npc"/>
		<anim name="crh_ger_kar98_npc_recoil" weight="ger_kar98_npc"/>
		<anim name="crh_rifle_recoil_sterling" weight="( husk1 + husk2 + husk3 + husk4 ) * sterling"/>
		<anim name="crh_rifle_recoil_mg42" weight="( husk1 + husk2 + husk3 + husk4 ) * mg42"/>
		<anim name="crh_rifle_recoil_dp28" weight="( husk1 + husk2 + husk3 + husk4 ) * dp28"/>
		<anim name="crh_rifle_recoil_m1918" weight="( husk1 + husk2 + husk3 + husk4 ) * m1918"/>
		<anim name="crh_rifle_recoil_carbine" weight="( husk1 + husk2 + husk3 + husk4 ) * carbine"/>
		<anim name="crh_rifle_recoil_bren" weight="( husk1 + husk2 + husk3 + husk4 ) * bren"/>
		<anim name="crh_rifle_recoil_thompson" weight="( husk1 + husk2 + husk3 + husk4 ) * thompson"/>
		<anim name="crh_rifle_recoil_mp38" weight="( husk1 + husk2 + husk3 + husk4 ) * mp38"/>
		<anim name="crh_rifle_recoil_stg44" weight="( husk1 + husk2 + husk3 + husk4 ) * stg44"/>
		<anim name="crh_rifle_recoil_sten" weight="( husk1 + husk2 + husk3 + husk4 ) * sten"/>
		<anim name="crh_rifle_recoil_garand" weight="( husk1 + husk2 + husk3 + husk4 ) * garand"/>
		<anim name="crh_rifle_recoil_springfield" weight="( husk1 + husk2 + husk3 + husk4 ) * springfield"/>
		<anim name="crh_rifle_recoil_mosin" weight="( husk1 + husk2 + husk3 + husk4 ) * mosin"/>
		<anim name="crh_rifle_recoil_m1912" weight="( husk1 + husk2 + husk3 + husk4 ) * m1912"/>
		<anim name="crh_rifle_recoil_geco" weight="( husk1 + husk2 + husk3 + husk4 ) * geco"/>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/equip" type="mix" segment="upper_body">
		<param name="to_pistol" value="0"/>
		<param name="to_rifle" value="0"/>
		<param name="to_grenade" value="0"/>
		<param name="to_melee" value="0"/>
		
		<anim name="equip_berreta" weight="cop * to_pistol"/>
		<anim name="equip_berreta_husk1" weight="husk1 * to_pistol * tt33" />
		<anim name="equip_berreta_husk2" weight="husk2 * to_pistol * tt33" />
		<anim name="equip_berreta_husk3" weight="husk3 * to_pistol * tt33" />
		<anim name="equip_berreta_husk4" weight="husk4 * to_pistol * tt33" />
		<anim name="equip_m4" weight="cop * to_rifle"/>
		<anim name="equip_m4_husk1" weight="husk1 * to_rifle" />
		<anim name="equip_m4_husk2" weight="husk2 * to_rifle" />
		<anim name="equip_m4_husk3" weight="husk3 * to_rifle" />
		<anim name="equip_m4_husk4" weight="husk4 * to_rifle" />
		<!-- <anim name="equip_grenade_pistol" weight="(husk1+husk2+husk3+husk4) * to_grenade" />
		<anim name="equip_melee_pistol" weight="(husk1+husk2+husk3+husk4) * to_melee" /> -->
		
		<default blend="5" />
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="equip" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="equip" extension_value="false"/>
			<key at="enter" callback="anim_clbk_equip_enter" class_name="inventory"/>
			<key at="exit" callback="anim_clbk_equip_exit" class_name="inventory"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/hurt/stand/light" type="mix" segment="upper_body">
		<default blend="10" />
		<param name="high" value="0"/>
		<param name="low" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<anim name="cbt_pistol_std_hurt_upbdy_left" weight="pistol * high * l"/>
		<anim name="cbt_pistol_std_hurt_upbdy_right" weight="pistol * high * r"/>
		<anim name="cbt_pistol_std_hurt_upbdy_back" weight="pistol * high * bwd"/>

		<anim name="cbt_pistol_std_hurt_lowbdy_left" weight="pistol * low * l"/>
		<anim name="cbt_pistol_std_hurt_lowbdy_right" weight="pistol * low * r"/>

		<anim name="cbt_rifle_std_hurt_upbdy_left" weight="(1-tank) * rifle * high * l"/>
		<anim name="cbt_rifle_std_hurt_upbdy_right" weight="(1-tank) * rifle * high * r"/>
		<anim name="cbt_rifle_std_hurt_upbdy_back" weight="(1-tank) * rifle * high * bwd"/>

		<anim name="cbt_rifle_std_hurt_lowbdy_left" weight="(1-tank) * rifle * low * l"/>
		<anim name="cbt_rifle_std_hurt_lowbdy_right" weight="(1-tank) * rifle * low * r"/>

		<anim name="cbt_tank_light_hurt_upbdy_l" weight="tank * high * l"/>
		<anim name="cbt_tank_light_hurt_upbdy_r" weight="tank * high * r"/>
		<anim name="cbt_tank_light_hurt_upbdy_back" weight="tank * high * bwd"/>
		<anim name="cbt_tank_light_hurt_lowbdy_l" weight="tank * low * l"/>
		<anim name="cbt_tank_light_hurt_lowbdy_r" weight="tank * low * r"/>

		<anim name="cbt_flamer_light_hurt_upbdy_l" weight="flamer * high * l"/>
		<anim name="cbt_flamer_light_hurt_upbdy_r" weight="flamer * high * r"/>
		<anim name="cbt_flamer_light_hurt_upbdy_back" weight="flamer * high * bwd"/>
		<anim name="cbt_flamer_light_hurt_lowbdy_l" weight="flamer * low * l"/>
		<anim name="cbt_flamer_light_hurt_lowbdy_r" weight="flamer * low * r"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="upper_body_hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="upper_body_hurt" extension_value="false"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/hurt/crouch/light" type="mix" segment="upper_body">
		<default blend="10" />
		<param name="high" value="0"/>
		<param name="low" value="0"/>
		<param name="bwd" value="0"/>
		<param name="l" value="0"/>
		<param name="r" value="0"/>

		<!--crouch-->
		<anim name="cbt_pistol_crh_hurt_upbdy_left" weight="pistol * high * l * (1-sup)"/>
		<anim name="cbt_pistol_crh_hurt_upbdy_right" weight="pistol * high * r * (1-sup)"/>
		<anim name="cbt_pistol_crh_hurt_upbdy_back" weight="pistol * high * bwd * (1-sup)"/>

		<anim name="cbt_pistol_crh_hurt_lowbdy_left" weight="pistol * low * l * (1-sup)"/>
		<anim name="cbt_pistol_crh_hurt_lowbdy_right" weight="pistol * low * r * (1-sup)"/>

		<anim name="cbt_rifle_crh_hurt_upbdy_left" weight="rifle * high * l * (1-sup)"/>
		<anim name="cbt_rifle_crh_hurt_upbdy_right" weight="rifle * high * r * (1-sup)"/>
		<anim name="cbt_rifle_crh_hurt_upbdy_back" weight="rifle * high * bwd * (1-sup)"/>

		<anim name="cbt_rifle_crh_hurt_lowbdy_left" weight="rifle * low * l * (1-sup)"/>
		<anim name="cbt_rifle_crh_hurt_lowbdy_right" weight="rifle * low * r * (1-sup)"/>
		<!--suppressed-->
		<anim name="cbt_pistol_sup_hurt_upbdy_left" weight="pistol * high * l * sup"/>
		<anim name="cbt_pistol_sup_hurt_upbdy_right" weight="pistol * high * r * sup"/>
		<anim name="cbt_pistol_sup_hurt_upbdy_back" weight="pistol * high * bwd * sup"/>

		<anim name="cbt_pistol_sup_hurt_lowbdy_left" weight="pistol * low * l * sup"/>
		<anim name="cbt_pistol_sup_hurt_lowbdy_right" weight="pistol * low * r * sup"/>

		<anim name="cbt_rifle_sup_hurt_upbdy_left" weight="rifle * high * l * sup"/>
		<anim name="cbt_rifle_sup_hurt_upbdy_right" weight="rifle * high * r * sup"/>
		<anim name="cbt_rifle_sup_hurt_upbdy_back" weight="rifle * high * bwd * sup"/>

		<anim name="cbt_rifle_sup_hurt_lowbdy_left" weight="rifle * low * l * sup"/>
		<anim name="cbt_rifle_sup_hurt_lowbdy_right" weight="rifle * low * r * sup"/>


		<anim name="cbt_crh_shield_hurt_light" weight="shield"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="upper_body_hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="upper_body_hurt" extension_value="false"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/arrest" type="once" segment="upper_body">
		<anim name="cbt_rifle_arrest_gesture_var1" weight="cop * rifle"/>
		<anim name="cbt_pistol_arrest_gesture_var1" weight="cop * pistol"/>
		<anim name="tank_arrest_gesture_var1" weight="tank"/>
		<anim name="flamer_arrest_gesture_var1" weight="flamer"/>

		<default blend="5" />

		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/arrest_call" type="mix" segment="upper_body">
		<default blend="5" />

		<anim name="hos_rifle_std_call" weight="rifle"/>
		<anim name="hos_pistol_std_call" weight="pistol"/>

		<keys timebase="relative">
			<key at="0.25" callback="anim_clbk_police_called" class_name="movement"/>
			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="upper_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="upper_need_upd" extension_value="false"/>
		</keys>
		<exit name="upper_body/empty"/>
	</state>

	<state name="upper_body/stop" type="once" segment="upper_body">
		<anim name="cbt_rifle_stop_gesture_var1" weight="rifle"/>
		<anim name="cbt_pistol_stop_gesture_var1" weight="pistol"/>

		<default blend="5" />

		<exit name="upper_body/empty"/>
	</state>



	<state name="upper_body/empty" type="emptyloop" segment="upper_body">
		<from_group name="upper_body" blend="10" />
		<to name="up_idle" redirect=""/>
		<keys>

			<!-- The "full_blend" flag does not work for emptyloop states. "at" should be equal/longer than the longest blend -->
			<key at="11" callback="anim_clbk_upper_body_empty" class_name="anim_data"/>

			<key at="enter" set_extension="anim_data" extension_key="upper_body_empty" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="upper_body_empty" extension_value="false"/>
		</keys>
	</state>

	<state name="std/bleedout" type="template_state" segment="base">
		<default blend="5"/>
		<to name="bleedout" redirect="std/bleedout/look/enter"/>
		<to name="stand" redirect="std/bleedout/look/exit_to_crh"/>
		<to name="death" redirect="std/fatal/to_dead"/>
		<to name="reload" redirect="std/bleedout/reload"/>
		<to name="tied" redirect="std/surrender/hands_tied/enter/from_hands_back"/>
		<to name="fatal" redirect="std/fatal/loop"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="bleedout" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="bleedout" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/bleedout/look/enter" type="once" segment="base">
		<anim name="cbt_bleedout_enter"/>
		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="bleedout_enter" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="bleedout_enter" extension_value="false"/>

			<key at="0.8" set_extension="anim_data" extension_key="bleedout_falling" extension_value="false"/>
			<key at="enter" set_extension="anim_data" extension_key="bleedout_falling" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="bleedout_falling" extension_value="false"/>
		</keys>
		<exit name="std/bleedout/look/loop"/>
	</state>

	<state name="std/bleedout/look/exit_to_crh" type="once" segment="base">
		<anim name="cbt_bleedout_exit"/>
		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="bleedout_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="bleedout_exit" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/crouch/still/idle"/>
	</state>

	<state name="std/bleedout/reload" type="once" segment="base">
		<default blend="8"/>
		<anim name="cbt_bleedout_reload"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="reload" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="reload" extension_value="false"/>
			<key at="exit" callback="anim_clbk_reload_exit" class_name="movement"/>
		</keys>
		<exit name="std/bleedout/look/loop"/>
	</state>

	<state name="std/bleedout/look/loop" type="mixloop" segment="base">
		<param name="angle0" value="0"/>
		<param name="angle90" value="0"/>
		<param name="angle90neg" value="0"/>
		<param name="angle180" value="0"/>

		<anim name="cbt_bleedout_0" weight="angle0"/>
		<anim name="cbt_bleedout_l90" weight="angle90neg"/>
		<anim name="cbt_bleedout_r90" weight="angle90"/>
		<anim name="cbt_bleedout_180" weight="angle180"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="bleedout_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="bleedout_loop" extension_value="false"/>
		</keys>
	</state>

	<state name="std/tased" type="template_state" segment="base">
		<default blend="5"/>
		<to name="stand" redirect="std/crouch/still/idle"/>
		<to name="death" redirect="std/death/bullet/still"/>
		<to name="tied" redirect="std/surrender/hands_tied/enter/from_hands_back"/>
		<to name="fatal" redirect="std/fatal/enter"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="tased" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="tased" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_no_recoil" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_no_recoil" extension_value="false"/>
		</keys>
	</state>

	<state name="std/tased/loop" type="loop" segment="base">
		<anim name="gen_hrt_electrocuted"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="tased_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="tased_loop" extension_value="false"/>
		</keys>
	</state>

	<state name="std/fatal" type="template_state" segment="base">
		<default blend="5"/>
		<to name="stand" redirect="std/fatal/to_stand"/>
		<to name="death" redirect="std/fatal/to_dead"/>
		<to name="tied" redirect="std/surrender/hands_tied/enter/from_hands_back"/>

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fatal" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fatal" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="hurt" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="hurt" extension_value="false"/>
		</keys>
	</state>


	<state name="std/fatal/enter" type="once" segment="base">
		<anim name="cbt_fatal_enter"/>
		<from_group name="std/bleedout" blend="12" />

		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fatal_enter" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fatal_enter" extension_value="false"/>
		</keys>
		<exit name="std/fatal/loop"/>
	</state>

	<state name="std/fatal/loop" type="loop" segment="base">
		<anim name="cbt_fatal_idle"/>
		<keys>
			<key at="enter" set_extension="anim_data" extension_key="fatal_loop" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fatal_loop" extension_value="false"/>
		</keys>
	</state>

	<state name="std/fatal/to_dead" type="once" segment="base">
		<anim name="cbt_fatal_death"/>
		<exit name="death_exit"/>
	</state>

	<state name="std/fatal/to_stand" type="once" segment="base">
		<anim name="cbt_fatal_exit"/>
		<keys timebase="relative">
			<key at="enter" set_extension="anim_data" extension_key="fatal_exit" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="fatal_exit" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="act" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="act" extension_value="false"/>

			<key at="enter" set_extension="anim_data" extension_key="base_need_upd" extension_value="true"/>
			<key at="exit" set_extension="anim_data" extension_key="base_need_upd" extension_value="false"/>
		</keys>
		<exit name="std/stand/still/idle/look"/>
	</state>
</xml>
